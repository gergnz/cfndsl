# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require "cfndsl/cloudformation_template"
require "cfndsl/types"

module CfnDsl
  module AWS
    module Serverless
      # CloudFormation resource AWS::Serverless::SimpleTable
      class SimpleTable < ResourceType
        # Property Definition PrimaryKey
        class PrimaryKey < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Type
          def Type(value)
            dsl_attribute(:Type, value)
          end
        end

        # Property Definition ProvisionedThroughput
        class ProvisionedThroughput < PropertyType
          #   @param [Number|JSONable] value
          #     The value to use for ReadCapacityUnits
          def ReadCapacityUnits(value)
            dsl_attribute(:ReadCapacityUnits, value)
          end

          #   @param [Number|JSONable] value
          #     The value to use for WriteCapacityUnits
          def WriteCapacityUnits(value)
            dsl_attribute(:WriteCapacityUnits, value)
          end
        end

        # Property Definition SSESpecification
        class SSESpecification < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for SSEEnabled
          def SSEEnabled(value)
            dsl_attribute(:SSEEnabled, value)
          end
        end

        #   @param [PrimaryKey|JSONable] value
        #     The value to use for PrimaryKey
        # @@overload PrimaryKey(&block)
        #   Set :PrimaryKey from block via instance eval of a new PrimaryKey
        def PrimaryKey(value = nil, **value_hash, &block)
          dsl_attribute(:PrimaryKey, value, attr_class: PrimaryKey, **value_hash, &block)
        end

        #   @param [ProvisionedThroughput|JSONable] value
        #     The value to use for ProvisionedThroughput
        # @@overload ProvisionedThroughput(&block)
        #   Set :ProvisionedThroughput from block via instance eval of a new ProvisionedThroughput
        def ProvisionedThroughput(value = nil, **value_hash, &block)
          dsl_attribute(:ProvisionedThroughput, value, attr_class: ProvisionedThroughput, **value_hash, &block)
        end

        #   @param [SSESpecification|JSONable] value
        #     The value to use for SSESpecification
        # @@overload SSESpecification(&block)
        #   Set :SSESpecification from block via instance eval of a new SSESpecification
        def SSESpecification(value = nil, **value_hash, &block)
          dsl_attribute(:SSESpecification, value, attr_class: SSESpecification, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Serverless::SimpleTable]
    def AWS_Serverless_SimpleTable(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Serverless::SimpleTable, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
