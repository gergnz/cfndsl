# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module OpsWorksCM
      # Resource Type definition for AWS::OpsWorksCM::Server
      class Server < ResourceType
        # Property Definition EngineAttribute
        class EngineAttribute < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for KeyPair
        def KeyPair(value)
          dsl_attribute(:KeyPair, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for EngineVersion
        def EngineVersion(value)
          dsl_attribute(:EngineVersion, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ServiceRoleArn
        def ServiceRoleArn(value)
          dsl_attribute(:ServiceRoleArn, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for DisableAutomatedBackup
        def DisableAutomatedBackup(value)
          dsl_attribute(:DisableAutomatedBackup, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for BackupId
        def BackupId(value)
          dsl_attribute(:BackupId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for EngineModel
        def EngineModel(value)
          dsl_attribute(:EngineModel, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PreferredMaintenanceWindow
        def PreferredMaintenanceWindow(value)
          dsl_attribute(:PreferredMaintenanceWindow, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for AssociatePublicIpAddress
        def AssociatePublicIpAddress(value)
          dsl_attribute(:AssociatePublicIpAddress, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for InstanceProfileArn
        def InstanceProfileArn(value)
          dsl_attribute(:InstanceProfileArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CustomCertificate
        def CustomCertificate(value)
          dsl_attribute(:CustomCertificate, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PreferredBackupWindow
        def PreferredBackupWindow(value)
          dsl_attribute(:PreferredBackupWindow, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SecurityGroupIds
        def SecurityGroupIds(values)
          dsl_list_attribute(:SecurityGroupIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SecurityGroupIds
        def SecurityGroupId(value, fn_if: nil)
          dsl_push_attribute(:SecurityGroupIds, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SubnetIds
        def SubnetIds(values)
          dsl_list_attribute(:SubnetIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SubnetIds
        def SubnetId(value, fn_if: nil)
          dsl_push_attribute(:SubnetIds, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for CustomDomain
        def CustomDomain(value)
          dsl_attribute(:CustomDomain, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Endpoint
        def Endpoint(value)
          dsl_attribute(:Endpoint, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CustomPrivateKey
        def CustomPrivateKey(value)
          dsl_attribute(:CustomPrivateKey, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ServerName
        def ServerName(value)
          dsl_attribute(:ServerName, value)
        end

        # @param [Array<EngineAttribute>|JSONable>] values
        #   The List of values to use for EngineAttributes
        def EngineAttributes(values)
          dsl_list_attribute(:EngineAttributes, values)
        end

        #  @param [EngineAttribute|JSONable] value  Append value to the List
        #    The List of values to use for EngineAttributes
        # @@overload EngineAttribute(&block)
        # Append value to the List from block via instance eval of a new EngineAttribute
        def EngineAttribute(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:EngineAttributes, value, fn_if: fn_if, attr_class: EngineAttribute, **value_hash, &block)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for BackupRetentionCount
        def BackupRetentionCount(value)
          dsl_attribute(:BackupRetentionCount, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for InstanceType
        def InstanceType(value)
          dsl_attribute(:InstanceType, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Engine
        def Engine(value)
          dsl_attribute(:Engine, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::OpsWorksCM::Server]
    def AWS_OpsWorksCM_Server(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::OpsWorksCM::Server, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
