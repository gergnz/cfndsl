# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module AppSync
      # Resource Type definition for AWS::AppSync::GraphQLApi
      class GraphQLApi < ResourceType
        # Property Definition OpenIDConnectConfig
        class OpenIDConnectConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ClientId
          def ClientId(value)
            dsl_attribute(:ClientId, value)
          end

          #   @param [Number|JSONable] value
          #     The value to use for AuthTTL
          def AuthTTL(value)
            dsl_attribute(:AuthTTL, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Issuer
          def Issuer(value)
            dsl_attribute(:Issuer, value)
          end

          #   @param [Number|JSONable] value
          #     The value to use for IatTTL
          def IatTTL(value)
            dsl_attribute(:IatTTL, value)
          end
        end

        # Property Definition UserPoolConfig
        class UserPoolConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for AppIdClientRegex
          def AppIdClientRegex(value)
            dsl_attribute(:AppIdClientRegex, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for UserPoolId
          def UserPoolId(value)
            dsl_attribute(:UserPoolId, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for AwsRegion
          def AwsRegion(value)
            dsl_attribute(:AwsRegion, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DefaultAction
          def DefaultAction(value)
            dsl_attribute(:DefaultAction, value)
          end
        end

        # Property Definition Tags
        class Tags < PropertyType
        end

        # Property Definition AdditionalAuthenticationProviders
        class AdditionalAuthenticationProviders < PropertyType
        end

        # Property Definition LogConfig
        class LogConfig < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for ExcludeVerboseContent
          def ExcludeVerboseContent(value)
            dsl_attribute(:ExcludeVerboseContent, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for FieldLogLevel
          def FieldLogLevel(value)
            dsl_attribute(:FieldLogLevel, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for CloudWatchLogsRoleArn
          def CloudWatchLogsRoleArn(value)
            dsl_attribute(:CloudWatchLogsRoleArn, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for GraphQLUrl
        def GraphQLUrl(value)
          dsl_attribute(:GraphQLUrl, value)
        end

        #   @param [OpenIDConnectConfig|JSONable] value
        #     The value to use for OpenIDConnectConfig
        # @@overload OpenIDConnectConfig(&block)
        #   Set :OpenIDConnectConfig from block via instance eval of a new OpenIDConnectConfig
        def OpenIDConnectConfig(value = nil, **value_hash, &block)
          dsl_attribute(:OpenIDConnectConfig, value, attr_class: OpenIDConnectConfig, **value_hash, &block)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for XrayEnabled
        def XrayEnabled(value)
          dsl_attribute(:XrayEnabled, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [UserPoolConfig|JSONable] value
        #     The value to use for UserPoolConfig
        # @@overload UserPoolConfig(&block)
        #   Set :UserPoolConfig from block via instance eval of a new UserPoolConfig
        def UserPoolConfig(value = nil, **value_hash, &block)
          dsl_attribute(:UserPoolConfig, value, attr_class: UserPoolConfig, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApiId
        def ApiId(value)
          dsl_attribute(:ApiId, value)
        end

        #   @param [Tags|JSONable] value
        #     The value to use for Tags
        # @@overload Tags(&block)
        #   Set :Tags from block via instance eval of a new Tags
        def Tags(value = nil, **value_hash, &block)
          dsl_attribute(:Tags, value, attr_class: Tags, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AuthenticationType
        def AuthenticationType(value)
          dsl_attribute(:AuthenticationType, value)
        end

        #   @param [LogConfig|JSONable] value
        #     The value to use for LogConfig
        # @@overload LogConfig(&block)
        #   Set :LogConfig from block via instance eval of a new LogConfig
        def LogConfig(value = nil, **value_hash, &block)
          dsl_attribute(:LogConfig, value, attr_class: LogConfig, **value_hash, &block)
        end

        #   @param [AdditionalAuthenticationProviders|JSONable] value
        #     The value to use for AdditionalAuthenticationProviders
        # @@overload AdditionalAuthenticationProviders(&block)
        #   Set :AdditionalAuthenticationProviders from block via instance eval of a new AdditionalAuthenticationProviders
        def AdditionalAuthenticationProviders(value = nil, **value_hash, &block)
          dsl_attribute(:AdditionalAuthenticationProviders, value, attr_class: AdditionalAuthenticationProviders, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::AppSync::GraphQLApi]
    def AWS_AppSync_GraphQLApi(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::AppSync::GraphQLApi, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
