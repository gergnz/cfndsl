# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module AppSync
      # Resource Type definition for AWS::AppSync::ApiCache
      class ApiCache < ResourceType
        #   @param [String|JSONable] value
        #     The value to use for Type
        def Type(value)
          dsl_attribute(:Type, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for TransitEncryptionEnabled
        def TransitEncryptionEnabled(value)
          dsl_attribute(:TransitEncryptionEnabled, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for AtRestEncryptionEnabled
        def AtRestEncryptionEnabled(value)
          dsl_attribute(:AtRestEncryptionEnabled, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApiId
        def ApiId(value)
          dsl_attribute(:ApiId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApiCachingBehavior
        def ApiCachingBehavior(value)
          dsl_attribute(:ApiCachingBehavior, value)
        end

        #   @param [Number|JSONable] value
        #     The value to use for Ttl
        def Ttl(value)
          dsl_attribute(:Ttl, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::AppSync::ApiCache]
    def AWS_AppSync_ApiCache(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::AppSync::ApiCache, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
