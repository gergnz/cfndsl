# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module WAF
      # Resource Type definition for AWS::WAF::WebACL
      class WebACL < ResourceType
        # Property Definition ActivatedRule
        class ActivatedRule < PropertyType
          #   @param [WafAction|JSONable] value
          #     The value to use for Action
          # @@overload Action(&block)
          #   Set :Action from block via instance eval of a new WafAction
          def Action(value = nil, **value_hash, &block)
            dsl_attribute(:Action, value, attr_class: WafAction, **value_hash, &block)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Priority
          def Priority(value)
            dsl_attribute(:Priority, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for RuleId
          def RuleId(value)
            dsl_attribute(:RuleId, value)
          end
        end

        # Property Definition WafAction
        class WafAction < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Type
          def Type(value)
            dsl_attribute(:Type, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [WafAction|JSONable] value
        #     The value to use for DefaultAction
        # @@overload DefaultAction(&block)
        #   Set :DefaultAction from block via instance eval of a new WafAction
        def DefaultAction(value = nil, **value_hash, &block)
          dsl_attribute(:DefaultAction, value, attr_class: WafAction, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for MetricName
        def MetricName(value)
          dsl_attribute(:MetricName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        # @param [Array<ActivatedRule>|JSONable>] values
        #   The List of values to use for Rules
        def Rules(values)
          dsl_list_attribute(:Rules, values)
        end

        #  @param [ActivatedRule|JSONable] value  Append value to the List
        #    The List of values to use for Rules
        # @@overload Rule(&block)
        # Append value to the List from block via instance eval of a new ActivatedRule
        def Rule(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Rules, value, fn_if: fn_if, attr_class: ActivatedRule, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::WAF::WebACL]
    def AWS_WAF_WebACL(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::WAF::WebACL, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
