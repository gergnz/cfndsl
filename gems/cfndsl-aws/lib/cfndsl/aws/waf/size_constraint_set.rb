# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module WAF
      # Resource Type definition for AWS::WAF::SizeConstraintSet
      class SizeConstraintSet < ResourceType
        # Property Definition SizeConstraint
        class SizeConstraint < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ComparisonOperator
          def ComparisonOperator(value)
            dsl_attribute(:ComparisonOperator, value)
          end

          #   @param [FieldToMatch|JSONable] value
          #     The value to use for FieldToMatch
          # @@overload FieldToMatch(&block)
          #   Set :FieldToMatch from block via instance eval of a new FieldToMatch
          def FieldToMatch(value = nil, **value_hash, &block)
            dsl_attribute(:FieldToMatch, value, attr_class: FieldToMatch, **value_hash, &block)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Size
          def Size(value)
            dsl_attribute(:Size, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for TextTransformation
          def TextTransformation(value)
            dsl_attribute(:TextTransformation, value)
          end
        end

        # Property Definition FieldToMatch
        class FieldToMatch < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Data
          def Data(value)
            dsl_attribute(:Data, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Type
          def Type(value)
            dsl_attribute(:Type, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        # @param [Array<SizeConstraint>|JSONable>] values
        #   The List of values to use for SizeConstraints
        def SizeConstraints(values)
          dsl_list_attribute(:SizeConstraints, values)
        end

        #  @param [SizeConstraint|JSONable] value  Append value to the List
        #    The List of values to use for SizeConstraints
        # @@overload SizeConstraint(&block)
        # Append value to the List from block via instance eval of a new SizeConstraint
        def SizeConstraint(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:SizeConstraints, value, fn_if: fn_if, attr_class: SizeConstraint, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::WAF::SizeConstraintSet]
    def AWS_WAF_SizeConstraintSet(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::WAF::SizeConstraintSet, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
