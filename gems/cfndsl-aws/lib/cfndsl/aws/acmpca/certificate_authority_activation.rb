# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ACMPCA
      # Used to install the certificate authority certificate and update the certificate authority status.
      # @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_ACMPCA.html
      class CertificateAuthorityActivation < ResourceType
        #   @param [String|JSONable] value
        #     Arn of the Certificate Authority.
        def CertificateAuthorityArn(value)
          dsl_attribute(:CertificateAuthorityArn, value)
        end

        #   @param [String|JSONable] value
        #     Certificate Authority certificate that will be installed in the Certificate Authority.
        def Certificate(value)
          dsl_attribute(:Certificate, value)
        end

        #   @param [String|JSONable] value
        #     Certificate chain for the Certificate Authority certificate.
        def CertificateChain(value)
          dsl_attribute(:CertificateChain, value)
        end

        #   @param [String|JSONable] value
        #     The status of the Certificate Authority.
        def Status(value)
          dsl_attribute(:Status, value)
        end

        #   @param [String|JSONable] value
        #     The complete certificate chain, including the Certificate Authority certificate.
        def CompleteCertificateChain(value)
          dsl_attribute(:CompleteCertificateChain, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ACMPCA::CertificateAuthorityActivation]
    def AWS_ACMPCA_CertificateAuthorityActivation(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ACMPCA::CertificateAuthorityActivation, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
