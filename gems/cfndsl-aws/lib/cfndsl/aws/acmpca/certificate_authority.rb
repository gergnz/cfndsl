# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ACMPCA
      # Private certificate authority.
      # @see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/AWS_ACMPCA.html
      class CertificateAuthority < ResourceType
        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # Structure that contains X.500 distinguished name information for your CA.
        class Subject < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Country
          def Country(value)
            dsl_attribute(:Country, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Organization
          def Organization(value)
            dsl_attribute(:Organization, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for OrganizationalUnit
          def OrganizationalUnit(value)
            dsl_attribute(:OrganizationalUnit, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DistinguishedNameQualifier
          def DistinguishedNameQualifier(value)
            dsl_attribute(:DistinguishedNameQualifier, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for State
          def State(value)
            dsl_attribute(:State, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for CommonName
          def CommonName(value)
            dsl_attribute(:CommonName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for SerialNumber
          def SerialNumber(value)
            dsl_attribute(:SerialNumber, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Locality
          def Locality(value)
            dsl_attribute(:Locality, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Title
          def Title(value)
            dsl_attribute(:Title, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Surname
          def Surname(value)
            dsl_attribute(:Surname, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for GivenName
          def GivenName(value)
            dsl_attribute(:GivenName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Initials
          def Initials(value)
            dsl_attribute(:Initials, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Pseudonym
          def Pseudonym(value)
            dsl_attribute(:Pseudonym, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for GenerationQualifier
          def GenerationQualifier(value)
            dsl_attribute(:GenerationQualifier, value)
          end
        end

        # Your certificate authority can create and maintain a certificate revocation list (CRL). A CRL contains information about certificates that have been revoked.
        class CrlConfiguration < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for Enabled
          def Enabled(value)
            dsl_attribute(:Enabled, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for ExpirationInDays
          def ExpirationInDays(value)
            dsl_attribute(:ExpirationInDays, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for CustomCname
          def CustomCname(value)
            dsl_attribute(:CustomCname, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for S3BucketName
          def S3BucketName(value)
            dsl_attribute(:S3BucketName, value)
          end
        end

        # Certificate Authority revocation information.
        class RevocationConfiguration < PropertyType
          #   @param [CrlConfiguration|JSONable] value
          #     The value to use for CrlConfiguration
          # @@overload CrlConfiguration(&block)
          #   Set :CrlConfiguration from block via instance eval of a new CrlConfiguration
          def CrlConfiguration(value = nil, **value_hash, &block)
            dsl_attribute(:CrlConfiguration, value, attr_class: CrlConfiguration, **value_hash, &block)
          end
        end

        #   @param [String|JSONable] value
        #     The Amazon Resource Name (ARN) of the certificate authority.
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The type of the certificate authority.
        def Type(value)
          dsl_attribute(:Type, value)
        end

        #   @param [String|JSONable] value
        #     Public key algorithm and size, in bits, of the key pair that your CA creates when it issues a certificate.
        def KeyAlgorithm(value)
          dsl_attribute(:KeyAlgorithm, value)
        end

        #   @param [String|JSONable] value
        #     Algorithm your CA uses to sign certificate requests.
        def SigningAlgorithm(value)
          dsl_attribute(:SigningAlgorithm, value)
        end

        #   @param [Subject|JSONable] value
        #     Structure that contains X.500 distinguished name information for your CA.
        # @@overload Subject(&block)
        #   Set :Subject from block via instance eval of a new Subject
        def Subject(value = nil, **value_hash, &block)
          dsl_attribute(:Subject, value, attr_class: Subject, **value_hash, &block)
        end

        #   @param [RevocationConfiguration|JSONable] value
        #     Certificate revocation information used by the CreateCertificateAuthority and UpdateCertificateAuthority actions.
        # @@overload RevocationConfiguration(&block)
        #   Set :RevocationConfiguration from block via instance eval of a new RevocationConfiguration
        def RevocationConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:RevocationConfiguration, value, attr_class: RevocationConfiguration, **value_hash, &block)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The base64 PEM-encoded certificate signing request (CSR) for your certificate authority certificate.
        def CertificateSigningRequest(value)
          dsl_attribute(:CertificateSigningRequest, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ACMPCA::CertificateAuthority]
    def AWS_ACMPCA_CertificateAuthority(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ACMPCA::CertificateAuthority, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
