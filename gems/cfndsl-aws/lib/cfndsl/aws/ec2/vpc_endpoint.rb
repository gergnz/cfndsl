# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module EC2
      # Resource Type definition for AWS::EC2::VPCEndpoint
      class VPCEndpoint < ResourceType
        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CreationTimestamp
        def CreationTimestamp(value)
          dsl_attribute(:CreationTimestamp, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for DnsEntries
        def DnsEntries(values)
          dsl_list_attribute(:DnsEntries, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for DnsEntries
        def DnsEntry(value, fn_if: nil)
          dsl_push_attribute(:DnsEntries, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for NetworkInterfaceIds
        def NetworkInterfaceIds(values)
          dsl_list_attribute(:NetworkInterfaceIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for NetworkInterfaceIds
        def NetworkInterfaceId(value, fn_if: nil)
          dsl_push_attribute(:NetworkInterfaceIds, value, fn_if: fn_if)
        end

        #   @param [Object|JSONable] value
        #     The value to use for PolicyDocument
        def PolicyDocument(value)
          dsl_attribute(:PolicyDocument, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for PrivateDnsEnabled
        def PrivateDnsEnabled(value)
          dsl_attribute(:PrivateDnsEnabled, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for RouteTableIds
        def RouteTableIds(values)
          dsl_list_attribute(:RouteTableIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for RouteTableIds
        def RouteTableId(value, fn_if: nil)
          dsl_push_attribute(:RouteTableIds, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SecurityGroupIds
        def SecurityGroupIds(values)
          dsl_list_attribute(:SecurityGroupIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SecurityGroupIds
        def SecurityGroupId(value, fn_if: nil)
          dsl_push_attribute(:SecurityGroupIds, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for ServiceName
        def ServiceName(value)
          dsl_attribute(:ServiceName, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SubnetIds
        def SubnetIds(values)
          dsl_list_attribute(:SubnetIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SubnetIds
        def SubnetId(value, fn_if: nil)
          dsl_push_attribute(:SubnetIds, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for VpcEndpointType
        def VpcEndpointType(value)
          dsl_attribute(:VpcEndpointType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for VpcId
        def VpcId(value)
          dsl_attribute(:VpcId, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::EC2::VPCEndpoint]
    def AWS_EC2_VPCEndpoint(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::EC2::VPCEndpoint, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
