# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module EC2
      # Resource Type definition for AWS::EC2::SecurityGroup
      class SecurityGroup < ResourceType
        # Property Definition Ingress
        class Ingress < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for CidrIp
          def CidrIp(value)
            dsl_attribute(:CidrIp, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for CidrIpv6
          def CidrIpv6(value)
            dsl_attribute(:CidrIpv6, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Description
          def Description(value)
            dsl_attribute(:Description, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for FromPort
          def FromPort(value)
            dsl_attribute(:FromPort, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for SourceSecurityGroupName
          def SourceSecurityGroupName(value)
            dsl_attribute(:SourceSecurityGroupName, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for ToPort
          def ToPort(value)
            dsl_attribute(:ToPort, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for SourceSecurityGroupOwnerId
          def SourceSecurityGroupOwnerId(value)
            dsl_attribute(:SourceSecurityGroupOwnerId, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for IpProtocol
          def IpProtocol(value)
            dsl_attribute(:IpProtocol, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for SourceSecurityGroupId
          def SourceSecurityGroupId(value)
            dsl_attribute(:SourceSecurityGroupId, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for SourcePrefixListId
          def SourcePrefixListId(value)
            dsl_attribute(:SourcePrefixListId, value)
          end
        end

        # Property Definition Egress
        class Egress < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for CidrIp
          def CidrIp(value)
            dsl_attribute(:CidrIp, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for CidrIpv6
          def CidrIpv6(value)
            dsl_attribute(:CidrIpv6, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Description
          def Description(value)
            dsl_attribute(:Description, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for FromPort
          def FromPort(value)
            dsl_attribute(:FromPort, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for ToPort
          def ToPort(value)
            dsl_attribute(:ToPort, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for IpProtocol
          def IpProtocol(value)
            dsl_attribute(:IpProtocol, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DestinationSecurityGroupId
          def DestinationSecurityGroupId(value)
            dsl_attribute(:DestinationSecurityGroupId, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DestinationPrefixListId
          def DestinationPrefixListId(value)
            dsl_attribute(:DestinationPrefixListId, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for GroupDescription
        def GroupDescription(value)
          dsl_attribute(:GroupDescription, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for GroupName
        def GroupName(value)
          dsl_attribute(:GroupName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for VpcId
        def VpcId(value)
          dsl_attribute(:VpcId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        # @param [Array<Ingress>|JSONable>] values
        #   The List of values to use for SecurityGroupIngress
        def SecurityGroupIngressRules(values)
          dsl_list_attribute(:SecurityGroupIngress, values)
        end

        #  @param [Ingress|JSONable] value  Append value to the List
        #    The List of values to use for SecurityGroupIngress
        # @@overload SecurityGroupIngress(&block)
        # Append value to the List from block via instance eval of a new Ingress
        def SecurityGroupIngress(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:SecurityGroupIngress, value, fn_if: fn_if, attr_class: Ingress, **value_hash, &block)
        end

        # @param [Array<Egress>|JSONable>] values
        #   The List of values to use for SecurityGroupEgress
        def SecurityGroupEgressRules(values)
          dsl_list_attribute(:SecurityGroupEgress, values)
        end

        #  @param [Egress|JSONable] value  Append value to the List
        #    The List of values to use for SecurityGroupEgress
        # @@overload SecurityGroupEgress(&block)
        # Append value to the List from block via instance eval of a new Egress
        def SecurityGroupEgress(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:SecurityGroupEgress, value, fn_if: fn_if, attr_class: Egress, **value_hash, &block)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for GroupId
        def GroupId(value)
          dsl_attribute(:GroupId, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::EC2::SecurityGroup]
    def AWS_EC2_SecurityGroup(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::EC2::SecurityGroup, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
