# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Athena
      # Resource schema for AWS::Athena::DataCatalog
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-athena.git
      class DataCatalog < ResourceType
        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        #   @param [String|JSONable] value
        #     The name of the data catalog to create. The catalog name must be unique for the AWS account and can use a maximum of 128 alphanumeric, underscore, at sign, or hyphen characters.
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     A description of the data catalog to be created.
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [Object|JSONable] value
        #     Specifies the Lambda function or functions to use for creating the data catalog. This is a mapping whose values depend on the catalog type.
        def Parameters(value)
          dsl_attribute(:Parameters, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   A list of comma separated tags to add to the data catalog that is created.
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    A list of comma separated tags to add to the data catalog that is created.
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The type of data catalog to create: LAMBDA for a federated catalog, GLUE for AWS Glue Catalog, or HIVE for an external hive metastore.
        def Type(value)
          dsl_attribute(:Type, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Athena::DataCatalog]
    def AWS_Athena_DataCatalog(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Athena::DataCatalog, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
