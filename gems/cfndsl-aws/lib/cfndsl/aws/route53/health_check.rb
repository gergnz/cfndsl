# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Route53
      # Resource schema for AWS::Route53::HealthCheck.
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-route53.git
      class HealthCheck < ResourceType
        # A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.
        class AlarmIdentifier < PropertyType
          #   @param [String|JSONable] value
          #     The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy.
          def Name(value)
            dsl_attribute(:Name, value)
          end

          #   @param [String|JSONable] value
          #     For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in.
          def Region(value)
            dsl_attribute(:Region, value)
          end
        end

        # A key-value pair to associate with a resource.
        class HealthCheckTag < PropertyType
          #   @param [String|JSONable] value
          #     The key name of the tag.
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value for the tag.
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for HealthCheckId
        def HealthCheckId(value)
          dsl_attribute(:HealthCheckId, value)
        end

        #   @param [Object|JSONable] value
        #     A complex type that contains information about the health check.
        def HealthCheckConfig(value)
          dsl_attribute(:HealthCheckConfig, value)
        end

        # @param [Array<HealthCheckTag>|JSONable>] values
        #   An array of key-value pairs to apply to this resource.
        def HealthCheckTags(values)
          dsl_list_attribute(:HealthCheckTags, values)
        end

        #  @param [HealthCheckTag|JSONable] value  Append value to the List
        #    An array of key-value pairs to apply to this resource.
        # @@overload HealthCheckTag(&block)
        # Append value to the List from block via instance eval of a new HealthCheckTag
        def HealthCheckTag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:HealthCheckTags, value, fn_if: fn_if, attr_class: HealthCheckTag, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Route53::HealthCheck]
    def AWS_Route53_HealthCheck(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Route53::HealthCheck, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
