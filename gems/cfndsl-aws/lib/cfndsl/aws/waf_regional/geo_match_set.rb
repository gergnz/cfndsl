# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module WAFRegional
      # Resource Type definition for AWS::WAFRegional::GeoMatchSet
      class GeoMatchSet < ResourceType
        # Property Definition GeoMatchConstraint
        class GeoMatchConstraint < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Type
          def Type(value)
            dsl_attribute(:Type, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        # @param [Array<GeoMatchConstraint>|JSONable>] values
        #   The List of values to use for GeoMatchConstraints
        def GeoMatchConstraints(values)
          dsl_list_attribute(:GeoMatchConstraints, values)
        end

        #  @param [GeoMatchConstraint|JSONable] value  Append value to the List
        #    The List of values to use for GeoMatchConstraints
        # @@overload GeoMatchConstraint(&block)
        # Append value to the List from block via instance eval of a new GeoMatchConstraint
        def GeoMatchConstraint(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:GeoMatchConstraints, value, fn_if: fn_if, attr_class: GeoMatchConstraint, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::WAFRegional::GeoMatchSet]
    def AWS_WAFRegional_GeoMatchSet(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::WAFRegional::GeoMatchSet, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
