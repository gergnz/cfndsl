# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Amplify
      # Resource Type definition for AWS::Amplify::App
      class App < ResourceType
        # Property Definition AutoBranchCreationConfig
        class AutoBranchCreationConfig < PropertyType
          # @param [Array<EnvironmentVariable>|JSONable>] values
          #   The List of values to use for EnvironmentVariables
          def EnvironmentVariables(values)
            dsl_list_attribute(:EnvironmentVariables, values)
          end

          #  @param [EnvironmentVariable|JSONable] value  Append value to the List
          #    The List of values to use for EnvironmentVariables
          # @@overload EnvironmentVariabl(&block)
          # Append value to the List from block via instance eval of a new EnvironmentVariable
          def EnvironmentVariabl(value = nil, fn_if: nil, **value_hash, &block)
            dsl_push_attribute(:EnvironmentVariables, value, fn_if: fn_if, attr_class: EnvironmentVariable, **value_hash, &block)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for EnableAutoBranchCreation
          def EnableAutoBranchCreation(value)
            dsl_attribute(:EnableAutoBranchCreation, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for PullRequestEnvironmentName
          def PullRequestEnvironmentName(value)
            dsl_attribute(:PullRequestEnvironmentName, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for AutoBranchCreationPatterns
          def AutoBranchCreationPatterns(values)
            dsl_list_attribute(:AutoBranchCreationPatterns, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for AutoBranchCreationPatterns
          def AutoBranchCreationPattern(value, fn_if: nil)
            dsl_push_attribute(:AutoBranchCreationPatterns, value, fn_if: fn_if)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for EnablePullRequestPreview
          def EnablePullRequestPreview(value)
            dsl_attribute(:EnablePullRequestPreview, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for EnableAutoBuild
          def EnableAutoBuild(value)
            dsl_attribute(:EnableAutoBuild, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for BuildSpec
          def BuildSpec(value)
            dsl_attribute(:BuildSpec, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Stage
          def Stage(value)
            dsl_attribute(:Stage, value)
          end

          #   @param [BasicAuthConfig|JSONable] value
          #     The value to use for BasicAuthConfig
          # @@overload BasicAuthConfig(&block)
          #   Set :BasicAuthConfig from block via instance eval of a new BasicAuthConfig
          def BasicAuthConfig(value = nil, **value_hash, &block)
            dsl_attribute(:BasicAuthConfig, value, attr_class: BasicAuthConfig, **value_hash, &block)
          end
        end

        # Property Definition CustomRule
        class CustomRule < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Condition
          def Condition(value)
            dsl_attribute(:Condition, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Status
          def Status(value)
            dsl_attribute(:Status, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Target
          def Target(value)
            dsl_attribute(:Target, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Source
          def Source(value)
            dsl_attribute(:Source, value)
          end
        end

        # Property Definition EnvironmentVariable
        class EnvironmentVariable < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        # Property Definition BasicAuthConfig
        class BasicAuthConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Username
          def Username(value)
            dsl_attribute(:Username, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for EnableBasicAuth
          def EnableBasicAuth(value)
            dsl_attribute(:EnableBasicAuth, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Password
          def Password(value)
            dsl_attribute(:Password, value)
          end
        end

        #   @param [AutoBranchCreationConfig|JSONable] value
        #     The value to use for AutoBranchCreationConfig
        # @@overload AutoBranchCreationConfig(&block)
        #   Set :AutoBranchCreationConfig from block via instance eval of a new AutoBranchCreationConfig
        def AutoBranchCreationConfig(value = nil, **value_hash, &block)
          dsl_attribute(:AutoBranchCreationConfig, value, attr_class: AutoBranchCreationConfig, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for OauthToken
        def OauthToken(value)
          dsl_attribute(:OauthToken, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for EnableBranchAutoDeletion
        def EnableBranchAutoDeletion(value)
          dsl_attribute(:EnableBranchAutoDeletion, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DefaultDomain
        def DefaultDomain(value)
          dsl_attribute(:DefaultDomain, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AppName
        def AppName(value)
          dsl_attribute(:AppName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Repository
        def Repository(value)
          dsl_attribute(:Repository, value)
        end

        # @param [Array<EnvironmentVariable>|JSONable>] values
        #   The List of values to use for EnvironmentVariables
        def EnvironmentVariables(values)
          dsl_list_attribute(:EnvironmentVariables, values)
        end

        #  @param [EnvironmentVariable|JSONable] value  Append value to the List
        #    The List of values to use for EnvironmentVariables
        # @@overload EnvironmentVariabl(&block)
        # Append value to the List from block via instance eval of a new EnvironmentVariable
        def EnvironmentVariabl(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:EnvironmentVariables, value, fn_if: fn_if, attr_class: EnvironmentVariable, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for AppId
        def AppId(value)
          dsl_attribute(:AppId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AccessToken
        def AccessToken(value)
          dsl_attribute(:AccessToken, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for BuildSpec
        def BuildSpec(value)
          dsl_attribute(:BuildSpec, value)
        end

        # @param [Array<CustomRule>|JSONable>] values
        #   The List of values to use for CustomRules
        def CustomRules(values)
          dsl_list_attribute(:CustomRules, values)
        end

        #  @param [CustomRule|JSONable] value  Append value to the List
        #    The List of values to use for CustomRules
        # @@overload CustomRule(&block)
        # Append value to the List from block via instance eval of a new CustomRule
        def CustomRule(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:CustomRules, value, fn_if: fn_if, attr_class: CustomRule, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [BasicAuthConfig|JSONable] value
        #     The value to use for BasicAuthConfig
        # @@overload BasicAuthConfig(&block)
        #   Set :BasicAuthConfig from block via instance eval of a new BasicAuthConfig
        def BasicAuthConfig(value = nil, **value_hash, &block)
          dsl_attribute(:BasicAuthConfig, value, attr_class: BasicAuthConfig, **value_hash, &block)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for IAMServiceRole
        def IAMServiceRole(value)
          dsl_attribute(:IAMServiceRole, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Amplify::App]
    def AWS_Amplify_App(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Amplify::App, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
