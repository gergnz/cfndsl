# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Amplify
      # Resource Type definition for AWS::Amplify::Branch
      class Branch < ResourceType
        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # Property Definition BasicAuthConfig
        class BasicAuthConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Username
          def Username(value)
            dsl_attribute(:Username, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for EnableBasicAuth
          def EnableBasicAuth(value)
            dsl_attribute(:EnableBasicAuth, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Password
          def Password(value)
            dsl_attribute(:Password, value)
          end
        end

        # Property Definition EnvironmentVariable
        class EnvironmentVariable < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for BranchName
        def BranchName(value)
          dsl_attribute(:BranchName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        # @param [Array<EnvironmentVariable>|JSONable>] values
        #   The List of values to use for EnvironmentVariables
        def EnvironmentVariables(values)
          dsl_list_attribute(:EnvironmentVariables, values)
        end

        #  @param [EnvironmentVariable|JSONable] value  Append value to the List
        #    The List of values to use for EnvironmentVariables
        # @@overload EnvironmentVariabl(&block)
        # Append value to the List from block via instance eval of a new EnvironmentVariable
        def EnvironmentVariabl(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:EnvironmentVariables, value, fn_if: fn_if, attr_class: EnvironmentVariable, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for AppId
        def AppId(value)
          dsl_attribute(:AppId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PullRequestEnvironmentName
        def PullRequestEnvironmentName(value)
          dsl_attribute(:PullRequestEnvironmentName, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for EnablePullRequestPreview
        def EnablePullRequestPreview(value)
          dsl_attribute(:EnablePullRequestPreview, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for EnableAutoBuild
        def EnableAutoBuild(value)
          dsl_attribute(:EnableAutoBuild, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for BuildSpec
        def BuildSpec(value)
          dsl_attribute(:BuildSpec, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Stage
        def Stage(value)
          dsl_attribute(:Stage, value)
        end

        #   @param [BasicAuthConfig|JSONable] value
        #     The value to use for BasicAuthConfig
        # @@overload BasicAuthConfig(&block)
        #   Set :BasicAuthConfig from block via instance eval of a new BasicAuthConfig
        def BasicAuthConfig(value = nil, **value_hash, &block)
          dsl_attribute(:BasicAuthConfig, value, attr_class: BasicAuthConfig, **value_hash, &block)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Amplify::Branch]
    def AWS_Amplify_Branch(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Amplify::Branch, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
