# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Amplify
      # Resource Type definition for AWS::Amplify::Domain
      class Domain < ResourceType
        # Property Definition SubDomainSetting
        class SubDomainSetting < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Prefix
          def Prefix(value)
            dsl_attribute(:Prefix, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for BranchName
          def BranchName(value)
            dsl_attribute(:BranchName, value)
          end
        end

        # @param [Array<SubDomainSetting>|JSONable>] values
        #   The List of values to use for SubDomainSettings
        def SubDomainSettings(values)
          dsl_list_attribute(:SubDomainSettings, values)
        end

        #  @param [SubDomainSetting|JSONable] value  Append value to the List
        #    The List of values to use for SubDomainSettings
        # @@overload SubDomainSetting(&block)
        # Append value to the List from block via instance eval of a new SubDomainSetting
        def SubDomainSetting(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:SubDomainSettings, value, fn_if: fn_if, attr_class: SubDomainSetting, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for AutoSubDomainIAMRole
        def AutoSubDomainIAMRole(value)
          dsl_attribute(:AutoSubDomainIAMRole, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AppId
        def AppId(value)
          dsl_attribute(:AppId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DomainName
        def DomainName(value)
          dsl_attribute(:DomainName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for StatusReason
        def StatusReason(value)
          dsl_attribute(:StatusReason, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for EnableAutoSubDomain
        def EnableAutoSubDomain(value)
          dsl_attribute(:EnableAutoSubDomain, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DomainStatus
        def DomainStatus(value)
          dsl_attribute(:DomainStatus, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for AutoSubDomainCreationPatterns
        def AutoSubDomainCreationPatterns(values)
          dsl_list_attribute(:AutoSubDomainCreationPatterns, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for AutoSubDomainCreationPatterns
        def AutoSubDomainCreationPattern(value, fn_if: nil)
          dsl_push_attribute(:AutoSubDomainCreationPatterns, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for CertificateRecord
        def CertificateRecord(value)
          dsl_attribute(:CertificateRecord, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Amplify::Domain]
    def AWS_Amplify_Domain(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Amplify::Domain, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
