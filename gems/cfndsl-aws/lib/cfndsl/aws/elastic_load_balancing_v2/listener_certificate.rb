# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ElasticLoadBalancingV2
      # Resource Type definition for AWS::ElasticLoadBalancingV2::ListenerCertificate
      class ListenerCertificate < ResourceType
        # Property Definition Certificate
        class Certificate < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for CertificateArn
          def CertificateArn(value)
            dsl_attribute(:CertificateArn, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        # @param [Array<Certificate>|JSONable>] values
        #   The List of values to use for Certificates
        def Certificates(values)
          dsl_list_attribute(:Certificates, values)
        end

        #  @param [Certificate|JSONable] value  Append value to the List
        #    The List of values to use for Certificates
        # @@overload Certificate(&block)
        # Append value to the List from block via instance eval of a new Certificate
        def Certificate(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Certificates, value, fn_if: fn_if, attr_class: Certificate, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for ListenerArn
        def ListenerArn(value)
          dsl_attribute(:ListenerArn, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ElasticLoadBalancingV2::ListenerCertificate]
    def AWS_ElasticLoadBalancingV2_ListenerCertificate(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ElasticLoadBalancingV2::ListenerCertificate, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
