# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ManagedBlockchain
      # Resource Type definition for AWS::ManagedBlockchain::Node
      class Node < ResourceType
        # Property Definition NodeConfiguration
        class NodeConfiguration < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for AvailabilityZone
          def AvailabilityZone(value)
            dsl_attribute(:AvailabilityZone, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for InstanceType
          def InstanceType(value)
            dsl_attribute(:InstanceType, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for MemberId
        def MemberId(value)
          dsl_attribute(:MemberId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for NodeId
        def NodeId(value)
          dsl_attribute(:NodeId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for NetworkId
        def NetworkId(value)
          dsl_attribute(:NetworkId, value)
        end

        #   @param [NodeConfiguration|JSONable] value
        #     The value to use for NodeConfiguration
        # @@overload NodeConfiguration(&block)
        #   Set :NodeConfiguration from block via instance eval of a new NodeConfiguration
        def NodeConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:NodeConfiguration, value, attr_class: NodeConfiguration, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ManagedBlockchain::Node]
    def AWS_ManagedBlockchain_Node(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ManagedBlockchain::Node, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
