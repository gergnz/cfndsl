# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module AppStream
      # Resource Type definition for AWS::AppStream::DirectoryConfig
      class DirectoryConfig < ResourceType
        # Property Definition ServiceAccountCredentials
        class ServiceAccountCredentials < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for AccountName
          def AccountName(value)
            dsl_attribute(:AccountName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for AccountPassword
          def AccountPassword(value)
            dsl_attribute(:AccountPassword, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for OrganizationalUnitDistinguishedNames
        def OrganizationalUnitDistinguishedNames(values)
          dsl_list_attribute(:OrganizationalUnitDistinguishedNames, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for OrganizationalUnitDistinguishedNames
        def OrganizationalUnitDistinguishedName(value, fn_if: nil)
          dsl_push_attribute(:OrganizationalUnitDistinguishedNames, value, fn_if: fn_if)
        end

        #   @param [ServiceAccountCredentials|JSONable] value
        #     The value to use for ServiceAccountCredentials
        # @@overload ServiceAccountCredentials(&block)
        #   Set :ServiceAccountCredentials from block via instance eval of a new ServiceAccountCredentials
        def ServiceAccountCredentials(value = nil, **value_hash, &block)
          dsl_attribute(:ServiceAccountCredentials, value, attr_class: ServiceAccountCredentials, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for DirectoryName
        def DirectoryName(value)
          dsl_attribute(:DirectoryName, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::AppStream::DirectoryConfig]
    def AWS_AppStream_DirectoryConfig(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::AppStream::DirectoryConfig, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
