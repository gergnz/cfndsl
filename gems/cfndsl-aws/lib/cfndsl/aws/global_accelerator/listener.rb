# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module GlobalAccelerator
      # Resource Type definition for AWS::GlobalAccelerator::Listener
      # @see https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
      class Listener < ResourceType
        # A port range to support for connections from  clients to your accelerator.
        class PortRange < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for FromPort
          def FromPort(value)
            dsl_attribute(:FromPort, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for ToPort
          def ToPort(value)
            dsl_attribute(:ToPort, value)
          end
        end

        #   @param [String|JSONable] value
        #     The Amazon Resource Name (ARN) of the listener.
        def ListenerArn(value)
          dsl_attribute(:ListenerArn, value)
        end

        #   @param [String|JSONable] value
        #     The Amazon Resource Name (ARN) of the accelerator.
        def AcceleratorArn(value)
          dsl_attribute(:AcceleratorArn, value)
        end

        # @param [Array<PortRange>|JSONable>] values
        #   The List of values to use for PortRanges
        def PortRanges(values)
          dsl_list_attribute(:PortRanges, values)
        end

        #  @param [PortRange|JSONable] value  Append value to the List
        #    The List of values to use for PortRanges
        # @@overload PortRang(&block)
        # Append value to the List from block via instance eval of a new PortRange
        def PortRang(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:PortRanges, value, fn_if: fn_if, attr_class: PortRange, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The protocol for the listener.
        def Protocol(value)
          dsl_attribute(:Protocol, value)
        end

        #   @param [String|JSONable] value
        #     Client affinity lets you direct all requests from a user to the same endpoint.
        def ClientAffinity(value)
          dsl_attribute(:ClientAffinity, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::GlobalAccelerator::Listener]
    def AWS_GlobalAccelerator_Listener(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::GlobalAccelerator::Listener, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
