# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ApiGatewayV2
      # Resource Type definition for AWS::ApiGatewayV2::Stage
      class Stage < ResourceType
        # Property Definition AccessLogSettings
        class AccessLogSettings < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for DestinationArn
          def DestinationArn(value)
            dsl_attribute(:DestinationArn, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Format
          def Format(value)
            dsl_attribute(:Format, value)
          end
        end

        # Property Definition RouteSettings
        class RouteSettings < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for DetailedMetricsEnabled
          def DetailedMetricsEnabled(value)
            dsl_attribute(:DetailedMetricsEnabled, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for LoggingLevel
          def LoggingLevel(value)
            dsl_attribute(:LoggingLevel, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for DataTraceEnabled
          def DataTraceEnabled(value)
            dsl_attribute(:DataTraceEnabled, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for ThrottlingBurstLimit
          def ThrottlingBurstLimit(value)
            dsl_attribute(:ThrottlingBurstLimit, value)
          end

          #   @param [Number|JSONable] value
          #     The value to use for ThrottlingRateLimit
          def ThrottlingRateLimit(value)
            dsl_attribute(:ThrottlingRateLimit, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for ClientCertificateId
        def ClientCertificateId(value)
          dsl_attribute(:ClientCertificateId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DeploymentId
        def DeploymentId(value)
          dsl_attribute(:DeploymentId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [AccessLogSettings|JSONable] value
        #     The value to use for AccessLogSettings
        # @@overload AccessLogSettings(&block)
        #   Set :AccessLogSettings from block via instance eval of a new AccessLogSettings
        def AccessLogSettings(value = nil, **value_hash, &block)
          dsl_attribute(:AccessLogSettings, value, attr_class: AccessLogSettings, **value_hash, &block)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for AutoDeploy
        def AutoDeploy(value)
          dsl_attribute(:AutoDeploy, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for RouteSettings
        def RouteSettings(value)
          dsl_attribute(:RouteSettings, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for StageName
        def StageName(value)
          dsl_attribute(:StageName, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for StageVariables
        def StageVariables(value)
          dsl_attribute(:StageVariables, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApiId
        def ApiId(value)
          dsl_attribute(:ApiId, value)
        end

        #   @param [RouteSettings|JSONable] value
        #     The value to use for DefaultRouteSettings
        # @@overload DefaultRouteSettings(&block)
        #   Set :DefaultRouteSettings from block via instance eval of a new RouteSettings
        def DefaultRouteSettings(value = nil, **value_hash, &block)
          dsl_attribute(:DefaultRouteSettings, value, attr_class: RouteSettings, **value_hash, &block)
        end

        #   @param [Object|JSONable] value
        #     The value to use for Tags
        def Tags(value)
          dsl_attribute(:Tags, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ApiGatewayV2::Stage]
    def AWS_ApiGatewayV2_Stage(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ApiGatewayV2::Stage, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
