# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ApiGatewayV2
      # Resource Type definition for AWS::ApiGatewayV2::Api
      class Api < ResourceType
        # Property Definition BodyS3Location
        class BodyS3Location < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Etag
          def Etag(value)
            dsl_attribute(:Etag, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Bucket
          def Bucket(value)
            dsl_attribute(:Bucket, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Version
          def Version(value)
            dsl_attribute(:Version, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        # Property Definition Cors
        class Cors < PropertyType
          # @param [Array<String>|JSONable>] values
          #   The List of values to use for AllowOrigins
          def AllowOrigins(values)
            dsl_list_attribute(:AllowOrigins, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for AllowOrigins
          def AllowOrigin(value, fn_if: nil)
            dsl_push_attribute(:AllowOrigins, value, fn_if: fn_if)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for AllowCredentials
          def AllowCredentials(value)
            dsl_attribute(:AllowCredentials, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for ExposeHeaders
          def ExposeHeaders(values)
            dsl_list_attribute(:ExposeHeaders, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for ExposeHeaders
          def ExposeHeader(value, fn_if: nil)
            dsl_push_attribute(:ExposeHeaders, value, fn_if: fn_if)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for AllowHeaders
          def AllowHeaders(values)
            dsl_list_attribute(:AllowHeaders, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for AllowHeaders
          def AllowHeader(value, fn_if: nil)
            dsl_push_attribute(:AllowHeaders, value, fn_if: fn_if)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for MaxAge
          def MaxAge(value)
            dsl_attribute(:MaxAge, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for AllowMethods
          def AllowMethods(values)
            dsl_list_attribute(:AllowMethods, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for AllowMethods
          def AllowMethod(value, fn_if: nil)
            dsl_push_attribute(:AllowMethods, value, fn_if: fn_if)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for RouteSelectionExpression
        def RouteSelectionExpression(value)
          dsl_attribute(:RouteSelectionExpression, value)
        end

        #   @param [BodyS3Location|JSONable] value
        #     The value to use for BodyS3Location
        # @@overload BodyS3Location(&block)
        #   Set :BodyS3Location from block via instance eval of a new BodyS3Location
        def BodyS3Location(value = nil, **value_hash, &block)
          dsl_attribute(:BodyS3Location, value, attr_class: BodyS3Location, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for BasePath
        def BasePath(value)
          dsl_attribute(:BasePath, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for FailOnWarnings
        def FailOnWarnings(value)
          dsl_attribute(:FailOnWarnings, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for DisableSchemaValidation
        def DisableSchemaValidation(value)
          dsl_attribute(:DisableSchemaValidation, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Target
        def Target(value)
          dsl_attribute(:Target, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CredentialsArn
        def CredentialsArn(value)
          dsl_attribute(:CredentialsArn, value)
        end

        #   @param [Cors|JSONable] value
        #     The value to use for CorsConfiguration
        # @@overload CorsConfiguration(&block)
        #   Set :CorsConfiguration from block via instance eval of a new Cors
        def CorsConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:CorsConfiguration, value, attr_class: Cors, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Version
        def Version(value)
          dsl_attribute(:Version, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ProtocolType
        def ProtocolType(value)
          dsl_attribute(:ProtocolType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RouteKey
        def RouteKey(value)
          dsl_attribute(:RouteKey, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for Body
        def Body(value)
          dsl_attribute(:Body, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for Tags
        def Tags(value)
          dsl_attribute(:Tags, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApiKeySelectionExpression
        def ApiKeySelectionExpression(value)
          dsl_attribute(:ApiKeySelectionExpression, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ApiGatewayV2::Api]
    def AWS_ApiGatewayV2_Api(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ApiGatewayV2::Api, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
