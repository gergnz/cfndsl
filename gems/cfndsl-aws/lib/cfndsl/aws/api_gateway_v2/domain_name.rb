# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ApiGatewayV2
      # Resource Type definition for AWS::ApiGatewayV2::DomainName
      class DomainName < ResourceType
        # Property Definition DomainNameConfiguration
        class DomainNameConfiguration < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for EndpointType
          def EndpointType(value)
            dsl_attribute(:EndpointType, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for CertificateName
          def CertificateName(value)
            dsl_attribute(:CertificateName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for CertificateArn
          def CertificateArn(value)
            dsl_attribute(:CertificateArn, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RegionalHostedZoneId
        def RegionalHostedZoneId(value)
          dsl_attribute(:RegionalHostedZoneId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RegionalDomainName
        def RegionalDomainName(value)
          dsl_attribute(:RegionalDomainName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DomainName
        def DomainName(value)
          dsl_attribute(:DomainName, value)
        end

        # @param [Array<DomainNameConfiguration>|JSONable>] values
        #   The List of values to use for DomainNameConfigurations
        def DomainNameConfigurations(values)
          dsl_list_attribute(:DomainNameConfigurations, values)
        end

        #  @param [DomainNameConfiguration|JSONable] value  Append value to the List
        #    The List of values to use for DomainNameConfigurations
        # @@overload DomainNameConfiguration(&block)
        # Append value to the List from block via instance eval of a new DomainNameConfiguration
        def DomainNameConfiguration(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:DomainNameConfigurations, value, fn_if: fn_if, attr_class: DomainNameConfiguration, **value_hash, &block)
        end

        #   @param [Object|JSONable] value
        #     The value to use for Tags
        def Tags(value)
          dsl_attribute(:Tags, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ApiGatewayV2::DomainName]
    def AWS_ApiGatewayV2_DomainName(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ApiGatewayV2::DomainName, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
