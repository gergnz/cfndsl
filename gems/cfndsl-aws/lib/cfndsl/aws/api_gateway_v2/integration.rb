# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ApiGatewayV2
      # Resource Type definition for AWS::ApiGatewayV2::Integration
      class Integration < ResourceType
        # Property Definition TlsConfig
        class TlsConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ServerNameToVerify
          def ServerNameToVerify(value)
            dsl_attribute(:ServerNameToVerify, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for TemplateSelectionExpression
        def TemplateSelectionExpression(value)
          dsl_attribute(:TemplateSelectionExpression, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ConnectionType
        def ConnectionType(value)
          dsl_attribute(:ConnectionType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for IntegrationMethod
        def IntegrationMethod(value)
          dsl_attribute(:IntegrationMethod, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PassthroughBehavior
        def PassthroughBehavior(value)
          dsl_attribute(:PassthroughBehavior, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for RequestParameters
        def RequestParameters(value)
          dsl_attribute(:RequestParameters, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ConnectionId
        def ConnectionId(value)
          dsl_attribute(:ConnectionId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for IntegrationUri
        def IntegrationUri(value)
          dsl_attribute(:IntegrationUri, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PayloadFormatVersion
        def PayloadFormatVersion(value)
          dsl_attribute(:PayloadFormatVersion, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CredentialsArn
        def CredentialsArn(value)
          dsl_attribute(:CredentialsArn, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for RequestTemplates
        def RequestTemplates(value)
          dsl_attribute(:RequestTemplates, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for TimeoutInMillis
        def TimeoutInMillis(value)
          dsl_attribute(:TimeoutInMillis, value)
        end

        #   @param [TlsConfig|JSONable] value
        #     The value to use for TlsConfig
        # @@overload TlsConfig(&block)
        #   Set :TlsConfig from block via instance eval of a new TlsConfig
        def TlsConfig(value = nil, **value_hash, &block)
          dsl_attribute(:TlsConfig, value, attr_class: TlsConfig, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for ContentHandlingStrategy
        def ContentHandlingStrategy(value)
          dsl_attribute(:ContentHandlingStrategy, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApiId
        def ApiId(value)
          dsl_attribute(:ApiId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for IntegrationType
        def IntegrationType(value)
          dsl_attribute(:IntegrationType, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ApiGatewayV2::Integration]
    def AWS_ApiGatewayV2_Integration(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ApiGatewayV2::Integration, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
