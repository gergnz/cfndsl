# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ApiGatewayV2
      # Resource Type definition for AWS::ApiGatewayV2::Authorizer
      class Authorizer < ResourceType
        # Property Definition JWTConfiguration
        class JWTConfiguration < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Issuer
          def Issuer(value)
            dsl_attribute(:Issuer, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for Audience
          def Audiences(values)
            dsl_list_attribute(:Audience, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for Audience
          def Audience(value, fn_if: nil)
            dsl_push_attribute(:Audience, value, fn_if: fn_if)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for IdentityValidationExpression
        def IdentityValidationExpression(value)
          dsl_attribute(:IdentityValidationExpression, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AuthorizerUri
        def AuthorizerUri(value)
          dsl_attribute(:AuthorizerUri, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AuthorizerCredentialsArn
        def AuthorizerCredentialsArn(value)
          dsl_attribute(:AuthorizerCredentialsArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AuthorizerType
        def AuthorizerType(value)
          dsl_attribute(:AuthorizerType, value)
        end

        #   @param [JWTConfiguration|JSONable] value
        #     The value to use for JwtConfiguration
        # @@overload JwtConfiguration(&block)
        #   Set :JwtConfiguration from block via instance eval of a new JWTConfiguration
        def JwtConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:JwtConfiguration, value, attr_class: JWTConfiguration, **value_hash, &block)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for AuthorizerResultTtlInSeconds
        def AuthorizerResultTtlInSeconds(value)
          dsl_attribute(:AuthorizerResultTtlInSeconds, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for IdentitySource
        def IdentitySources(values)
          dsl_list_attribute(:IdentitySource, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for IdentitySource
        def IdentitySource(value, fn_if: nil)
          dsl_push_attribute(:IdentitySource, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApiId
        def ApiId(value)
          dsl_attribute(:ApiId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ApiGatewayV2::Authorizer]
    def AWS_ApiGatewayV2_Authorizer(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ApiGatewayV2::Authorizer, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
