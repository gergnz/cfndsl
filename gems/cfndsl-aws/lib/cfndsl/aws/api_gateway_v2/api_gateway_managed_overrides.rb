# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ApiGatewayV2
      # Resource Type definition for AWS::ApiGatewayV2::ApiGatewayManagedOverrides
      class ApiGatewayManagedOverrides < ResourceType
        # Property Definition AccessLogSettings
        class AccessLogSettings < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for DestinationArn
          def DestinationArn(value)
            dsl_attribute(:DestinationArn, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Format
          def Format(value)
            dsl_attribute(:Format, value)
          end
        end

        # Property Definition RouteSettings
        class RouteSettings < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for DetailedMetricsEnabled
          def DetailedMetricsEnabled(value)
            dsl_attribute(:DetailedMetricsEnabled, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for LoggingLevel
          def LoggingLevel(value)
            dsl_attribute(:LoggingLevel, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for DataTraceEnabled
          def DataTraceEnabled(value)
            dsl_attribute(:DataTraceEnabled, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for ThrottlingBurstLimit
          def ThrottlingBurstLimit(value)
            dsl_attribute(:ThrottlingBurstLimit, value)
          end

          #   @param [Number|JSONable] value
          #     The value to use for ThrottlingRateLimit
          def ThrottlingRateLimit(value)
            dsl_attribute(:ThrottlingRateLimit, value)
          end
        end

        # Property Definition StageOverrides
        class StageOverrides < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Description
          def Description(value)
            dsl_attribute(:Description, value)
          end

          #   @param [AccessLogSettings|JSONable] value
          #     The value to use for AccessLogSettings
          # @@overload AccessLogSettings(&block)
          #   Set :AccessLogSettings from block via instance eval of a new AccessLogSettings
          def AccessLogSettings(value = nil, **value_hash, &block)
            dsl_attribute(:AccessLogSettings, value, attr_class: AccessLogSettings, **value_hash, &block)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for AutoDeploy
          def AutoDeploy(value)
            dsl_attribute(:AutoDeploy, value)
          end

          #   @param [Object|JSONable] value
          #     The value to use for RouteSettings
          def RouteSettings(value)
            dsl_attribute(:RouteSettings, value)
          end

          #   @param [Object|JSONable] value
          #     The value to use for StageVariables
          def StageVariables(value)
            dsl_attribute(:StageVariables, value)
          end

          #   @param [RouteSettings|JSONable] value
          #     The value to use for DefaultRouteSettings
          # @@overload DefaultRouteSettings(&block)
          #   Set :DefaultRouteSettings from block via instance eval of a new RouteSettings
          def DefaultRouteSettings(value = nil, **value_hash, &block)
            dsl_attribute(:DefaultRouteSettings, value, attr_class: RouteSettings, **value_hash, &block)
          end
        end

        # Property Definition RouteOverrides
        class RouteOverrides < PropertyType
          # @param [Array<String>|JSONable>] values
          #   The List of values to use for AuthorizationScopes
          def AuthorizationScopes(values)
            dsl_list_attribute(:AuthorizationScopes, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for AuthorizationScopes
          def AuthorizationScope(value, fn_if: nil)
            dsl_push_attribute(:AuthorizationScopes, value, fn_if: fn_if)
          end

          #   @param [String|JSONable] value
          #     The value to use for Target
          def Target(value)
            dsl_attribute(:Target, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for AuthorizationType
          def AuthorizationType(value)
            dsl_attribute(:AuthorizationType, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for AuthorizerId
          def AuthorizerId(value)
            dsl_attribute(:AuthorizerId, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for OperationName
          def OperationName(value)
            dsl_attribute(:OperationName, value)
          end
        end

        # Property Definition IntegrationOverrides
        class IntegrationOverrides < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for TimeoutInMillis
          def TimeoutInMillis(value)
            dsl_attribute(:TimeoutInMillis, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Description
          def Description(value)
            dsl_attribute(:Description, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for PayloadFormatVersion
          def PayloadFormatVersion(value)
            dsl_attribute(:PayloadFormatVersion, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for IntegrationMethod
          def IntegrationMethod(value)
            dsl_attribute(:IntegrationMethod, value)
          end
        end

        #   @param [StageOverrides|JSONable] value
        #     The value to use for Stage
        # @@overload Stage(&block)
        #   Set :Stage from block via instance eval of a new StageOverrides
        def Stage(value = nil, **value_hash, &block)
          dsl_attribute(:Stage, value, attr_class: StageOverrides, **value_hash, &block)
        end

        #   @param [IntegrationOverrides|JSONable] value
        #     The value to use for Integration
        # @@overload Integration(&block)
        #   Set :Integration from block via instance eval of a new IntegrationOverrides
        def Integration(value = nil, **value_hash, &block)
          dsl_attribute(:Integration, value, attr_class: IntegrationOverrides, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApiId
        def ApiId(value)
          dsl_attribute(:ApiId, value)
        end

        #   @param [RouteOverrides|JSONable] value
        #     The value to use for Route
        # @@overload Route(&block)
        #   Set :Route from block via instance eval of a new RouteOverrides
        def Route(value = nil, **value_hash, &block)
          dsl_attribute(:Route, value, attr_class: RouteOverrides, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ApiGatewayV2::ApiGatewayManagedOverrides]
    def AWS_ApiGatewayV2_ApiGatewayManagedOverrides(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ApiGatewayV2::ApiGatewayManagedOverrides, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
