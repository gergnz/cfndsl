# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module NetworkManager
      # The AWS::NetworkManager::Device type describes a device.
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-networkmanager.git
      class Device < ResourceType
        # A key-value pair to associate with a device resource.
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # The site location.
        class Location < PropertyType
          #   @param [String|JSONable] value
          #     The physical address.
          def Address(value)
            dsl_attribute(:Address, value)
          end

          #   @param [String|JSONable] value
          #     The latitude.
          def Latitude(value)
            dsl_attribute(:Latitude, value)
          end

          #   @param [String|JSONable] value
          #     The longitude.
          def Longitude(value)
            dsl_attribute(:Longitude, value)
          end
        end

        #   @param [String|JSONable] value
        #     The Amazon Resource Name (ARN) of the device.
        def DeviceArn(value)
          dsl_attribute(:DeviceArn, value)
        end

        #   @param [String|JSONable] value
        #     The ID of the device.
        def DeviceId(value)
          dsl_attribute(:DeviceId, value)
        end

        #   @param [String|JSONable] value
        #     The description of the device.
        def Description(value)
          dsl_attribute(:Description, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The tags for the device.
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The tags for the device.
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The ID of the global network.
        def GlobalNetworkId(value)
          dsl_attribute(:GlobalNetworkId, value)
        end

        #   @param [Location|JSONable] value
        #     The site location.
        # @@overload Location(&block)
        #   Set :Location from block via instance eval of a new Location
        def Location(value = nil, **value_hash, &block)
          dsl_attribute(:Location, value, attr_class: Location, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The device model
        def Model(value)
          dsl_attribute(:Model, value)
        end

        #   @param [String|JSONable] value
        #     The device serial number.
        def SerialNumber(value)
          dsl_attribute(:SerialNumber, value)
        end

        #   @param [String|JSONable] value
        #     The site ID.
        def SiteId(value)
          dsl_attribute(:SiteId, value)
        end

        #   @param [String|JSONable] value
        #     The device type.
        def Type(value)
          dsl_attribute(:Type, value)
        end

        #   @param [String|JSONable] value
        #     The device vendor.
        def Vendor(value)
          dsl_attribute(:Vendor, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::NetworkManager::Device]
    def AWS_NetworkManager_Device(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::NetworkManager::Device, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
