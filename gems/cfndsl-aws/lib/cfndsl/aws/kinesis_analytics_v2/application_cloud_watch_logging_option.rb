# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module KinesisAnalyticsV2
      # Resource Type definition for AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption
      class ApplicationCloudWatchLoggingOption < ResourceType
        # Property Definition CloudWatchLoggingOption
        class CloudWatchLoggingOption < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for LogStreamARN
          def LogStreamARN(value)
            dsl_attribute(:LogStreamARN, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApplicationName
        def ApplicationName(value)
          dsl_attribute(:ApplicationName, value)
        end

        #   @param [CloudWatchLoggingOption|JSONable] value
        #     The value to use for CloudWatchLoggingOption
        # @@overload CloudWatchLoggingOption(&block)
        #   Set :CloudWatchLoggingOption from block via instance eval of a new CloudWatchLoggingOption
        def CloudWatchLoggingOption(value = nil, **value_hash, &block)
          dsl_attribute(:CloudWatchLoggingOption, value, attr_class: CloudWatchLoggingOption, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption]
    def AWS_KinesisAnalyticsV2_ApplicationCloudWatchLoggingOption(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::KinesisAnalyticsV2::ApplicationCloudWatchLoggingOption, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
