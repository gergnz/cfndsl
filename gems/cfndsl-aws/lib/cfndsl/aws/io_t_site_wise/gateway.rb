# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module IoTSiteWise
      # Resource schema for AWS::IoTSiteWise::Gateway
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-IoTSiteWise.git
      class Gateway < ResourceType
        # Contains a gateway's platform information.
        class GatewayPlatform < PropertyType
          #   @param [Greengrass|JSONable] value
          #     A gateway that runs on AWS IoT Greengrass.
          # @@overload Greengrass(&block)
          #   Set :Greengrass from block via instance eval of a new Greengrass
          def Greengrass(value = nil, **value_hash, &block)
            dsl_attribute(:Greengrass, value, attr_class: Greengrass, **value_hash, &block)
          end
        end

        # Contains the ARN of AWS IoT Greengrass Group that the gateway runs on.
        class Greengrass < PropertyType
          #   @param [String|JSONable] value
          #     The ARN of the Greengrass group.
          def GroupArn(value)
            dsl_attribute(:GroupArn, value)
          end
        end

        # To add or update tag, provide both key and value. To delete tag, provide only tag key to be deleted
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # Contains a summary of a gateway capability configuration.
        class GatewayCapabilitySummary < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for CapabilityNamespace
          def CapabilityNamespace(value)
            dsl_attribute(:CapabilityNamespace, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for CapabilityConfiguration
          def CapabilityConfiguration(value)
            dsl_attribute(:CapabilityConfiguration, value)
          end
        end

        #   @param [String|JSONable] value
        #     A unique, friendly name for the gateway.
        def GatewayName(value)
          dsl_attribute(:GatewayName, value)
        end

        #   @param [GatewayPlatform|JSONable] value
        #     The gateway's platform. You can only specify one platform in a gateway.
        # @@overload GatewayPlatform(&block)
        #   Set :GatewayPlatform from block via instance eval of a new GatewayPlatform
        def GatewayPlatform(value = nil, **value_hash, &block)
          dsl_attribute(:GatewayPlatform, value, attr_class: GatewayPlatform, **value_hash, &block)
        end

        # @param [Array<Tag>|JSONable>] values
        #   A list of key-value pairs that contain metadata for the gateway.
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    A list of key-value pairs that contain metadata for the gateway.
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The ID of the gateway device.
        def GatewayId(value)
          dsl_attribute(:GatewayId, value)
        end

        # @param [Array<GatewayCapabilitySummary>|JSONable>] values
        #   A list of gateway capability summaries that each contain a namespace and status.
        def GatewayCapabilitySummaries(values)
          dsl_list_attribute(:GatewayCapabilitySummaries, values)
        end

        #  @param [GatewayCapabilitySummary|JSONable] value  Append value to the List
        #    A list of gateway capability summaries that each contain a namespace and status.
        # @@overload GatewayCapabilitySummary(&block)
        # Append value to the List from block via instance eval of a new GatewayCapabilitySummary
        def GatewayCapabilitySummary(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:GatewayCapabilitySummaries, value, fn_if: fn_if, attr_class: GatewayCapabilitySummary, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::IoTSiteWise::Gateway]
    def AWS_IoTSiteWise_Gateway(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::IoTSiteWise::Gateway, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
