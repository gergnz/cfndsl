# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module CloudFront
      # Resource Type definition for AWS::CloudFront::KeyGroup
      class KeyGroup < ResourceType
        # Property Definition KeyGroupConfig
        class KeyGroupConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Comment
          def Comment(value)
            dsl_attribute(:Comment, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for Items
          def Items(values)
            dsl_list_attribute(:Items, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for Items
          def Item(value, fn_if: nil)
            dsl_push_attribute(:Items, value, fn_if: fn_if)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [KeyGroupConfig|JSONable] value
        #     The value to use for KeyGroupConfig
        # @@overload KeyGroupConfig(&block)
        #   Set :KeyGroupConfig from block via instance eval of a new KeyGroupConfig
        def KeyGroupConfig(value = nil, **value_hash, &block)
          dsl_attribute(:KeyGroupConfig, value, attr_class: KeyGroupConfig, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for LastModifiedTime
        def LastModifiedTime(value)
          dsl_attribute(:LastModifiedTime, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::CloudFront::KeyGroup]
    def AWS_CloudFront_KeyGroup(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::CloudFront::KeyGroup, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
