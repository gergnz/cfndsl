# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module CloudFront
      # Resource Type definition for AWS::CloudFront::OriginRequestPolicy
      class OriginRequestPolicy < ResourceType
        # Property Definition CookiesConfig
        class CookiesConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for CookieBehavior
          def CookieBehavior(value)
            dsl_attribute(:CookieBehavior, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for Cookies
          def Cookies(values)
            dsl_list_attribute(:Cookies, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for Cookies
          def Cooky(value, fn_if: nil)
            dsl_push_attribute(:Cookies, value, fn_if: fn_if)
          end
        end

        # Property Definition HeadersConfig
        class HeadersConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for HeaderBehavior
          def HeaderBehavior(value)
            dsl_attribute(:HeaderBehavior, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for Headers
          def Headers(values)
            dsl_list_attribute(:Headers, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for Headers
          def Header(value, fn_if: nil)
            dsl_push_attribute(:Headers, value, fn_if: fn_if)
          end
        end

        # Property Definition OriginRequestPolicyConfig
        class OriginRequestPolicyConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Comment
          def Comment(value)
            dsl_attribute(:Comment, value)
          end

          #   @param [CookiesConfig|JSONable] value
          #     The value to use for CookiesConfig
          # @@overload CookiesConfig(&block)
          #   Set :CookiesConfig from block via instance eval of a new CookiesConfig
          def CookiesConfig(value = nil, **value_hash, &block)
            dsl_attribute(:CookiesConfig, value, attr_class: CookiesConfig, **value_hash, &block)
          end

          #   @param [HeadersConfig|JSONable] value
          #     The value to use for HeadersConfig
          # @@overload HeadersConfig(&block)
          #   Set :HeadersConfig from block via instance eval of a new HeadersConfig
          def HeadersConfig(value = nil, **value_hash, &block)
            dsl_attribute(:HeadersConfig, value, attr_class: HeadersConfig, **value_hash, &block)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end

          #   @param [QueryStringsConfig|JSONable] value
          #     The value to use for QueryStringsConfig
          # @@overload QueryStringsConfig(&block)
          #   Set :QueryStringsConfig from block via instance eval of a new QueryStringsConfig
          def QueryStringsConfig(value = nil, **value_hash, &block)
            dsl_attribute(:QueryStringsConfig, value, attr_class: QueryStringsConfig, **value_hash, &block)
          end
        end

        # Property Definition QueryStringsConfig
        class QueryStringsConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for QueryStringBehavior
          def QueryStringBehavior(value)
            dsl_attribute(:QueryStringBehavior, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for QueryStrings
          def QueryStrings(values)
            dsl_list_attribute(:QueryStrings, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for QueryStrings
          def QueryString(value, fn_if: nil)
            dsl_push_attribute(:QueryStrings, value, fn_if: fn_if)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for LastModifiedTime
        def LastModifiedTime(value)
          dsl_attribute(:LastModifiedTime, value)
        end

        #   @param [OriginRequestPolicyConfig|JSONable] value
        #     The value to use for OriginRequestPolicyConfig
        # @@overload OriginRequestPolicyConfig(&block)
        #   Set :OriginRequestPolicyConfig from block via instance eval of a new OriginRequestPolicyConfig
        def OriginRequestPolicyConfig(value = nil, **value_hash, &block)
          dsl_attribute(:OriginRequestPolicyConfig, value, attr_class: OriginRequestPolicyConfig, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::CloudFront::OriginRequestPolicy]
    def AWS_CloudFront_OriginRequestPolicy(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::CloudFront::OriginRequestPolicy, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
