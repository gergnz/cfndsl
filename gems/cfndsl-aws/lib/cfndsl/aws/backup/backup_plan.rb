# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Backup
      # Resource Type definition for AWS::Backup::BackupPlan
      class BackupPlan < ResourceType
        # Property Definition CopyActionResourceType
        class CopyActionResourceType < PropertyType
          #   @param [LifecycleResourceType|JSONable] value
          #     The value to use for Lifecycle
          # @@overload Lifecycle(&block)
          #   Set :Lifecycle from block via instance eval of a new LifecycleResourceType
          def Lifecycle(value = nil, **value_hash, &block)
            dsl_attribute(:Lifecycle, value, attr_class: LifecycleResourceType, **value_hash, &block)
          end

          #   @param [String|JSONable] value
          #     The value to use for DestinationBackupVaultArn
          def DestinationBackupVaultArn(value)
            dsl_attribute(:DestinationBackupVaultArn, value)
          end
        end

        # Property Definition BackupRuleResourceType
        class BackupRuleResourceType < PropertyType
          #   @param [Number|JSONable] value
          #     The value to use for CompletionWindowMinutes
          def CompletionWindowMinutes(value)
            dsl_attribute(:CompletionWindowMinutes, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ScheduleExpression
          def ScheduleExpression(value)
            dsl_attribute(:ScheduleExpression, value)
          end

          #   @param [Object|JSONable] value
          #     The value to use for RecoveryPointTags
          def RecoveryPointTags(value)
            dsl_attribute(:RecoveryPointTags, value)
          end

          # @param [Array<CopyActionResourceType>|JSONable>] values
          #   The List of values to use for CopyActions
          def CopyActions(values)
            dsl_list_attribute(:CopyActions, values)
          end

          #  @param [CopyActionResourceType|JSONable] value  Append value to the List
          #    The List of values to use for CopyActions
          # @@overload CopyAction(&block)
          # Append value to the List from block via instance eval of a new CopyActionResourceType
          def CopyAction(value = nil, fn_if: nil, **value_hash, &block)
            dsl_push_attribute(:CopyActions, value, fn_if: fn_if, attr_class: CopyActionResourceType, **value_hash, &block)
          end

          #   @param [LifecycleResourceType|JSONable] value
          #     The value to use for Lifecycle
          # @@overload Lifecycle(&block)
          #   Set :Lifecycle from block via instance eval of a new LifecycleResourceType
          def Lifecycle(value = nil, **value_hash, &block)
            dsl_attribute(:Lifecycle, value, attr_class: LifecycleResourceType, **value_hash, &block)
          end

          #   @param [String|JSONable] value
          #     The value to use for TargetBackupVault
          def TargetBackupVault(value)
            dsl_attribute(:TargetBackupVault, value)
          end

          #   @param [Number|JSONable] value
          #     The value to use for StartWindowMinutes
          def StartWindowMinutes(value)
            dsl_attribute(:StartWindowMinutes, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for RuleName
          def RuleName(value)
            dsl_attribute(:RuleName, value)
          end
        end

        # Property Definition BackupPlanResourceType
        class BackupPlanResourceType < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for BackupPlanName
          def BackupPlanName(value)
            dsl_attribute(:BackupPlanName, value)
          end

          # @param [Array<BackupRuleResourceType>|JSONable>] values
          #   The List of values to use for BackupPlanRule
          def BackupPlanRules(values)
            dsl_list_attribute(:BackupPlanRule, values)
          end

          #  @param [BackupRuleResourceType|JSONable] value  Append value to the List
          #    The List of values to use for BackupPlanRule
          # @@overload BackupPlanRule(&block)
          # Append value to the List from block via instance eval of a new BackupRuleResourceType
          def BackupPlanRule(value = nil, fn_if: nil, **value_hash, &block)
            dsl_push_attribute(:BackupPlanRule, value, fn_if: fn_if, attr_class: BackupRuleResourceType, **value_hash, &block)
          end
        end

        # Property Definition LifecycleResourceType
        class LifecycleResourceType < PropertyType
          #   @param [Number|JSONable] value
          #     The value to use for MoveToColdStorageAfterDays
          def MoveToColdStorageAfterDays(value)
            dsl_attribute(:MoveToColdStorageAfterDays, value)
          end

          #   @param [Number|JSONable] value
          #     The value to use for DeleteAfterDays
          def DeleteAfterDays(value)
            dsl_attribute(:DeleteAfterDays, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for VersionId
        def VersionId(value)
          dsl_attribute(:VersionId, value)
        end

        #   @param [BackupPlanResourceType|JSONable] value
        #     The value to use for BackupPlan
        # @@overload BackupPlan(&block)
        #   Set :BackupPlan from block via instance eval of a new BackupPlanResourceType
        def BackupPlan(value = nil, **value_hash, &block)
          dsl_attribute(:BackupPlan, value, attr_class: BackupPlanResourceType, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for BackupPlanId
        def BackupPlanId(value)
          dsl_attribute(:BackupPlanId, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for BackupPlanTags
        def BackupPlanTags(value)
          dsl_attribute(:BackupPlanTags, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for BackupPlanArn
        def BackupPlanArn(value)
          dsl_attribute(:BackupPlanArn, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Backup::BackupPlan]
    def AWS_Backup_BackupPlan(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Backup::BackupPlan, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
