# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module SQS
      # Resource Type definition for AWS::SQS::Queue
      class Queue < ResourceType
        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for QueueName
        def QueueName(value)
          dsl_attribute(:QueueName, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for ContentBasedDeduplication
        def ContentBasedDeduplication(value)
          dsl_attribute(:ContentBasedDeduplication, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for DelaySeconds
        def DelaySeconds(value)
          dsl_attribute(:DelaySeconds, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for FifoQueue
        def FifoQueue(value)
          dsl_attribute(:FifoQueue, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for KmsDataKeyReusePeriodSeconds
        def KmsDataKeyReusePeriodSeconds(value)
          dsl_attribute(:KmsDataKeyReusePeriodSeconds, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for KmsMasterKeyId
        def KmsMasterKeyId(value)
          dsl_attribute(:KmsMasterKeyId, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for MaximumMessageSize
        def MaximumMessageSize(value)
          dsl_attribute(:MaximumMessageSize, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for MessageRetentionPeriod
        def MessageRetentionPeriod(value)
          dsl_attribute(:MessageRetentionPeriod, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for ReceiveMessageWaitTimeSeconds
        def ReceiveMessageWaitTimeSeconds(value)
          dsl_attribute(:ReceiveMessageWaitTimeSeconds, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for RedrivePolicy
        def RedrivePolicy(value)
          dsl_attribute(:RedrivePolicy, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for VisibilityTimeout
        def VisibilityTimeout(value)
          dsl_attribute(:VisibilityTimeout, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::SQS::Queue]
    def AWS_SQS_Queue(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::SQS::Queue, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
