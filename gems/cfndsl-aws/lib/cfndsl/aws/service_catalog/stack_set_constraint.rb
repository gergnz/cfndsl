# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ServiceCatalog
      # Resource Type definition for AWS::ServiceCatalog::StackSetConstraint
      class StackSetConstraint < ResourceType
        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for StackInstanceControl
        def StackInstanceControl(value)
          dsl_attribute(:StackInstanceControl, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AcceptLanguage
        def AcceptLanguage(value)
          dsl_attribute(:AcceptLanguage, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PortfolioId
        def PortfolioId(value)
          dsl_attribute(:PortfolioId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ProductId
        def ProductId(value)
          dsl_attribute(:ProductId, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for RegionList
        def RegionList(values)
          dsl_list_attribute(:RegionList, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for RegionList
        def Region(value, fn_if: nil)
          dsl_push_attribute(:RegionList, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for AdminRole
        def AdminRole(value)
          dsl_attribute(:AdminRole, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for AccountList
        def AccountList(values)
          dsl_list_attribute(:AccountList, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for AccountList
        def Account(value, fn_if: nil)
          dsl_push_attribute(:AccountList, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for ExecutionRole
        def ExecutionRole(value)
          dsl_attribute(:ExecutionRole, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ServiceCatalog::StackSetConstraint]
    def AWS_ServiceCatalog_StackSetConstraint(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ServiceCatalog::StackSetConstraint, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
