# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ServiceCatalog
      # Resource Type definition for AWS::ServiceCatalog::CloudFormationProduct
      class CloudFormationProduct < ResourceType
        # Property Definition ProvisioningArtifactProperties
        class ProvisioningArtifactProperties < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Description
          def Description(value)
            dsl_attribute(:Description, value)
          end

          #   @param [Object|JSONable] value
          #     The value to use for Info
          def Info(value)
            dsl_attribute(:Info, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for DisableTemplateValidation
          def DisableTemplateValidation(value)
            dsl_attribute(:DisableTemplateValidation, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Owner
        def Owner(value)
          dsl_attribute(:Owner, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ProductName
        def ProductName(value)
          dsl_attribute(:ProductName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SupportEmail
        def SupportEmail(value)
          dsl_attribute(:SupportEmail, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ProvisioningArtifactNames
        def ProvisioningArtifactNames(value)
          dsl_attribute(:ProvisioningArtifactNames, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for ReplaceProvisioningArtifacts
        def ReplaceProvisioningArtifacts(value)
          dsl_attribute(:ReplaceProvisioningArtifacts, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SupportDescription
        def SupportDescription(value)
          dsl_attribute(:SupportDescription, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Distributor
        def Distributor(value)
          dsl_attribute(:Distributor, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ProvisioningArtifactIds
        def ProvisioningArtifactIds(value)
          dsl_attribute(:ProvisioningArtifactIds, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AcceptLanguage
        def AcceptLanguage(value)
          dsl_attribute(:AcceptLanguage, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SupportUrl
        def SupportUrl(value)
          dsl_attribute(:SupportUrl, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        # @param [Array<ProvisioningArtifactProperties>|JSONable>] values
        #   The List of values to use for ProvisioningArtifactParameters
        def ProvisioningArtifactParameters(values)
          dsl_list_attribute(:ProvisioningArtifactParameters, values)
        end

        #  @param [ProvisioningArtifactProperties|JSONable] value  Append value to the List
        #    The List of values to use for ProvisioningArtifactParameters
        # @@overload ProvisioningArtifactParameter(&block)
        # Append value to the List from block via instance eval of a new ProvisioningArtifactProperties
        def ProvisioningArtifactParameter(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:ProvisioningArtifactParameters, value, fn_if: fn_if, attr_class: ProvisioningArtifactProperties, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ServiceCatalog::CloudFormationProduct]
    def AWS_ServiceCatalog_CloudFormationProduct(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ServiceCatalog::CloudFormationProduct, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
