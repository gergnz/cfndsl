# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module OpsWorks
      # Resource Type definition for AWS::OpsWorks::Stack
      class Stack < ResourceType
        # Property Definition Source
        class Source < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Password
          def Password(value)
            dsl_attribute(:Password, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Revision
          def Revision(value)
            dsl_attribute(:Revision, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for SshKey
          def SshKey(value)
            dsl_attribute(:SshKey, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Type
          def Type(value)
            dsl_attribute(:Type, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Url
          def Url(value)
            dsl_attribute(:Url, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Username
          def Username(value)
            dsl_attribute(:Username, value)
          end
        end

        # Property Definition StackConfigurationManager
        class StackConfigurationManager < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Version
          def Version(value)
            dsl_attribute(:Version, value)
          end
        end

        # Property Definition RdsDbInstance
        class RdsDbInstance < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for DbPassword
          def DbPassword(value)
            dsl_attribute(:DbPassword, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DbUser
          def DbUser(value)
            dsl_attribute(:DbUser, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for RdsDbInstanceArn
          def RdsDbInstanceArn(value)
            dsl_attribute(:RdsDbInstanceArn, value)
          end
        end

        # Property Definition ElasticIp
        class ElasticIp < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Ip
          def Ip(value)
            dsl_attribute(:Ip, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end
        end

        # Property Definition ChefConfiguration
        class ChefConfiguration < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for BerkshelfVersion
          def BerkshelfVersion(value)
            dsl_attribute(:BerkshelfVersion, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for ManageBerkshelf
          def ManageBerkshelf(value)
            dsl_attribute(:ManageBerkshelf, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AgentVersion
        def AgentVersion(value)
          dsl_attribute(:AgentVersion, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for Attributes
        def Attributes(value)
          dsl_attribute(:Attributes, value)
        end

        #   @param [ChefConfiguration|JSONable] value
        #     The value to use for ChefConfiguration
        # @@overload ChefConfiguration(&block)
        #   Set :ChefConfiguration from block via instance eval of a new ChefConfiguration
        def ChefConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:ChefConfiguration, value, attr_class: ChefConfiguration, **value_hash, &block)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for CloneAppIds
        def CloneAppIds(values)
          dsl_list_attribute(:CloneAppIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for CloneAppIds
        def CloneAppId(value, fn_if: nil)
          dsl_push_attribute(:CloneAppIds, value, fn_if: fn_if)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for ClonePermissions
        def ClonePermissions(value)
          dsl_attribute(:ClonePermissions, value)
        end

        #   @param [StackConfigurationManager|JSONable] value
        #     The value to use for ConfigurationManager
        # @@overload ConfigurationManager(&block)
        #   Set :ConfigurationManager from block via instance eval of a new StackConfigurationManager
        def ConfigurationManager(value = nil, **value_hash, &block)
          dsl_attribute(:ConfigurationManager, value, attr_class: StackConfigurationManager, **value_hash, &block)
        end

        #   @param [Source|JSONable] value
        #     The value to use for CustomCookbooksSource
        # @@overload CustomCookbooksSource(&block)
        #   Set :CustomCookbooksSource from block via instance eval of a new Source
        def CustomCookbooksSource(value = nil, **value_hash, &block)
          dsl_attribute(:CustomCookbooksSource, value, attr_class: Source, **value_hash, &block)
        end

        #   @param [Object|JSONable] value
        #     The value to use for CustomJson
        def CustomJson(value)
          dsl_attribute(:CustomJson, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DefaultAvailabilityZone
        def DefaultAvailabilityZone(value)
          dsl_attribute(:DefaultAvailabilityZone, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DefaultInstanceProfileArn
        def DefaultInstanceProfileArn(value)
          dsl_attribute(:DefaultInstanceProfileArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DefaultOs
        def DefaultOs(value)
          dsl_attribute(:DefaultOs, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DefaultRootDeviceType
        def DefaultRootDeviceType(value)
          dsl_attribute(:DefaultRootDeviceType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DefaultSshKeyName
        def DefaultSshKeyName(value)
          dsl_attribute(:DefaultSshKeyName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DefaultSubnetId
        def DefaultSubnetId(value)
          dsl_attribute(:DefaultSubnetId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for EcsClusterArn
        def EcsClusterArn(value)
          dsl_attribute(:EcsClusterArn, value)
        end

        # @param [Array<ElasticIp>|JSONable>] values
        #   The List of values to use for ElasticIps
        def ElasticIps(values)
          dsl_list_attribute(:ElasticIps, values)
        end

        #  @param [ElasticIp|JSONable] value  Append value to the List
        #    The List of values to use for ElasticIps
        # @@overload ElasticIp(&block)
        # Append value to the List from block via instance eval of a new ElasticIp
        def ElasticIp(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:ElasticIps, value, fn_if: fn_if, attr_class: ElasticIp, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for HostnameTheme
        def HostnameTheme(value)
          dsl_attribute(:HostnameTheme, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        # @param [Array<RdsDbInstance>|JSONable>] values
        #   The List of values to use for RdsDbInstances
        def RdsDbInstances(values)
          dsl_list_attribute(:RdsDbInstances, values)
        end

        #  @param [RdsDbInstance|JSONable] value  Append value to the List
        #    The List of values to use for RdsDbInstances
        # @@overload RdsDbInstanc(&block)
        # Append value to the List from block via instance eval of a new RdsDbInstance
        def RdsDbInstanc(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:RdsDbInstances, value, fn_if: fn_if, attr_class: RdsDbInstance, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for ServiceRoleArn
        def ServiceRoleArn(value)
          dsl_attribute(:ServiceRoleArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SourceStackId
        def SourceStackId(value)
          dsl_attribute(:SourceStackId, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for UseCustomCookbooks
        def UseCustomCookbooks(value)
          dsl_attribute(:UseCustomCookbooks, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for UseOpsworksSecurityGroups
        def UseOpsworksSecurityGroups(value)
          dsl_attribute(:UseOpsworksSecurityGroups, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for VpcId
        def VpcId(value)
          dsl_attribute(:VpcId, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::OpsWorks::Stack]
    def AWS_OpsWorks_Stack(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::OpsWorks::Stack, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
