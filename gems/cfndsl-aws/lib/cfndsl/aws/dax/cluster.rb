# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module DAX
      # Resource Type definition for AWS::DAX::Cluster
      class Cluster < ResourceType
        # Property Definition SSESpecification
        class SSESpecification < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for SSEEnabled
          def SSEEnabled(value)
            dsl_attribute(:SSEEnabled, value)
          end
        end

        #   @param [SSESpecification|JSONable] value
        #     The value to use for SSESpecification
        # @@overload SSESpecification(&block)
        #   Set :SSESpecification from block via instance eval of a new SSESpecification
        def SSESpecification(value = nil, **value_hash, &block)
          dsl_attribute(:SSESpecification, value, attr_class: SSESpecification, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for ReplicationFactor
        def ReplicationFactor(value)
          dsl_attribute(:ReplicationFactor, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ParameterGroupName
        def ParameterGroupName(value)
          dsl_attribute(:ParameterGroupName, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for AvailabilityZones
        def AvailabilityZones(values)
          dsl_list_attribute(:AvailabilityZones, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for AvailabilityZones
        def AvailabilityZone(value, fn_if: nil)
          dsl_push_attribute(:AvailabilityZones, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for IAMRoleARN
        def IAMRoleARN(value)
          dsl_attribute(:IAMRoleARN, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SubnetGroupName
        def SubnetGroupName(value)
          dsl_attribute(:SubnetGroupName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PreferredMaintenanceWindow
        def PreferredMaintenanceWindow(value)
          dsl_attribute(:PreferredMaintenanceWindow, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for NotificationTopicARN
        def NotificationTopicARN(value)
          dsl_attribute(:NotificationTopicARN, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SecurityGroupIds
        def SecurityGroupIds(values)
          dsl_list_attribute(:SecurityGroupIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SecurityGroupIds
        def SecurityGroupId(value, fn_if: nil)
          dsl_push_attribute(:SecurityGroupIds, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for NodeType
        def NodeType(value)
          dsl_attribute(:NodeType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ClusterName
        def ClusterName(value)
          dsl_attribute(:ClusterName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ClusterDiscoveryEndpoint
        def ClusterDiscoveryEndpoint(value)
          dsl_attribute(:ClusterDiscoveryEndpoint, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for Tags
        def Tags(value)
          dsl_attribute(:Tags, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::DAX::Cluster]
    def AWS_DAX_Cluster(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::DAX::Cluster, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
