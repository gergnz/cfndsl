# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module GameLift
      # The AWS::GameLift::Alias resource creates an alias for an Amazon GameLift (GameLift) fleet destination.
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-gamelift.git
      class Alias < ResourceType
        # Property Definition RoutingStrategy
        class RoutingStrategy < PropertyType
          #   @param [String|JSONable] value
          #     The message text to be used with a terminal routing strategy. If you specify TERMINAL for the Type property, you must specify this property.
          def Message(value)
            dsl_attribute(:Message, value)
          end

          #   @param [String|JSONable] value
          #     A unique identifier for a fleet that the alias points to. If you specify SIMPLE for the Type property, you must specify this property.
          def FleetId(value)
            dsl_attribute(:FleetId, value)
          end

          #   @param [String|JSONable] value
          #     Simple routing strategy. The alias resolves to one specific fleet. Use this type when routing to active fleets.
          def Type(value)
            dsl_attribute(:Type, value)
          end
        end

        #   @param [String|JSONable] value
        #     A human-readable description of the alias.
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [String|JSONable] value
        #     A descriptive label that is associated with an alias. Alias names do not need to be unique.
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [RoutingStrategy|JSONable] value
        #     A routing configuration that specifies where traffic is directed for this alias, such as to a fleet or to a message.
        # @@overload RoutingStrategy(&block)
        #   Set :RoutingStrategy from block via instance eval of a new RoutingStrategy
        def RoutingStrategy(value = nil, **value_hash, &block)
          dsl_attribute(:RoutingStrategy, value, attr_class: RoutingStrategy, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     Unique alias ID
        def AliasId(value)
          dsl_attribute(:AliasId, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::GameLift::Alias]
    def AWS_GameLift_Alias(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::GameLift::Alias, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
