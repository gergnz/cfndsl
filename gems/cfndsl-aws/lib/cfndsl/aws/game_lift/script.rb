# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module GameLift
      # Resource Type definition for AWS::GameLift::Script
      class Script < ResourceType
        # Property Definition S3Location
        class S3Location < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ObjectVersion
          def ObjectVersion(value)
            dsl_attribute(:ObjectVersion, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Bucket
          def Bucket(value)
            dsl_attribute(:Bucket, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for RoleArn
          def RoleArn(value)
            dsl_attribute(:RoleArn, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [S3Location|JSONable] value
        #     The value to use for StorageLocation
        # @@overload StorageLocation(&block)
        #   Set :StorageLocation from block via instance eval of a new S3Location
        def StorageLocation(value = nil, **value_hash, &block)
          dsl_attribute(:StorageLocation, value, attr_class: S3Location, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Version
        def Version(value)
          dsl_attribute(:Version, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::GameLift::Script]
    def AWS_GameLift_Script(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::GameLift::Script, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
