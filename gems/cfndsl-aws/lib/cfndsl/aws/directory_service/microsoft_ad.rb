# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module DirectoryService
      # Resource Type definition for AWS::DirectoryService::MicrosoftAD
      class MicrosoftAD < ResourceType
        # Property Definition VpcSettings
        class VpcSettings < PropertyType
          # @param [Array<String>|JSONable>] values
          #   The List of values to use for SubnetIds
          def SubnetIds(values)
            dsl_list_attribute(:SubnetIds, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for SubnetIds
          def SubnetId(value, fn_if: nil)
            dsl_push_attribute(:SubnetIds, value, fn_if: fn_if)
          end

          #   @param [String|JSONable] value
          #     The value to use for VpcId
          def VpcId(value)
            dsl_attribute(:VpcId, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Alias
        def Alias(value)
          dsl_attribute(:Alias, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for DnsIpAddresses
        def DnsIpAddresses(values)
          dsl_list_attribute(:DnsIpAddresses, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for DnsIpAddresses
        def DnsIpAddress(value, fn_if: nil)
          dsl_push_attribute(:DnsIpAddresses, value, fn_if: fn_if)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for CreateAlias
        def CreateAlias(value)
          dsl_attribute(:CreateAlias, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Edition
        def Edition(value)
          dsl_attribute(:Edition, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for EnableSso
        def EnableSso(value)
          dsl_attribute(:EnableSso, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Password
        def Password(value)
          dsl_attribute(:Password, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ShortName
        def ShortName(value)
          dsl_attribute(:ShortName, value)
        end

        #   @param [VpcSettings|JSONable] value
        #     The value to use for VpcSettings
        # @@overload VpcSettings(&block)
        #   Set :VpcSettings from block via instance eval of a new VpcSettings
        def VpcSettings(value = nil, **value_hash, &block)
          dsl_attribute(:VpcSettings, value, attr_class: VpcSettings, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::DirectoryService::MicrosoftAD]
    def AWS_DirectoryService_MicrosoftAD(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::DirectoryService::MicrosoftAD, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
