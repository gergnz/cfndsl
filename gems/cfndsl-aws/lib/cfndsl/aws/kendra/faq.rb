# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Kendra
      # A Kendra FAQ resource
      # @see https://docs.aws.amazon.com/kendra/latest/dg/in-creating-faq.html
      class Faq < ResourceType
        # A label for tagging Kendra resources
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     A string used to identify this tag
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     A string containing the value for the tag
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # Property Definition S3Path
        class S3Path < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Bucket
          def Bucket(value)
            dsl_attribute(:Bucket, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     Index ID
        def IndexId(value)
          dsl_attribute(:IndexId, value)
        end

        #   @param [String|JSONable] value
        #     FAQ name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     FAQ description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [S3Path|JSONable] value
        #     FAQ S3 path
        # @@overload S3Path(&block)
        #   Set :S3Path from block via instance eval of a new S3Path
        def S3Path(value = nil, **value_hash, &block)
          dsl_attribute(:S3Path, value, attr_class: S3Path, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     FAQ role ARN
        def RoleArn(value)
          dsl_attribute(:RoleArn, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   Tags for labeling the FAQ
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    Tags for labeling the FAQ
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Kendra::Faq]
    def AWS_Kendra_Faq(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Kendra::Faq, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
