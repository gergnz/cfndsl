# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Kendra
      # A Kendra index
      # @see https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html
      class Index < ResourceType
        # Property Definition ServerSideEncryptionConfiguration
        class ServerSideEncryptionConfiguration < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for KmsKeyId
          def KmsKeyId(value)
            dsl_attribute(:KmsKeyId, value)
          end
        end

        # A label for tagging Kendra resources
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     A string used to identify this tag
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     A string containing the value for the tag
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # Property Definition Relevance
        class Relevance < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for Freshness
          def Freshness(value)
            dsl_attribute(:Freshness, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Importance
          def Importance(value)
            dsl_attribute(:Importance, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Duration
          def Duration(value)
            dsl_attribute(:Duration, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for RankOrder
          def RankOrder(value)
            dsl_attribute(:RankOrder, value)
          end

          # @param [Array<ValueImportanceItem>|JSONable>] values
          #   The List of values to use for ValueImportanceItems
          def ValueImportanceItems(values)
            dsl_list_attribute(:ValueImportanceItems, values)
          end

          #  @param [ValueImportanceItem|JSONable] value  Append value to the List
          #    The List of values to use for ValueImportanceItems
          # @@overload ValueImportanceItem(&block)
          # Append value to the List from block via instance eval of a new ValueImportanceItem
          def ValueImportanceItem(value = nil, fn_if: nil, **value_hash, &block)
            dsl_push_attribute(:ValueImportanceItems, value, fn_if: fn_if, attr_class: ValueImportanceItem, **value_hash, &block)
          end
        end

        # Property Definition ValueImportanceItem
        class ValueImportanceItem < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # Property Definition Search
        class Search < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for Facetable
          def Facetable(value)
            dsl_attribute(:Facetable, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for Searchable
          def Searchable(value)
            dsl_attribute(:Searchable, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for Displayable
          def Displayable(value)
            dsl_attribute(:Displayable, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for Sortable
          def Sortable(value)
            dsl_attribute(:Sortable, value)
          end
        end

        # Property Definition DocumentMetadataConfiguration
        class DocumentMetadataConfiguration < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Type
          def Type(value)
            dsl_attribute(:Type, value)
          end

          #   @param [Relevance|JSONable] value
          #     The value to use for Relevance
          # @@overload Relevance(&block)
          #   Set :Relevance from block via instance eval of a new Relevance
          def Relevance(value = nil, **value_hash, &block)
            dsl_attribute(:Relevance, value, attr_class: Relevance, **value_hash, &block)
          end

          #   @param [Search|JSONable] value
          #     The value to use for Search
          # @@overload Search(&block)
          #   Set :Search from block via instance eval of a new Search
          def Search(value = nil, **value_hash, &block)
            dsl_attribute(:Search, value, attr_class: Search, **value_hash, &block)
          end
        end

        # Property Definition CapacityUnitsConfiguration
        class CapacityUnitsConfiguration < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for StorageCapacityUnits
          def StorageCapacityUnits(value)
            dsl_attribute(:StorageCapacityUnits, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for QueryCapacityUnits
          def QueryCapacityUnits(value)
            dsl_attribute(:QueryCapacityUnits, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     A description for the index
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [ServerSideEncryptionConfiguration|JSONable] value
        #     Server side encryption configuration
        # @@overload ServerSideEncryptionConfiguration(&block)
        #   Set :ServerSideEncryptionConfiguration from block via instance eval of a new ServerSideEncryptionConfiguration
        def ServerSideEncryptionConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:ServerSideEncryptionConfiguration, value, attr_class: ServerSideEncryptionConfiguration, **value_hash, &block)
        end

        # @param [Array<Tag>|JSONable>] values
        #   Tags for labeling the index
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    Tags for labeling the index
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RoleArn
        def RoleArn(value)
          dsl_attribute(:RoleArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Edition
        def Edition(value)
          dsl_attribute(:Edition, value)
        end

        # @param [Array<DocumentMetadataConfiguration>|JSONable>] values
        #   Document metadata configurations
        def DocumentMetadataConfigurations(values)
          dsl_list_attribute(:DocumentMetadataConfigurations, values)
        end

        #  @param [DocumentMetadataConfiguration|JSONable] value  Append value to the List
        #    Document metadata configurations
        # @@overload DocumentMetadataConfiguration(&block)
        # Append value to the List from block via instance eval of a new DocumentMetadataConfiguration
        def DocumentMetadataConfiguration(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:DocumentMetadataConfigurations, value, fn_if: fn_if, attr_class: DocumentMetadataConfiguration, **value_hash, &block)
        end

        #   @param [CapacityUnitsConfiguration|JSONable] value
        #     Capacity units
        # @@overload CapacityUnits(&block)
        #   Set :CapacityUnits from block via instance eval of a new CapacityUnitsConfiguration
        def CapacityUnits(value = nil, **value_hash, &block)
          dsl_attribute(:CapacityUnits, value, attr_class: CapacityUnitsConfiguration, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Kendra::Index]
    def AWS_Kendra_Index(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Kendra::Index, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
