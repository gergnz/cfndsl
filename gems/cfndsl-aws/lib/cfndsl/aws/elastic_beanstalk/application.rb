# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ElasticBeanstalk
      # Resource Type definition for AWS::ElasticBeanstalk::Application
      class Application < ResourceType
        # Property Definition ApplicationResourceLifecycleConfig
        class ApplicationResourceLifecycleConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ServiceRole
          def ServiceRole(value)
            dsl_attribute(:ServiceRole, value)
          end

          #   @param [ApplicationVersionLifecycleConfig|JSONable] value
          #     The value to use for VersionLifecycleConfig
          # @@overload VersionLifecycleConfig(&block)
          #   Set :VersionLifecycleConfig from block via instance eval of a new ApplicationVersionLifecycleConfig
          def VersionLifecycleConfig(value = nil, **value_hash, &block)
            dsl_attribute(:VersionLifecycleConfig, value, attr_class: ApplicationVersionLifecycleConfig, **value_hash, &block)
          end
        end

        # Property Definition ApplicationVersionLifecycleConfig
        class ApplicationVersionLifecycleConfig < PropertyType
          #   @param [MaxAgeRule|JSONable] value
          #     The value to use for MaxAgeRule
          # @@overload MaxAgeRule(&block)
          #   Set :MaxAgeRule from block via instance eval of a new MaxAgeRule
          def MaxAgeRule(value = nil, **value_hash, &block)
            dsl_attribute(:MaxAgeRule, value, attr_class: MaxAgeRule, **value_hash, &block)
          end

          #   @param [MaxCountRule|JSONable] value
          #     The value to use for MaxCountRule
          # @@overload MaxCountRule(&block)
          #   Set :MaxCountRule from block via instance eval of a new MaxCountRule
          def MaxCountRule(value = nil, **value_hash, &block)
            dsl_attribute(:MaxCountRule, value, attr_class: MaxCountRule, **value_hash, &block)
          end
        end

        # Property Definition MaxAgeRule
        class MaxAgeRule < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for DeleteSourceFromS3
          def DeleteSourceFromS3(value)
            dsl_attribute(:DeleteSourceFromS3, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for Enabled
          def Enabled(value)
            dsl_attribute(:Enabled, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for MaxAgeInDays
          def MaxAgeInDays(value)
            dsl_attribute(:MaxAgeInDays, value)
          end
        end

        # Property Definition MaxCountRule
        class MaxCountRule < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for DeleteSourceFromS3
          def DeleteSourceFromS3(value)
            dsl_attribute(:DeleteSourceFromS3, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for Enabled
          def Enabled(value)
            dsl_attribute(:Enabled, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for MaxCount
          def MaxCount(value)
            dsl_attribute(:MaxCount, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApplicationName
        def ApplicationName(value)
          dsl_attribute(:ApplicationName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [ApplicationResourceLifecycleConfig|JSONable] value
        #     The value to use for ResourceLifecycleConfig
        # @@overload ResourceLifecycleConfig(&block)
        #   Set :ResourceLifecycleConfig from block via instance eval of a new ApplicationResourceLifecycleConfig
        def ResourceLifecycleConfig(value = nil, **value_hash, &block)
          dsl_attribute(:ResourceLifecycleConfig, value, attr_class: ApplicationResourceLifecycleConfig, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ElasticBeanstalk::Application]
    def AWS_ElasticBeanstalk_Application(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ElasticBeanstalk::Application, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
