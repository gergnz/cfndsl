# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ElasticBeanstalk
      # Resource Type definition for AWS::ElasticBeanstalk::ApplicationVersion
      class ApplicationVersion < ResourceType
        # Property Definition SourceBundle
        class SourceBundle < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for S3Bucket
          def S3Bucket(value)
            dsl_attribute(:S3Bucket, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for S3Key
          def S3Key(value)
            dsl_attribute(:S3Key, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApplicationName
        def ApplicationName(value)
          dsl_attribute(:ApplicationName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [SourceBundle|JSONable] value
        #     The value to use for SourceBundle
        # @@overload SourceBundle(&block)
        #   Set :SourceBundle from block via instance eval of a new SourceBundle
        def SourceBundle(value = nil, **value_hash, &block)
          dsl_attribute(:SourceBundle, value, attr_class: SourceBundle, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ElasticBeanstalk::ApplicationVersion]
    def AWS_ElasticBeanstalk_ApplicationVersion(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ElasticBeanstalk::ApplicationVersion, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
