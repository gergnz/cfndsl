# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ImageBuilder
      # Resource schema for AWS::ImageBuilder::ImageRecipe
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-imagebuilder.git
      class ImageRecipe < ResourceType
        # Configuration details of the component.
        class ComponentConfiguration < PropertyType
          #   @param [String|JSONable] value
          #     The Amazon Resource Name (ARN) of the component.
          def ComponentArn(value)
            dsl_attribute(:ComponentArn, value)
          end
        end

        # Defines block device mappings for the instance used to configure your image.
        class InstanceBlockDeviceMapping < PropertyType
          #   @param [String|JSONable] value
          #     The device to which these mappings apply.
          def DeviceName(value)
            dsl_attribute(:DeviceName, value)
          end

          #   @param [String|JSONable] value
          #     Use to manage instance ephemeral devices.
          def VirtualName(value)
            dsl_attribute(:VirtualName, value)
          end

          #   @param [String|JSONable] value
          #     Use to remove a mapping from the parent image.
          def NoDevice(value)
            dsl_attribute(:NoDevice, value)
          end

          #   @param [EbsInstanceBlockDeviceSpecification|JSONable] value
          #     Use to manage Amazon EBS-specific configuration for this mapping.
          # @@overload Ebs(&block)
          #   Set :Ebs from block via instance eval of a new EbsInstanceBlockDeviceSpecification
          def Ebs(value = nil, **value_hash, &block)
            dsl_attribute(:Ebs, value, attr_class: EbsInstanceBlockDeviceSpecification, **value_hash, &block)
          end
        end

        # Amazon EBS-specific block device mapping specifications.
        class EbsInstanceBlockDeviceSpecification < PropertyType
          #   @param [Boolean|JSONable] value
          #     Use to configure device encryption.
          def Encrypted(value)
            dsl_attribute(:Encrypted, value)
          end

          #   @param [Boolean|JSONable] value
          #     Use to configure delete on termination of the associated device.
          def DeleteOnTermination(value)
            dsl_attribute(:DeleteOnTermination, value)
          end

          #   @param [Integer|JSONable] value
          #     Use to configure device IOPS.
          def Iops(value)
            dsl_attribute(:Iops, value)
          end

          #   @param [String|JSONable] value
          #     Use to configure the KMS key to use when encrypting the device.
          def KmsKeyId(value)
            dsl_attribute(:KmsKeyId, value)
          end

          #   @param [String|JSONable] value
          #     The snapshot that defines the device contents.
          def SnapshotId(value)
            dsl_attribute(:SnapshotId, value)
          end

          #   @param [Integer|JSONable] value
          #     Use to override the device's volume size.
          def VolumeSize(value)
            dsl_attribute(:VolumeSize, value)
          end

          #   @param [String|JSONable] value
          #     Use to override the device's volume type.
          def VolumeType(value)
            dsl_attribute(:VolumeType, value)
          end
        end

        #   @param [String|JSONable] value
        #     The Amazon Resource Name (ARN) of the image recipe.
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The name of the image recipe.
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     The description of the image recipe.
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [String|JSONable] value
        #     The version of the image recipe.
        def Version(value)
          dsl_attribute(:Version, value)
        end

        # @param [Array<ComponentConfiguration>|JSONable>] values
        #   The components of the image recipe.
        def Components(values)
          dsl_list_attribute(:Components, values)
        end

        #  @param [ComponentConfiguration|JSONable] value  Append value to the List
        #    The components of the image recipe.
        # @@overload Component(&block)
        # Append value to the List from block via instance eval of a new ComponentConfiguration
        def Component(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Components, value, fn_if: fn_if, attr_class: ComponentConfiguration, **value_hash, &block)
        end

        # @param [Array<InstanceBlockDeviceMapping>|JSONable>] values
        #   The block device mappings to apply when creating images from this recipe.
        def BlockDeviceMappings(values)
          dsl_list_attribute(:BlockDeviceMappings, values)
        end

        #  @param [InstanceBlockDeviceMapping|JSONable] value  Append value to the List
        #    The block device mappings to apply when creating images from this recipe.
        # @@overload BlockDeviceMapping(&block)
        # Append value to the List from block via instance eval of a new InstanceBlockDeviceMapping
        def BlockDeviceMapping(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:BlockDeviceMappings, value, fn_if: fn_if, attr_class: InstanceBlockDeviceMapping, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The parent image of the image recipe.
        def ParentImage(value)
          dsl_attribute(:ParentImage, value)
        end

        #   @param [String|JSONable] value
        #     The working directory to be used during build and test workflows.
        def WorkingDirectory(value)
          dsl_attribute(:WorkingDirectory, value)
        end

        #   @param [Object|JSONable] value
        #     The tags of the image recipe.
        def Tags(value)
          dsl_attribute(:Tags, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ImageBuilder::ImageRecipe]
    def AWS_ImageBuilder_ImageRecipe(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ImageBuilder::ImageRecipe, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
