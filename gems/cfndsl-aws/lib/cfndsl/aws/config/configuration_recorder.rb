# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Config
      # Resource Type definition for AWS::Config::ConfigurationRecorder
      class ConfigurationRecorder < ResourceType
        # Property Definition RecordingGroup
        class RecordingGroup < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for IncludeGlobalResourceTypes
          def IncludeGlobalResourceTypes(value)
            dsl_attribute(:IncludeGlobalResourceTypes, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for ResourceTypes
          def ResourceTypes(values)
            dsl_list_attribute(:ResourceTypes, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for ResourceTypes
          def ResourceTyp(value, fn_if: nil)
            dsl_push_attribute(:ResourceTypes, value, fn_if: fn_if)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for AllSupported
          def AllSupported(value)
            dsl_attribute(:AllSupported, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [RecordingGroup|JSONable] value
        #     The value to use for RecordingGroup
        # @@overload RecordingGroup(&block)
        #   Set :RecordingGroup from block via instance eval of a new RecordingGroup
        def RecordingGroup(value = nil, **value_hash, &block)
          dsl_attribute(:RecordingGroup, value, attr_class: RecordingGroup, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for RoleARN
        def RoleARN(value)
          dsl_attribute(:RoleARN, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Config::ConfigurationRecorder]
    def AWS_Config_ConfigurationRecorder(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Config::ConfigurationRecorder, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
