# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Config
      # Resource Type definition for AWS::Config::OrganizationConfigRule
      class OrganizationConfigRule < ResourceType
        # Property Definition OrganizationManagedRuleMetadata
        class OrganizationManagedRuleMetadata < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for TagKeyScope
          def TagKeyScope(value)
            dsl_attribute(:TagKeyScope, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for TagValueScope
          def TagValueScope(value)
            dsl_attribute(:TagValueScope, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Description
          def Description(value)
            dsl_attribute(:Description, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ResourceIdScope
          def ResourceIdScope(value)
            dsl_attribute(:ResourceIdScope, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for RuleIdentifier
          def RuleIdentifier(value)
            dsl_attribute(:RuleIdentifier, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for ResourceTypesScope
          def ResourceTypesScopes(values)
            dsl_list_attribute(:ResourceTypesScope, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for ResourceTypesScope
          def ResourceTypesScope(value, fn_if: nil)
            dsl_push_attribute(:ResourceTypesScope, value, fn_if: fn_if)
          end

          #   @param [String|JSONable] value
          #     The value to use for MaximumExecutionFrequency
          def MaximumExecutionFrequency(value)
            dsl_attribute(:MaximumExecutionFrequency, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for InputParameters
          def InputParameters(value)
            dsl_attribute(:InputParameters, value)
          end
        end

        # Property Definition OrganizationCustomRuleMetadata
        class OrganizationCustomRuleMetadata < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for TagKeyScope
          def TagKeyScope(value)
            dsl_attribute(:TagKeyScope, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for TagValueScope
          def TagValueScope(value)
            dsl_attribute(:TagValueScope, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Description
          def Description(value)
            dsl_attribute(:Description, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ResourceIdScope
          def ResourceIdScope(value)
            dsl_attribute(:ResourceIdScope, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for LambdaFunctionArn
          def LambdaFunctionArn(value)
            dsl_attribute(:LambdaFunctionArn, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for OrganizationConfigRuleTriggerTypes
          def OrganizationConfigRuleTriggerTypes(values)
            dsl_list_attribute(:OrganizationConfigRuleTriggerTypes, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for OrganizationConfigRuleTriggerTypes
          def OrganizationConfigRuleTriggerTyp(value, fn_if: nil)
            dsl_push_attribute(:OrganizationConfigRuleTriggerTypes, value, fn_if: fn_if)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for ResourceTypesScope
          def ResourceTypesScopes(values)
            dsl_list_attribute(:ResourceTypesScope, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for ResourceTypesScope
          def ResourceTypesScope(value, fn_if: nil)
            dsl_push_attribute(:ResourceTypesScope, value, fn_if: fn_if)
          end

          #   @param [String|JSONable] value
          #     The value to use for MaximumExecutionFrequency
          def MaximumExecutionFrequency(value)
            dsl_attribute(:MaximumExecutionFrequency, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for InputParameters
          def InputParameters(value)
            dsl_attribute(:InputParameters, value)
          end
        end

        #   @param [OrganizationCustomRuleMetadata|JSONable] value
        #     The value to use for OrganizationCustomRuleMetadata
        # @@overload OrganizationCustomRuleMetadata(&block)
        #   Set :OrganizationCustomRuleMetadata from block via instance eval of a new OrganizationCustomRuleMetadata
        def OrganizationCustomRuleMetadata(value = nil, **value_hash, &block)
          dsl_attribute(:OrganizationCustomRuleMetadata, value, attr_class: OrganizationCustomRuleMetadata, **value_hash, &block)
        end

        #   @param [OrganizationManagedRuleMetadata|JSONable] value
        #     The value to use for OrganizationManagedRuleMetadata
        # @@overload OrganizationManagedRuleMetadata(&block)
        #   Set :OrganizationManagedRuleMetadata from block via instance eval of a new OrganizationManagedRuleMetadata
        def OrganizationManagedRuleMetadata(value = nil, **value_hash, &block)
          dsl_attribute(:OrganizationManagedRuleMetadata, value, attr_class: OrganizationManagedRuleMetadata, **value_hash, &block)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for ExcludedAccounts
        def ExcludedAccounts(values)
          dsl_list_attribute(:ExcludedAccounts, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for ExcludedAccounts
        def ExcludedAccount(value, fn_if: nil)
          dsl_push_attribute(:ExcludedAccounts, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for OrganizationConfigRuleName
        def OrganizationConfigRuleName(value)
          dsl_attribute(:OrganizationConfigRuleName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Config::OrganizationConfigRule]
    def AWS_Config_OrganizationConfigRule(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Config::OrganizationConfigRule, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
