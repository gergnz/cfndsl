# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Config
      # Resource schema for AWS::Config::OrganizationConformancePack.
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-config.git
      class OrganizationConformancePack < ResourceType
        # Input parameters in the form of key-value pairs for the conformance pack.
        class ConformancePackInputParameter < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ParameterName
          def ParameterName(value)
            dsl_attribute(:ParameterName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ParameterValue
          def ParameterValue(value)
            dsl_attribute(:ParameterValue, value)
          end
        end

        #   @param [String|JSONable] value
        #     The name of the organization conformance pack.
        def OrganizationConformancePackName(value)
          dsl_attribute(:OrganizationConformancePackName, value)
        end

        #   @param [String|JSONable] value
        #     Location of file containing the template body.
        def TemplateS3Uri(value)
          dsl_attribute(:TemplateS3Uri, value)
        end

        #   @param [String|JSONable] value
        #     A string containing full conformance pack template body.
        def TemplateBody(value)
          dsl_attribute(:TemplateBody, value)
        end

        #   @param [String|JSONable] value
        #     AWS Config stores intermediate files while processing conformance pack template.
        def DeliveryS3Bucket(value)
          dsl_attribute(:DeliveryS3Bucket, value)
        end

        #   @param [String|JSONable] value
        #     The prefix for the delivery S3 bucket.
        def DeliveryS3KeyPrefix(value)
          dsl_attribute(:DeliveryS3KeyPrefix, value)
        end

        # @param [Array<ConformancePackInputParameter>|JSONable>] values
        #   A list of ConformancePackInputParameter objects.
        def ConformancePackInputParameters(values)
          dsl_list_attribute(:ConformancePackInputParameters, values)
        end

        #  @param [ConformancePackInputParameter|JSONable] value  Append value to the List
        #    A list of ConformancePackInputParameter objects.
        # @@overload ConformancePackInputParameter(&block)
        # Append value to the List from block via instance eval of a new ConformancePackInputParameter
        def ConformancePackInputParameter(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:ConformancePackInputParameters, value, fn_if: fn_if, attr_class: ConformancePackInputParameter, **value_hash, &block)
        end

        # @param [Array<String>|JSONable>] values
        #   A list of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack.
        def ExcludedAccounts(values)
          dsl_list_attribute(:ExcludedAccounts, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    A list of AWS accounts to be excluded from an organization conformance pack while deploying a conformance pack.
        def ExcludedAccount(value, fn_if: nil)
          dsl_push_attribute(:ExcludedAccounts, value, fn_if: fn_if)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Config::OrganizationConformancePack]
    def AWS_Config_OrganizationConformancePack(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Config::OrganizationConformancePack, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
