# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Config
      # Resource Type definition for AWS::Config::ConfigRule
      class ConfigRule < ResourceType
        # Property Definition Scope
        class Scope < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for TagKey
          def TagKey(value)
            dsl_attribute(:TagKey, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for ComplianceResourceTypes
          def ComplianceResourceTypes(values)
            dsl_list_attribute(:ComplianceResourceTypes, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for ComplianceResourceTypes
          def ComplianceResourceTyp(value, fn_if: nil)
            dsl_push_attribute(:ComplianceResourceTypes, value, fn_if: fn_if)
          end

          #   @param [String|JSONable] value
          #     The value to use for TagValue
          def TagValue(value)
            dsl_attribute(:TagValue, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ComplianceResourceId
          def ComplianceResourceId(value)
            dsl_attribute(:ComplianceResourceId, value)
          end
        end

        # Property Definition SourceDetail
        class SourceDetail < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for EventSource
          def EventSource(value)
            dsl_attribute(:EventSource, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for MaximumExecutionFrequency
          def MaximumExecutionFrequency(value)
            dsl_attribute(:MaximumExecutionFrequency, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for MessageType
          def MessageType(value)
            dsl_attribute(:MessageType, value)
          end
        end

        # Property Definition Source
        class Source < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for SourceIdentifier
          def SourceIdentifier(value)
            dsl_attribute(:SourceIdentifier, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Owner
          def Owner(value)
            dsl_attribute(:Owner, value)
          end

          # @param [Array<SourceDetail>|JSONable>] values
          #   The List of values to use for SourceDetails
          def SourceDetails(values)
            dsl_list_attribute(:SourceDetails, values)
          end

          #  @param [SourceDetail|JSONable] value  Append value to the List
          #    The List of values to use for SourceDetails
          # @@overload SourceDetail(&block)
          # Append value to the List from block via instance eval of a new SourceDetail
          def SourceDetail(value = nil, fn_if: nil, **value_hash, &block)
            dsl_push_attribute(:SourceDetails, value, fn_if: fn_if, attr_class: SourceDetail, **value_hash, &block)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for ConfigRuleId
        def ConfigRuleId(value)
          dsl_attribute(:ConfigRuleId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [Scope|JSONable] value
        #     The value to use for Scope
        # @@overload Scope(&block)
        #   Set :Scope from block via instance eval of a new Scope
        def Scope(value = nil, **value_hash, &block)
          dsl_attribute(:Scope, value, attr_class: Scope, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for ComplianceType
        def ComplianceType(value)
          dsl_attribute(:ComplianceType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ConfigRuleName
        def ConfigRuleName(value)
          dsl_attribute(:ConfigRuleName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for MaximumExecutionFrequency
        def MaximumExecutionFrequency(value)
          dsl_attribute(:MaximumExecutionFrequency, value)
        end

        #   @param [Source|JSONable] value
        #     The value to use for Source
        # @@overload Source(&block)
        #   Set :Source from block via instance eval of a new Source
        def Source(value = nil, **value_hash, &block)
          dsl_attribute(:Source, value, attr_class: Source, **value_hash, &block)
        end

        #   @param [Object|JSONable] value
        #     The value to use for InputParameters
        def InputParameters(value)
          dsl_attribute(:InputParameters, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Config::ConfigRule]
    def AWS_Config_ConfigRule(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Config::ConfigRule, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
