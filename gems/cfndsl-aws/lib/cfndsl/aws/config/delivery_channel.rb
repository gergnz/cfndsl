# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Config
      # Resource Type definition for AWS::Config::DeliveryChannel
      class DeliveryChannel < ResourceType
        # Property Definition ConfigSnapshotDeliveryProperties
        class ConfigSnapshotDeliveryProperties < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for DeliveryFrequency
          def DeliveryFrequency(value)
            dsl_attribute(:DeliveryFrequency, value)
          end
        end

        #   @param [ConfigSnapshotDeliveryProperties|JSONable] value
        #     The value to use for ConfigSnapshotDeliveryProperties
        # @@overload ConfigSnapshotDeliveryProperties(&block)
        #   Set :ConfigSnapshotDeliveryProperties from block via instance eval of a new ConfigSnapshotDeliveryProperties
        def ConfigSnapshotDeliveryProperties(value = nil, **value_hash, &block)
          dsl_attribute(:ConfigSnapshotDeliveryProperties, value, attr_class: ConfigSnapshotDeliveryProperties, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for S3BucketName
        def S3BucketName(value)
          dsl_attribute(:S3BucketName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SnsTopicARN
        def SnsTopicARN(value)
          dsl_attribute(:SnsTopicARN, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for S3KeyPrefix
        def S3KeyPrefix(value)
          dsl_attribute(:S3KeyPrefix, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Config::DeliveryChannel]
    def AWS_Config_DeliveryChannel(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Config::DeliveryChannel, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
