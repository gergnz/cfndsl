# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module RDS
      # Resource Type definition for AWS::RDS::EventSubscription
      class EventSubscription < ResourceType
        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for Enabled
        def Enabled(value)
          dsl_attribute(:Enabled, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for EventCategories
        def EventCategories(values)
          dsl_list_attribute(:EventCategories, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for EventCategories
        def EventCategory(value, fn_if: nil)
          dsl_push_attribute(:EventCategories, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for SnsTopicArn
        def SnsTopicArn(value)
          dsl_attribute(:SnsTopicArn, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SourceIds
        def SourceIds(values)
          dsl_list_attribute(:SourceIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SourceIds
        def SourceId(value, fn_if: nil)
          dsl_push_attribute(:SourceIds, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for SourceType
        def SourceType(value)
          dsl_attribute(:SourceType, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::RDS::EventSubscription]
    def AWS_RDS_EventSubscription(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::RDS::EventSubscription, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
