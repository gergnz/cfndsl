# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module RDS
      # An example resource schema demonstrating some basic constructs and validation rules.
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-rds
      class GlobalCluster < ResourceType
        #   @param [String|JSONable] value
        #     The name of the database engine to be used for this DB cluster. Valid Values: aurora (for MySQL 5.6-compatible Aurora), aurora-mysql (for MySQL 5.7-compatible Aurora).
        #     If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.
        def Engine(value)
          dsl_attribute(:Engine, value)
        end

        #   @param [String|JSONable] value
        #     The version number of the database engine to use. If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.
        def EngineVersion(value)
          dsl_attribute(:EngineVersion, value)
        end

        #   @param [Boolean|JSONable] value
        #     The deletion protection setting for the new global database. The global database can't be deleted when deletion protection is enabled.
        def DeletionProtection(value)
          dsl_attribute(:DeletionProtection, value)
        end

        #   @param [String|JSONable] value
        #     The cluster identifier of the new global database cluster. This parameter is stored as a lowercase string.
        def GlobalClusterIdentifier(value)
          dsl_attribute(:GlobalClusterIdentifier, value)
        end

        #   @param [String|JSONable] value
        #     The Amazon Resource Name (ARN) to use as the primary cluster of the global database. This parameter is optional. This parameter is stored as a lowercase string.
        def SourceDBClusterIdentifier(value)
          dsl_attribute(:SourceDBClusterIdentifier, value)
        end

        #   @param [Boolean|JSONable] value
        #      The storage encryption setting for the new global database cluster.
        #     If you specify the SourceDBClusterIdentifier property, don't specify this property. The value is inherited from the cluster.
        def StorageEncrypted(value)
          dsl_attribute(:StorageEncrypted, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::RDS::GlobalCluster]
    def AWS_RDS_GlobalCluster(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::RDS::GlobalCluster, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
