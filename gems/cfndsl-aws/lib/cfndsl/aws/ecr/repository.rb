# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ECR
      # The AWS::ECR::Repository resource specifies an Amazon Elastic Container Registry (Amazon ECR) repository, where users can push and pull Docker images. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-ecr.git
      class Repository < ResourceType
        # The LifecyclePolicy property type specifies a lifecycle policy. For information about lifecycle policy syntax, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html
        class LifecyclePolicy < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for LifecyclePolicyText
          def LifecyclePolicyText(value)
            dsl_attribute(:LifecyclePolicyText, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for RegistryId
          def RegistryId(value)
            dsl_attribute(:RegistryId, value)
          end
        end

        # A key-value pair to associate with a resource.
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        #   @param [LifecyclePolicy|JSONable] value
        #     The value to use for LifecyclePolicy
        # @@overload LifecyclePolicy(&block)
        #   Set :LifecyclePolicy from block via instance eval of a new LifecyclePolicy
        def LifecyclePolicy(value = nil, **value_hash, &block)
          dsl_attribute(:LifecyclePolicy, value, attr_class: LifecyclePolicy, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The name to use for the repository. The repository name may be specified on its own (such as nginx-web-app) or it can be prepended with a namespace to group the repository into a category (such as project-a/nginx-web-app). If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the repository name. For more information, see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-name.html.
        def RepositoryName(value)
          dsl_attribute(:RepositoryName, value)
        end

        #   @param [Object|String|JSONable] value
        #     The JSON repository policy text to apply to the repository. For more information, see https://docs.aws.amazon.com/AmazonECR/latest/userguide/RepositoryPolicyExamples.html in the Amazon Elastic Container Registry User Guide.
        def RepositoryPolicyText(value)
          dsl_attribute(:RepositoryPolicyText, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   An array of key-value pairs to apply to this resource.
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    An array of key-value pairs to apply to this resource.
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The image tag mutability setting for the repository.
        def ImageTagMutability(value)
          dsl_attribute(:ImageTagMutability, value)
        end

        #   @param [Object|JSONable] value
        #     The image scanning configuration for the repository. This setting determines whether images are scanned for known vulnerabilities after being pushed to the repository.
        def ImageScanningConfiguration(value)
          dsl_attribute(:ImageScanningConfiguration, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ECR::Repository]
    def AWS_ECR_Repository(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ECR::Repository, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
