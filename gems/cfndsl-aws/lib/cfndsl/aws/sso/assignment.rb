# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module SSO
      # Resource Type definition for SSO assignmet
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-sso/aws-sso-assignment
      class Assignment < ResourceType
        #   @param [String|JSONable] value
        #     The sso instance that the permission set is owned.
        def InstanceArn(value)
          dsl_attribute(:InstanceArn, value)
        end

        #   @param [String|JSONable] value
        #     The account id to be provisioned.
        def TargetId(value)
          dsl_attribute(:TargetId, value)
        end

        #   @param [String|JSONable] value
        #     The type of resource to be provsioned to, only aws account now
        def TargetType(value)
          dsl_attribute(:TargetType, value)
        end

        #   @param [String|JSONable] value
        #     The permission set that the assignemt will be assigned
        def PermissionSetArn(value)
          dsl_attribute(:PermissionSetArn, value)
        end

        #   @param [String|JSONable] value
        #     The assignee's type, user/group
        def PrincipalType(value)
          dsl_attribute(:PrincipalType, value)
        end

        #   @param [String|JSONable] value
        #     The assignee's identifier, user id/group id
        def PrincipalId(value)
          dsl_attribute(:PrincipalId, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::SSO::Assignment]
    def AWS_SSO_Assignment(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::SSO::Assignment, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
