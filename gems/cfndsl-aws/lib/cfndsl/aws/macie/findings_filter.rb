# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Macie
      # Macie FindingsFilter resource schema.
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-macie.git
      class FindingsFilter < ResourceType
        # Property Definition CriterionAdditionalProperties
        class CriterionAdditionalProperties < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for Gt
          def Gt(value)
            dsl_attribute(:Gt, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Gte
          def Gte(value)
            dsl_attribute(:Gte, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Lt
          def Lt(value)
            dsl_attribute(:Lt, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Lte
          def Lte(value)
            dsl_attribute(:Lte, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for Eq
          def Eqs(values)
            dsl_list_attribute(:Eq, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for Eq
          def Eq(value, fn_if: nil)
            dsl_push_attribute(:Eq, value, fn_if: fn_if)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for Neq
          def Neqs(values)
            dsl_list_attribute(:Neq, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for Neq
          def Neq(value, fn_if: nil)
            dsl_push_attribute(:Neq, value, fn_if: fn_if)
          end
        end

        # Map of filter criteria.
        class Criterion < PropertyType
        end

        # Property Definition FindingCriteria
        class FindingCriteria < PropertyType
          #   @param [Criterion|JSONable] value
          #     The value to use for Criterion
          # @@overload Criterion(&block)
          #   Set :Criterion from block via instance eval of a new Criterion
          def Criterion(value = nil, **value_hash, &block)
            dsl_attribute(:Criterion, value, attr_class: Criterion, **value_hash, &block)
          end
        end

        # Returned by ListHandler representing filter name and ID.
        class FindingsFilterListItem < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Id
          def Id(value)
            dsl_attribute(:Id, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end
        end

        #   @param [String|JSONable] value
        #     Findings filter name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     Findings filter description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [FindingCriteria|JSONable] value
        #     Findings filter criteria.
        # @@overload FindingCriteria(&block)
        #   Set :FindingCriteria from block via instance eval of a new FindingCriteria
        def FindingCriteria(value = nil, **value_hash, &block)
          dsl_attribute(:FindingCriteria, value, attr_class: FindingCriteria, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     Findings filter action.
        def Action(value)
          dsl_attribute(:Action, value)
        end

        #   @param [Integer|JSONable] value
        #     Findings filter position.
        def Position(value)
          dsl_attribute(:Position, value)
        end

        #   @param [String|JSONable] value
        #     Findings filter ID.
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     Findings filter ARN.
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        # @param [Array<FindingsFilterListItem>|JSONable>] values
        #   Findings filters list.
        def FindingsFilterListItems(values)
          dsl_list_attribute(:FindingsFilterListItems, values)
        end

        #  @param [FindingsFilterListItem|JSONable] value  Append value to the List
        #    Findings filters list.
        # @@overload FindingsFilterListItem(&block)
        # Append value to the List from block via instance eval of a new FindingsFilterListItem
        def FindingsFilterListItem(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:FindingsFilterListItems, value, fn_if: fn_if, attr_class: FindingsFilterListItem, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Macie::FindingsFilter]
    def AWS_Macie_FindingsFilter(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Macie::FindingsFilter, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
