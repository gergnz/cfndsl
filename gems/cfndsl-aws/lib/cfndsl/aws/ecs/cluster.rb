# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ECS
      # Create an Elastic Container Service (ECS) cluster.
      class Cluster < ResourceType
        # The metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # The setting to use when creating a cluster. This parameter is used to enable CloudWatch Container Insights for a cluster. If this value is specified, it will override the containerInsights value set with PutAccountSetting or PutAccountSettingDefault.
        class ClusterSettings < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # A capacity provider strategy consists of one or more capacity providers along with the `base` and `weight` to assign to them. A capacity provider must be associated with the cluster to be used in a capacity provider strategy. The PutClusterCapacityProviders API is used to associate a capacity provider with a cluster. Only capacity providers with an `ACTIVE` or `UPDATING` status can be used.
        class CapacityProviderStrategyItem < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for CapacityProvider
          def CapacityProvider(value)
            dsl_attribute(:CapacityProvider, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Weight
          def Weight(value)
            dsl_attribute(:Weight, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Base
          def Base(value)
            dsl_attribute(:Base, value)
          end
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     A user-generated string that you use to identify your cluster. If you don't specify a name, AWS CloudFormation generates a unique physical ID for the name.
        def ClusterName(value)
          dsl_attribute(:ClusterName, value)
        end

        # @param [Array<ClusterSettings>|JSONable>] values
        #   The List of values to use for ClusterSettings
        def ClusterSettings(values)
          dsl_list_attribute(:ClusterSettings, values)
        end

        #  @param [ClusterSettings|JSONable] value  Append value to the List
        #    The List of values to use for ClusterSettings
        # @@overload ClusterSetting(&block)
        # Append value to the List from block via instance eval of a new ClusterSettings
        def ClusterSetting(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:ClusterSettings, value, fn_if: fn_if, attr_class: ClusterSettings, **value_hash, &block)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for CapacityProviders
        def CapacityProviders(values)
          dsl_list_attribute(:CapacityProviders, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for CapacityProviders
        def CapacityProvider(value, fn_if: nil)
          dsl_push_attribute(:CapacityProviders, value, fn_if: fn_if)
        end

        # @param [Array<CapacityProviderStrategyItem>|JSONable>] values
        #   The List of values to use for DefaultCapacityProviderStrategy
        def DefaultCapacityProviderStrategies(values)
          dsl_list_attribute(:DefaultCapacityProviderStrategy, values)
        end

        #  @param [CapacityProviderStrategyItem|JSONable] value  Append value to the List
        #    The List of values to use for DefaultCapacityProviderStrategy
        # @@overload DefaultCapacityProviderStrategy(&block)
        # Append value to the List from block via instance eval of a new CapacityProviderStrategyItem
        def DefaultCapacityProviderStrategy(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:DefaultCapacityProviderStrategy, value, fn_if: fn_if, attr_class: CapacityProviderStrategyItem, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The Amazon Resource Name (ARN) of the Amazon ECS cluster, such as arn:aws:ecs:us-east-2:123456789012:cluster/MyECSCluster.
        def Arn(value)
          dsl_attribute(:Arn, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ECS::Cluster]
    def AWS_ECS_Cluster(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ECS::Cluster, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
