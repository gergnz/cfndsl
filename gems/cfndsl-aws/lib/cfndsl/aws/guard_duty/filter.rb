# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module GuardDuty
      # Resource Type definition for AWS::GuardDuty::Filter
      class Filter < ResourceType
        # Property Definition Condition
        class Condition < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for Lt
          def Lt(value)
            dsl_attribute(:Lt, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Gte
          def Gte(value)
            dsl_attribute(:Gte, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for Neq
          def Neqs(values)
            dsl_list_attribute(:Neq, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for Neq
          def Neq(value, fn_if: nil)
            dsl_push_attribute(:Neq, value, fn_if: fn_if)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for Eq
          def Eqs(values)
            dsl_list_attribute(:Eq, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for Eq
          def Eq(value, fn_if: nil)
            dsl_push_attribute(:Eq, value, fn_if: fn_if)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Lte
          def Lte(value)
            dsl_attribute(:Lte, value)
          end
        end

        # Property Definition FindingCriteria
        class FindingCriteria < PropertyType
          #   @param [Object|JSONable] value
          #     The value to use for Criterion
          def Criterion(value)
            dsl_attribute(:Criterion, value)
          end

          #   @param [Condition|JSONable] value
          #     The value to use for ItemType
          # @@overload ItemType(&block)
          #   Set :ItemType from block via instance eval of a new Condition
          def ItemType(value = nil, **value_hash, &block)
            dsl_attribute(:ItemType, value, attr_class: Condition, **value_hash, &block)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Action
        def Action(value)
          dsl_attribute(:Action, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DetectorId
        def DetectorId(value)
          dsl_attribute(:DetectorId, value)
        end

        #   @param [FindingCriteria|JSONable] value
        #     The value to use for FindingCriteria
        # @@overload FindingCriteria(&block)
        #   Set :FindingCriteria from block via instance eval of a new FindingCriteria
        def FindingCriteria(value = nil, **value_hash, &block)
          dsl_attribute(:FindingCriteria, value, attr_class: FindingCriteria, **value_hash, &block)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for Rank
        def Rank(value)
          dsl_attribute(:Rank, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::GuardDuty::Filter]
    def AWS_GuardDuty_Filter(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::GuardDuty::Filter, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
