# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module IoT
      # Use the AWS::IoT::Certificate resource to declare an AWS IoT X.509 certificate.
      # @see https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
      class Certificate < ResourceType
        #   @param [String|JSONable] value
        #     The value to use for CACertificatePem
        def CACertificatePem(value)
          dsl_attribute(:CACertificatePem, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CertificatePem
        def CertificatePem(value)
          dsl_attribute(:CertificatePem, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CertificateSigningRequest
        def CertificateSigningRequest(value)
          dsl_attribute(:CertificateSigningRequest, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CertificateMode
        def CertificateMode(value)
          dsl_attribute(:CertificateMode, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Status
        def Status(value)
          dsl_attribute(:Status, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::IoT::Certificate]
    def AWS_IoT_Certificate(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::IoT::Certificate, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
