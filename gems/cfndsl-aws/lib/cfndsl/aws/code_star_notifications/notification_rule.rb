# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module CodeStarNotifications
      # Resource Type definition for AWS::CodeStarNotifications::NotificationRule
      class NotificationRule < ResourceType
        # Property Definition Target
        class Target < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for TargetType
          def TargetType(value)
            dsl_attribute(:TargetType, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for TargetAddress
          def TargetAddress(value)
            dsl_attribute(:TargetAddress, value)
          end
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for EventTypeIds
        def EventTypeIds(values)
          dsl_list_attribute(:EventTypeIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for EventTypeIds
        def EventTypeId(value, fn_if: nil)
          dsl_push_attribute(:EventTypeIds, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for Status
        def Status(value)
          dsl_attribute(:Status, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DetailType
        def DetailType(value)
          dsl_attribute(:DetailType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Resource
        def Resource(value)
          dsl_attribute(:Resource, value)
        end

        # @param [Array<Target>|JSONable>] values
        #   The List of values to use for Targets
        def Targets(values)
          dsl_list_attribute(:Targets, values)
        end

        #  @param [Target|JSONable] value  Append value to the List
        #    The List of values to use for Targets
        # @@overload Target(&block)
        # Append value to the List from block via instance eval of a new Target
        def Target(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Targets, value, fn_if: fn_if, attr_class: Target, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for Tags
        def Tags(value)
          dsl_attribute(:Tags, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::CodeStarNotifications::NotificationRule]
    def AWS_CodeStarNotifications_NotificationRule(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::CodeStarNotifications::NotificationRule, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
