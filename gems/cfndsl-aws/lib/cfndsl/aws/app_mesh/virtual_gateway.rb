# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module AppMesh
      # Resource Type definition for AWS::AppMesh::VirtualGateway
      class VirtualGateway < ResourceType
        # Property Definition VirtualGatewayListener
        class VirtualGatewayListener < PropertyType
          #   @param [VirtualGatewayHealthCheckPolicy|JSONable] value
          #     The value to use for HealthCheck
          # @@overload HealthCheck(&block)
          #   Set :HealthCheck from block via instance eval of a new VirtualGatewayHealthCheckPolicy
          def HealthCheck(value = nil, **value_hash, &block)
            dsl_attribute(:HealthCheck, value, attr_class: VirtualGatewayHealthCheckPolicy, **value_hash, &block)
          end

          #   @param [VirtualGatewayListenerTls|JSONable] value
          #     The value to use for TLS
          # @@overload TLS(&block)
          #   Set :TLS from block via instance eval of a new VirtualGatewayListenerTls
          def TLS(value = nil, **value_hash, &block)
            dsl_attribute(:TLS, value, attr_class: VirtualGatewayListenerTls, **value_hash, &block)
          end

          #   @param [VirtualGatewayPortMapping|JSONable] value
          #     The value to use for PortMapping
          # @@overload PortMapping(&block)
          #   Set :PortMapping from block via instance eval of a new VirtualGatewayPortMapping
          def PortMapping(value = nil, **value_hash, &block)
            dsl_attribute(:PortMapping, value, attr_class: VirtualGatewayPortMapping, **value_hash, &block)
          end
        end

        # Property Definition VirtualGatewayTlsValidationContext
        class VirtualGatewayTlsValidationContext < PropertyType
          #   @param [VirtualGatewayTlsValidationContextTrust|JSONable] value
          #     The value to use for Trust
          # @@overload Trust(&block)
          #   Set :Trust from block via instance eval of a new VirtualGatewayTlsValidationContextTrust
          def Trust(value = nil, **value_hash, &block)
            dsl_attribute(:Trust, value, attr_class: VirtualGatewayTlsValidationContextTrust, **value_hash, &block)
          end
        end

        # Property Definition VirtualGatewayTlsValidationContextFileTrust
        class VirtualGatewayTlsValidationContextFileTrust < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for CertificateChain
          def CertificateChain(value)
            dsl_attribute(:CertificateChain, value)
          end
        end

        # Property Definition VirtualGatewayAccessLog
        class VirtualGatewayAccessLog < PropertyType
          #   @param [VirtualGatewayFileAccessLog|JSONable] value
          #     The value to use for File
          # @@overload File(&block)
          #   Set :File from block via instance eval of a new VirtualGatewayFileAccessLog
          def File(value = nil, **value_hash, &block)
            dsl_attribute(:File, value, attr_class: VirtualGatewayFileAccessLog, **value_hash, &block)
          end
        end

        # Property Definition VirtualGatewayHealthCheckPolicy
        class VirtualGatewayHealthCheckPolicy < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Path
          def Path(value)
            dsl_attribute(:Path, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for UnhealthyThreshold
          def UnhealthyThreshold(value)
            dsl_attribute(:UnhealthyThreshold, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Port
          def Port(value)
            dsl_attribute(:Port, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for HealthyThreshold
          def HealthyThreshold(value)
            dsl_attribute(:HealthyThreshold, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for TimeoutMillis
          def TimeoutMillis(value)
            dsl_attribute(:TimeoutMillis, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Protocol
          def Protocol(value)
            dsl_attribute(:Protocol, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for IntervalMillis
          def IntervalMillis(value)
            dsl_attribute(:IntervalMillis, value)
          end
        end

        # Property Definition VirtualGatewayTlsValidationContextTrust
        class VirtualGatewayTlsValidationContextTrust < PropertyType
          #   @param [VirtualGatewayTlsValidationContextFileTrust|JSONable] value
          #     The value to use for File
          # @@overload File(&block)
          #   Set :File from block via instance eval of a new VirtualGatewayTlsValidationContextFileTrust
          def File(value = nil, **value_hash, &block)
            dsl_attribute(:File, value, attr_class: VirtualGatewayTlsValidationContextFileTrust, **value_hash, &block)
          end

          #   @param [VirtualGatewayTlsValidationContextAcmTrust|JSONable] value
          #     The value to use for ACM
          # @@overload ACM(&block)
          #   Set :ACM from block via instance eval of a new VirtualGatewayTlsValidationContextAcmTrust
          def ACM(value = nil, **value_hash, &block)
            dsl_attribute(:ACM, value, attr_class: VirtualGatewayTlsValidationContextAcmTrust, **value_hash, &block)
          end
        end

        # Property Definition VirtualGatewayListenerTlsAcmCertificate
        class VirtualGatewayListenerTlsAcmCertificate < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for CertificateArn
          def CertificateArn(value)
            dsl_attribute(:CertificateArn, value)
          end
        end

        # Property Definition VirtualGatewayBackendDefaults
        class VirtualGatewayBackendDefaults < PropertyType
          #   @param [VirtualGatewayClientPolicy|JSONable] value
          #     The value to use for ClientPolicy
          # @@overload ClientPolicy(&block)
          #   Set :ClientPolicy from block via instance eval of a new VirtualGatewayClientPolicy
          def ClientPolicy(value = nil, **value_hash, &block)
            dsl_attribute(:ClientPolicy, value, attr_class: VirtualGatewayClientPolicy, **value_hash, &block)
          end
        end

        # Property Definition VirtualGatewaySpec
        class VirtualGatewaySpec < PropertyType
          #   @param [VirtualGatewayLogging|JSONable] value
          #     The value to use for Logging
          # @@overload Logging(&block)
          #   Set :Logging from block via instance eval of a new VirtualGatewayLogging
          def Logging(value = nil, **value_hash, &block)
            dsl_attribute(:Logging, value, attr_class: VirtualGatewayLogging, **value_hash, &block)
          end

          # @param [Array<VirtualGatewayListener>|JSONable>] values
          #   The List of values to use for Listeners
          def Listeners(values)
            dsl_list_attribute(:Listeners, values)
          end

          #  @param [VirtualGatewayListener|JSONable] value  Append value to the List
          #    The List of values to use for Listeners
          # @@overload Listener(&block)
          # Append value to the List from block via instance eval of a new VirtualGatewayListener
          def Listener(value = nil, fn_if: nil, **value_hash, &block)
            dsl_push_attribute(:Listeners, value, fn_if: fn_if, attr_class: VirtualGatewayListener, **value_hash, &block)
          end

          #   @param [VirtualGatewayBackendDefaults|JSONable] value
          #     The value to use for BackendDefaults
          # @@overload BackendDefaults(&block)
          #   Set :BackendDefaults from block via instance eval of a new VirtualGatewayBackendDefaults
          def BackendDefaults(value = nil, **value_hash, &block)
            dsl_attribute(:BackendDefaults, value, attr_class: VirtualGatewayBackendDefaults, **value_hash, &block)
          end
        end

        # Property Definition VirtualGatewayClientPolicy
        class VirtualGatewayClientPolicy < PropertyType
          #   @param [VirtualGatewayClientPolicyTls|JSONable] value
          #     The value to use for TLS
          # @@overload TLS(&block)
          #   Set :TLS from block via instance eval of a new VirtualGatewayClientPolicyTls
          def TLS(value = nil, **value_hash, &block)
            dsl_attribute(:TLS, value, attr_class: VirtualGatewayClientPolicyTls, **value_hash, &block)
          end
        end

        # Property Definition VirtualGatewayLogging
        class VirtualGatewayLogging < PropertyType
          #   @param [VirtualGatewayAccessLog|JSONable] value
          #     The value to use for AccessLog
          # @@overload AccessLog(&block)
          #   Set :AccessLog from block via instance eval of a new VirtualGatewayAccessLog
          def AccessLog(value = nil, **value_hash, &block)
            dsl_attribute(:AccessLog, value, attr_class: VirtualGatewayAccessLog, **value_hash, &block)
          end
        end

        # Property Definition VirtualGatewayClientPolicyTls
        class VirtualGatewayClientPolicyTls < PropertyType
          #   @param [VirtualGatewayTlsValidationContext|JSONable] value
          #     The value to use for Validation
          # @@overload Validation(&block)
          #   Set :Validation from block via instance eval of a new VirtualGatewayTlsValidationContext
          def Validation(value = nil, **value_hash, &block)
            dsl_attribute(:Validation, value, attr_class: VirtualGatewayTlsValidationContext, **value_hash, &block)
          end

          # @param [Array<Integer>|JSONable>] values
          #   The List of values to use for Ports
          def Ports(values)
            dsl_list_attribute(:Ports, values)
          end

          #  @param [Integer|JSONable] value  Append value to the List
          #    The List of values to use for Ports
          def Port(value, fn_if: nil)
            dsl_push_attribute(:Ports, value, fn_if: fn_if)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for Enforce
          def Enforce(value)
            dsl_attribute(:Enforce, value)
          end
        end

        # Property Definition VirtualGatewayListenerTlsCertificate
        class VirtualGatewayListenerTlsCertificate < PropertyType
          #   @param [VirtualGatewayListenerTlsFileCertificate|JSONable] value
          #     The value to use for File
          # @@overload File(&block)
          #   Set :File from block via instance eval of a new VirtualGatewayListenerTlsFileCertificate
          def File(value = nil, **value_hash, &block)
            dsl_attribute(:File, value, attr_class: VirtualGatewayListenerTlsFileCertificate, **value_hash, &block)
          end

          #   @param [VirtualGatewayListenerTlsAcmCertificate|JSONable] value
          #     The value to use for ACM
          # @@overload ACM(&block)
          #   Set :ACM from block via instance eval of a new VirtualGatewayListenerTlsAcmCertificate
          def ACM(value = nil, **value_hash, &block)
            dsl_attribute(:ACM, value, attr_class: VirtualGatewayListenerTlsAcmCertificate, **value_hash, &block)
          end
        end

        # Property Definition VirtualGatewayListenerTlsFileCertificate
        class VirtualGatewayListenerTlsFileCertificate < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for CertificateChain
          def CertificateChain(value)
            dsl_attribute(:CertificateChain, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for PrivateKey
          def PrivateKey(value)
            dsl_attribute(:PrivateKey, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        # Property Definition VirtualGatewayPortMapping
        class VirtualGatewayPortMapping < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Protocol
          def Protocol(value)
            dsl_attribute(:Protocol, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Port
          def Port(value)
            dsl_attribute(:Port, value)
          end
        end

        # Property Definition VirtualGatewayFileAccessLog
        class VirtualGatewayFileAccessLog < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Path
          def Path(value)
            dsl_attribute(:Path, value)
          end
        end

        # Property Definition VirtualGatewayTlsValidationContextAcmTrust
        class VirtualGatewayTlsValidationContextAcmTrust < PropertyType
          # @param [Array<String>|JSONable>] values
          #   The List of values to use for CertificateAuthorityArns
          def CertificateAuthorityArns(values)
            dsl_list_attribute(:CertificateAuthorityArns, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for CertificateAuthorityArns
          def CertificateAuthorityArn(value, fn_if: nil)
            dsl_push_attribute(:CertificateAuthorityArns, value, fn_if: fn_if)
          end
        end

        # Property Definition VirtualGatewayListenerTls
        class VirtualGatewayListenerTls < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Mode
          def Mode(value)
            dsl_attribute(:Mode, value)
          end

          #   @param [VirtualGatewayListenerTlsCertificate|JSONable] value
          #     The value to use for Certificate
          # @@overload Certificate(&block)
          #   Set :Certificate from block via instance eval of a new VirtualGatewayListenerTlsCertificate
          def Certificate(value = nil, **value_hash, &block)
            dsl_attribute(:Certificate, value, attr_class: VirtualGatewayListenerTlsCertificate, **value_hash, &block)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Uid
        def Uid(value)
          dsl_attribute(:Uid, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for VirtualGatewayName
        def VirtualGatewayName(value)
          dsl_attribute(:VirtualGatewayName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for MeshName
        def MeshName(value)
          dsl_attribute(:MeshName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for MeshOwner
        def MeshOwner(value)
          dsl_attribute(:MeshOwner, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ResourceOwner
        def ResourceOwner(value)
          dsl_attribute(:ResourceOwner, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [VirtualGatewaySpec|JSONable] value
        #     The value to use for Spec
        # @@overload Spec(&block)
        #   Set :Spec from block via instance eval of a new VirtualGatewaySpec
        def Spec(value = nil, **value_hash, &block)
          dsl_attribute(:Spec, value, attr_class: VirtualGatewaySpec, **value_hash, &block)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::AppMesh::VirtualGateway]
    def AWS_AppMesh_VirtualGateway(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::AppMesh::VirtualGateway, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
