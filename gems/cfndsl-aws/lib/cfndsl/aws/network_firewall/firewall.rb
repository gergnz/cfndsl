# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module NetworkFirewall
      # Resource type definition for AWS::NetworkFirewall::Firewall
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-networkfirewall.git
      class Firewall < ResourceType
        # Property Definition SubnetMapping
        class SubnetMapping < PropertyType
          #   @param [String|JSONable] value
          #     A SubnetId.
          def SubnetId(value)
            dsl_attribute(:SubnetId, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for FirewallName
        def FirewallName(value)
          dsl_attribute(:FirewallName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for FirewallArn
        def FirewallArn(value)
          dsl_attribute(:FirewallArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for FirewallId
        def FirewallId(value)
          dsl_attribute(:FirewallId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for FirewallPolicyArn
        def FirewallPolicyArn(value)
          dsl_attribute(:FirewallPolicyArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for VpcId
        def VpcId(value)
          dsl_attribute(:VpcId, value)
        end

        # @param [Array<SubnetMapping>|JSONable>] values
        #   The List of values to use for SubnetMappings
        def SubnetMappings(values)
          dsl_list_attribute(:SubnetMappings, values)
        end

        #  @param [SubnetMapping|JSONable] value  Append value to the List
        #    The List of values to use for SubnetMappings
        # @@overload SubnetMapping(&block)
        # Append value to the List from block via instance eval of a new SubnetMapping
        def SubnetMapping(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:SubnetMappings, value, fn_if: fn_if, attr_class: SubnetMapping, **value_hash, &block)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for DeleteProtection
        def DeleteProtection(value)
          dsl_attribute(:DeleteProtection, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for SubnetChangeProtection
        def SubnetChangeProtection(value)
          dsl_attribute(:SubnetChangeProtection, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for FirewallPolicyChangeProtection
        def FirewallPolicyChangeProtection(value)
          dsl_attribute(:FirewallPolicyChangeProtection, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for EndpointIds
        def EndpointIds(values)
          dsl_list_attribute(:EndpointIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for EndpointIds
        def EndpointId(value, fn_if: nil)
          dsl_push_attribute(:EndpointIds, value, fn_if: fn_if)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::NetworkFirewall::Firewall]
    def AWS_NetworkFirewall_Firewall(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::NetworkFirewall::Firewall, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
