# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module NetworkFirewall
      # Resource type definition for AWS::NetworkFirewall::LoggingConfiguration
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-networkfirewall.git
      class LoggingConfiguration < ResourceType
        # Property Definition LoggingConfiguration
        class LoggingConfiguration < PropertyType
          # @param [Array<LogDestinationConfig>|JSONable>] values
          #   The List of values to use for LogDestinationConfigs
          def LogDestinationConfigs(values)
            dsl_list_attribute(:LogDestinationConfigs, values)
          end

          #  @param [LogDestinationConfig|JSONable] value  Append value to the List
          #    The List of values to use for LogDestinationConfigs
          # @@overload LogDestinationConfig(&block)
          # Append value to the List from block via instance eval of a new LogDestinationConfig
          def LogDestinationConfig(value = nil, fn_if: nil, **value_hash, &block)
            dsl_push_attribute(:LogDestinationConfigs, value, fn_if: fn_if, attr_class: LogDestinationConfig, **value_hash, &block)
          end
        end

        # Property Definition LogDestinationConfig
        class LogDestinationConfig < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for LogType
          def LogType(value)
            dsl_attribute(:LogType, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for LogDestinationType
          def LogDestinationType(value)
            dsl_attribute(:LogDestinationType, value)
          end

          #   @param [Object|JSONable] value
          #     A key-value pair to configure the logDestinations.
          def LogDestination(value)
            dsl_attribute(:LogDestination, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for FirewallName
        def FirewallName(value)
          dsl_attribute(:FirewallName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for FirewallArn
        def FirewallArn(value)
          dsl_attribute(:FirewallArn, value)
        end

        #   @param [LoggingConfiguration|JSONable] value
        #     The value to use for LoggingConfiguration
        # @@overload LoggingConfiguration(&block)
        #   Set :LoggingConfiguration from block via instance eval of a new LoggingConfiguration
        def LoggingConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:LoggingConfiguration, value, attr_class: LoggingConfiguration, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::NetworkFirewall::LoggingConfiguration]
    def AWS_NetworkFirewall_LoggingConfiguration(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::NetworkFirewall::LoggingConfiguration, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
