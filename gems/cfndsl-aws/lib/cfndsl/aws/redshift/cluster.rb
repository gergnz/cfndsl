# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Redshift
      # Resource Type definition for AWS::Redshift::Cluster
      class Cluster < ResourceType
        # Property Definition LoggingProperties
        class LoggingProperties < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for BucketName
          def BucketName(value)
            dsl_attribute(:BucketName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for S3KeyPrefix
          def S3KeyPrefix(value)
            dsl_attribute(:S3KeyPrefix, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for HsmClientCertificateIdentifier
        def HsmClientCertificateIdentifier(value)
          dsl_attribute(:HsmClientCertificateIdentifier, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ElasticIp
        def ElasticIp(value)
          dsl_attribute(:ElasticIp, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for EndpointPort
        def EndpointPort(value)
          dsl_attribute(:EndpointPort, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for AutomatedSnapshotRetentionPeriod
        def AutomatedSnapshotRetentionPeriod(value)
          dsl_attribute(:AutomatedSnapshotRetentionPeriod, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for Encrypted
        def Encrypted(value)
          dsl_attribute(:Encrypted, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SnapshotIdentifier
        def SnapshotIdentifier(value)
          dsl_attribute(:SnapshotIdentifier, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for Port
        def Port(value)
          dsl_attribute(:Port, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for NumberOfNodes
        def NumberOfNodes(value)
          dsl_attribute(:NumberOfNodes, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ClusterParameterGroupName
        def ClusterParameterGroupName(value)
          dsl_attribute(:ClusterParameterGroupName, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for AllowVersionUpgrade
        def AllowVersionUpgrade(value)
          dsl_attribute(:AllowVersionUpgrade, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for VpcSecurityGroupIds
        def VpcSecurityGroupIds(values)
          dsl_list_attribute(:VpcSecurityGroupIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for VpcSecurityGroupIds
        def VpcSecurityGroupId(value, fn_if: nil)
          dsl_push_attribute(:VpcSecurityGroupIds, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for OwnerAccount
        def OwnerAccount(value)
          dsl_attribute(:OwnerAccount, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for EndpointAddress
        def EndpointAddress(value)
          dsl_attribute(:EndpointAddress, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SnapshotClusterIdentifier
        def SnapshotClusterIdentifier(value)
          dsl_attribute(:SnapshotClusterIdentifier, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for IamRoles
        def IamRoles(values)
          dsl_list_attribute(:IamRoles, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for IamRoles
        def IamRole(value, fn_if: nil)
          dsl_push_attribute(:IamRoles, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for ClusterVersion
        def ClusterVersion(value)
          dsl_attribute(:ClusterVersion, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for HsmConfigurationIdentifier
        def HsmConfigurationIdentifier(value)
          dsl_attribute(:HsmConfigurationIdentifier, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for KmsKeyId
        def KmsKeyId(value)
          dsl_attribute(:KmsKeyId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AvailabilityZone
        def AvailabilityZone(value)
          dsl_attribute(:AvailabilityZone, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PreferredMaintenanceWindow
        def PreferredMaintenanceWindow(value)
          dsl_attribute(:PreferredMaintenanceWindow, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for ClusterSecurityGroups
        def ClusterSecurityGroups(values)
          dsl_list_attribute(:ClusterSecurityGroups, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for ClusterSecurityGroups
        def ClusterSecurityGroup(value, fn_if: nil)
          dsl_push_attribute(:ClusterSecurityGroups, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for ClusterType
        def ClusterType(value)
          dsl_attribute(:ClusterType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ClusterIdentifier
        def ClusterIdentifier(value)
          dsl_attribute(:ClusterIdentifier, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for MasterUserPassword
        def MasterUserPassword(value)
          dsl_attribute(:MasterUserPassword, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ClusterSubnetGroupName
        def ClusterSubnetGroupName(value)
          dsl_attribute(:ClusterSubnetGroupName, value)
        end

        #   @param [LoggingProperties|JSONable] value
        #     The value to use for LoggingProperties
        # @@overload LoggingProperties(&block)
        #   Set :LoggingProperties from block via instance eval of a new LoggingProperties
        def LoggingProperties(value = nil, **value_hash, &block)
          dsl_attribute(:LoggingProperties, value, attr_class: LoggingProperties, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for NodeType
        def NodeType(value)
          dsl_attribute(:NodeType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for MasterUsername
        def MasterUsername(value)
          dsl_attribute(:MasterUsername, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DBName
        def DBName(value)
          dsl_attribute(:DBName, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for PubliclyAccessible
        def PubliclyAccessible(value)
          dsl_attribute(:PubliclyAccessible, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Redshift::Cluster]
    def AWS_Redshift_Cluster(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Redshift::Cluster, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
