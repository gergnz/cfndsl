# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module FSx
      # Resource Type definition for AWS::FSx::FileSystem
      class FileSystem < ResourceType
        # Property Definition SelfManagedActiveDirectoryConfiguration
        class SelfManagedActiveDirectoryConfiguration < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for FileSystemAdministratorsGroup
          def FileSystemAdministratorsGroup(value)
            dsl_attribute(:FileSystemAdministratorsGroup, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for UserName
          def UserName(value)
            dsl_attribute(:UserName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DomainName
          def DomainName(value)
            dsl_attribute(:DomainName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for OrganizationalUnitDistinguishedName
          def OrganizationalUnitDistinguishedName(value)
            dsl_attribute(:OrganizationalUnitDistinguishedName, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for DnsIps
          def DnsIps(values)
            dsl_list_attribute(:DnsIps, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for DnsIps
          def DnsIp(value, fn_if: nil)
            dsl_push_attribute(:DnsIps, value, fn_if: fn_if)
          end

          #   @param [String|JSONable] value
          #     The value to use for Password
          def Password(value)
            dsl_attribute(:Password, value)
          end
        end

        # Property Definition LustreConfiguration
        class LustreConfiguration < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for DriveCacheType
          def DriveCacheType(value)
            dsl_attribute(:DriveCacheType, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ImportPath
          def ImportPath(value)
            dsl_attribute(:ImportPath, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for WeeklyMaintenanceStartTime
          def WeeklyMaintenanceStartTime(value)
            dsl_attribute(:WeeklyMaintenanceStartTime, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for AutoImportPolicy
          def AutoImportPolicy(value)
            dsl_attribute(:AutoImportPolicy, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for ImportedFileChunkSize
          def ImportedFileChunkSize(value)
            dsl_attribute(:ImportedFileChunkSize, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DeploymentType
          def DeploymentType(value)
            dsl_attribute(:DeploymentType, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DailyAutomaticBackupStartTime
          def DailyAutomaticBackupStartTime(value)
            dsl_attribute(:DailyAutomaticBackupStartTime, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for CopyTagsToBackups
          def CopyTagsToBackups(value)
            dsl_attribute(:CopyTagsToBackups, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ExportPath
          def ExportPath(value)
            dsl_attribute(:ExportPath, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for PerUnitStorageThroughput
          def PerUnitStorageThroughput(value)
            dsl_attribute(:PerUnitStorageThroughput, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for AutomaticBackupRetentionDays
          def AutomaticBackupRetentionDays(value)
            dsl_attribute(:AutomaticBackupRetentionDays, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        # Property Definition WindowsConfiguration
        class WindowsConfiguration < PropertyType
          #   @param [SelfManagedActiveDirectoryConfiguration|JSONable] value
          #     The value to use for SelfManagedActiveDirectoryConfiguration
          # @@overload SelfManagedActiveDirectoryConfiguration(&block)
          #   Set :SelfManagedActiveDirectoryConfiguration from block via instance eval of a new SelfManagedActiveDirectoryConfiguration
          def SelfManagedActiveDirectoryConfiguration(value = nil, **value_hash, &block)
            dsl_attribute(:SelfManagedActiveDirectoryConfiguration, value, attr_class: SelfManagedActiveDirectoryConfiguration, **value_hash, &block)
          end

          #   @param [String|JSONable] value
          #     The value to use for WeeklyMaintenanceStartTime
          def WeeklyMaintenanceStartTime(value)
            dsl_attribute(:WeeklyMaintenanceStartTime, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ActiveDirectoryId
          def ActiveDirectoryId(value)
            dsl_attribute(:ActiveDirectoryId, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DeploymentType
          def DeploymentType(value)
            dsl_attribute(:DeploymentType, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for ThroughputCapacity
          def ThroughputCapacity(value)
            dsl_attribute(:ThroughputCapacity, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for CopyTagsToBackups
          def CopyTagsToBackups(value)
            dsl_attribute(:CopyTagsToBackups, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DailyAutomaticBackupStartTime
          def DailyAutomaticBackupStartTime(value)
            dsl_attribute(:DailyAutomaticBackupStartTime, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for AutomaticBackupRetentionDays
          def AutomaticBackupRetentionDays(value)
            dsl_attribute(:AutomaticBackupRetentionDays, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for PreferredSubnetId
          def PreferredSubnetId(value)
            dsl_attribute(:PreferredSubnetId, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for StorageType
        def StorageType(value)
          dsl_attribute(:StorageType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for KmsKeyId
        def KmsKeyId(value)
          dsl_attribute(:KmsKeyId, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for StorageCapacity
        def StorageCapacity(value)
          dsl_attribute(:StorageCapacity, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for FileSystemType
        def FileSystemType(value)
          dsl_attribute(:FileSystemType, value)
        end

        #   @param [LustreConfiguration|JSONable] value
        #     The value to use for LustreConfiguration
        # @@overload LustreConfiguration(&block)
        #   Set :LustreConfiguration from block via instance eval of a new LustreConfiguration
        def LustreConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:LustreConfiguration, value, attr_class: LustreConfiguration, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for BackupId
        def BackupId(value)
          dsl_attribute(:BackupId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for LustreMountName
        def LustreMountName(value)
          dsl_attribute(:LustreMountName, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SubnetIds
        def SubnetIds(values)
          dsl_list_attribute(:SubnetIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SubnetIds
        def SubnetId(value, fn_if: nil)
          dsl_push_attribute(:SubnetIds, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SecurityGroupIds
        def SecurityGroupIds(values)
          dsl_list_attribute(:SecurityGroupIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SecurityGroupIds
        def SecurityGroupId(value, fn_if: nil)
          dsl_push_attribute(:SecurityGroupIds, value, fn_if: fn_if)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [WindowsConfiguration|JSONable] value
        #     The value to use for WindowsConfiguration
        # @@overload WindowsConfiguration(&block)
        #   Set :WindowsConfiguration from block via instance eval of a new WindowsConfiguration
        def WindowsConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:WindowsConfiguration, value, attr_class: WindowsConfiguration, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::FSx::FileSystem]
    def AWS_FSx_FileSystem(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::FSx::FileSystem, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
