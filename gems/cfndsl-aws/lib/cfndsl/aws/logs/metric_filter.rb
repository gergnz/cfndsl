# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Logs
      # Resource Type definition for AWS::Logs::MetricFilter
      class MetricFilter < ResourceType
        # Property Definition MetricTransformation
        class MetricTransformation < PropertyType
          #   @param [Number|JSONable] value
          #     The value to use for DefaultValue
          def DefaultValue(value)
            dsl_attribute(:DefaultValue, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for MetricName
          def MetricName(value)
            dsl_attribute(:MetricName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for MetricNamespace
          def MetricNamespace(value)
            dsl_attribute(:MetricNamespace, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for MetricValue
          def MetricValue(value)
            dsl_attribute(:MetricValue, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for FilterPattern
        def FilterPattern(value)
          dsl_attribute(:FilterPattern, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for LogGroupName
        def LogGroupName(value)
          dsl_attribute(:LogGroupName, value)
        end

        # @param [Array<MetricTransformation>|JSONable>] values
        #   The List of values to use for MetricTransformations
        def MetricTransformations(values)
          dsl_list_attribute(:MetricTransformations, values)
        end

        #  @param [MetricTransformation|JSONable] value  Append value to the List
        #    The List of values to use for MetricTransformations
        # @@overload MetricTransformation(&block)
        # Append value to the List from block via instance eval of a new MetricTransformation
        def MetricTransformation(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:MetricTransformations, value, fn_if: fn_if, attr_class: MetricTransformation, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Logs::MetricFilter]
    def AWS_Logs_MetricFilter(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Logs::MetricFilter, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
