# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ElastiCache
      # Resource Type definition for AWS::ElastiCache::CacheCluster
      class CacheCluster < ResourceType
        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for CacheSecurityGroupNames
        def CacheSecurityGroupNames(values)
          dsl_list_attribute(:CacheSecurityGroupNames, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for CacheSecurityGroupNames
        def CacheSecurityGroupName(value, fn_if: nil)
          dsl_push_attribute(:CacheSecurityGroupNames, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SnapshotArns
        def SnapshotArns(values)
          dsl_list_attribute(:SnapshotArns, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SnapshotArns
        def SnapshotArn(value, fn_if: nil)
          dsl_push_attribute(:SnapshotArns, value, fn_if: fn_if)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for Port
        def Port(value)
          dsl_attribute(:Port, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ConfigurationEndpointAddress
        def ConfigurationEndpointAddress(value)
          dsl_attribute(:ConfigurationEndpointAddress, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for NotificationTopicArn
        def NotificationTopicArn(value)
          dsl_attribute(:NotificationTopicArn, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for NumCacheNodes
        def NumCacheNodes(value)
          dsl_attribute(:NumCacheNodes, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SnapshotName
        def SnapshotName(value)
          dsl_attribute(:SnapshotName, value)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for PreferredAvailabilityZones
        def PreferredAvailabilityZones(value, fn_if: nil)
          dsl_push_attribute(:PreferredAvailabilityZones, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for VpcSecurityGroupIds
        def VpcSecurityGroupIds(values)
          dsl_list_attribute(:VpcSecurityGroupIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for VpcSecurityGroupIds
        def VpcSecurityGroupId(value, fn_if: nil)
          dsl_push_attribute(:VpcSecurityGroupIds, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for ClusterName
        def ClusterName(value)
          dsl_attribute(:ClusterName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RedisEndpointAddress
        def RedisEndpointAddress(value)
          dsl_attribute(:RedisEndpointAddress, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Engine
        def Engine(value)
          dsl_attribute(:Engine, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for EngineVersion
        def EngineVersion(value)
          dsl_attribute(:EngineVersion, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RedisEndpointPort
        def RedisEndpointPort(value)
          dsl_attribute(:RedisEndpointPort, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CacheSubnetGroupName
        def CacheSubnetGroupName(value)
          dsl_attribute(:CacheSubnetGroupName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CacheParameterGroupName
        def CacheParameterGroupName(value)
          dsl_attribute(:CacheParameterGroupName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PreferredMaintenanceWindow
        def PreferredMaintenanceWindow(value)
          dsl_attribute(:PreferredMaintenanceWindow, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for AutoMinorVersionUpgrade
        def AutoMinorVersionUpgrade(value)
          dsl_attribute(:AutoMinorVersionUpgrade, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PreferredAvailabilityZone
        def PreferredAvailabilityZone(value)
          dsl_attribute(:PreferredAvailabilityZone, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SnapshotWindow
        def SnapshotWindow(value)
          dsl_attribute(:SnapshotWindow, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CacheNodeType
        def CacheNodeType(value)
          dsl_attribute(:CacheNodeType, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for SnapshotRetentionLimit
        def SnapshotRetentionLimit(value)
          dsl_attribute(:SnapshotRetentionLimit, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ConfigurationEndpointPort
        def ConfigurationEndpointPort(value)
          dsl_attribute(:ConfigurationEndpointPort, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AZMode
        def AZMode(value)
          dsl_attribute(:AZMode, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ElastiCache::CacheCluster]
    def AWS_ElastiCache_CacheCluster(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ElastiCache::CacheCluster, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
