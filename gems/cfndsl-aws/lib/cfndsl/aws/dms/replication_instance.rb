# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module DMS
      # Resource Type definition for AWS::DMS::ReplicationInstance
      class ReplicationInstance < ResourceType
        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for ReplicationInstancePublicIpAddresses
        def ReplicationInstancePublicIpAddresses(values)
          dsl_list_attribute(:ReplicationInstancePublicIpAddresses, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for ReplicationInstancePublicIpAddresses
        def ReplicationInstancePublicIpAddress(value, fn_if: nil)
          dsl_push_attribute(:ReplicationInstancePublicIpAddresses, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for ReplicationInstancePrivateIpAddresses
        def ReplicationInstancePrivateIpAddresses(values)
          dsl_list_attribute(:ReplicationInstancePrivateIpAddresses, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for ReplicationInstancePrivateIpAddresses
        def ReplicationInstancePrivateIpAddress(value, fn_if: nil)
          dsl_push_attribute(:ReplicationInstancePrivateIpAddresses, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for ReplicationInstanceIdentifier
        def ReplicationInstanceIdentifier(value)
          dsl_attribute(:ReplicationInstanceIdentifier, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for EngineVersion
        def EngineVersion(value)
          dsl_attribute(:EngineVersion, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for KmsKeyId
        def KmsKeyId(value)
          dsl_attribute(:KmsKeyId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for AvailabilityZone
        def AvailabilityZone(value)
          dsl_attribute(:AvailabilityZone, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PreferredMaintenanceWindow
        def PreferredMaintenanceWindow(value)
          dsl_attribute(:PreferredMaintenanceWindow, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for AutoMinorVersionUpgrade
        def AutoMinorVersionUpgrade(value)
          dsl_attribute(:AutoMinorVersionUpgrade, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ReplicationSubnetGroupIdentifier
        def ReplicationSubnetGroupIdentifier(value)
          dsl_attribute(:ReplicationSubnetGroupIdentifier, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for AllocatedStorage
        def AllocatedStorage(value)
          dsl_attribute(:AllocatedStorage, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for VpcSecurityGroupIds
        def VpcSecurityGroupIds(values)
          dsl_list_attribute(:VpcSecurityGroupIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for VpcSecurityGroupIds
        def VpcSecurityGroupId(value, fn_if: nil)
          dsl_push_attribute(:VpcSecurityGroupIds, value, fn_if: fn_if)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for AllowMajorVersionUpgrade
        def AllowMajorVersionUpgrade(value)
          dsl_attribute(:AllowMajorVersionUpgrade, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ReplicationInstanceClass
        def ReplicationInstanceClass(value)
          dsl_attribute(:ReplicationInstanceClass, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for PubliclyAccessible
        def PubliclyAccessible(value)
          dsl_attribute(:PubliclyAccessible, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for MultiAZ
        def MultiAZ(value)
          dsl_attribute(:MultiAZ, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::DMS::ReplicationInstance]
    def AWS_DMS_ReplicationInstance(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::DMS::ReplicationInstance, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
