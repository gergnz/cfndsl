# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module SecretsManager
      # Resource Type definition for AWS::SecretsManager::Secret
      class Secret < ResourceType
        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # Property Definition GenerateSecretString
        class GenerateSecretString < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for ExcludeUppercase
          def ExcludeUppercase(value)
            dsl_attribute(:ExcludeUppercase, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for RequireEachIncludedType
          def RequireEachIncludedType(value)
            dsl_attribute(:RequireEachIncludedType, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for IncludeSpace
          def IncludeSpace(value)
            dsl_attribute(:IncludeSpace, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ExcludeCharacters
          def ExcludeCharacters(value)
            dsl_attribute(:ExcludeCharacters, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for GenerateStringKey
          def GenerateStringKey(value)
            dsl_attribute(:GenerateStringKey, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for PasswordLength
          def PasswordLength(value)
            dsl_attribute(:PasswordLength, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for ExcludePunctuation
          def ExcludePunctuation(value)
            dsl_attribute(:ExcludePunctuation, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for ExcludeLowercase
          def ExcludeLowercase(value)
            dsl_attribute(:ExcludeLowercase, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for SecretStringTemplate
          def SecretStringTemplate(value)
            dsl_attribute(:SecretStringTemplate, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for ExcludeNumbers
          def ExcludeNumbers(value)
            dsl_attribute(:ExcludeNumbers, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for KmsKeyId
        def KmsKeyId(value)
          dsl_attribute(:KmsKeyId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SecretString
        def SecretString(value)
          dsl_attribute(:SecretString, value)
        end

        #   @param [GenerateSecretString|JSONable] value
        #     The value to use for GenerateSecretString
        # @@overload GenerateSecretString(&block)
        #   Set :GenerateSecretString from block via instance eval of a new GenerateSecretString
        def GenerateSecretString(value = nil, **value_hash, &block)
          dsl_attribute(:GenerateSecretString, value, attr_class: GenerateSecretString, **value_hash, &block)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::SecretsManager::Secret]
    def AWS_SecretsManager_Secret(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::SecretsManager::Secret, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
