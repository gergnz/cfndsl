# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module SecretsManager
      # Resource Type definition for AWS::SecretsManager::RotationSchedule
      class RotationSchedule < ResourceType
        # Property Definition HostedRotationLambda
        class HostedRotationLambda < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for RotationType
          def RotationType(value)
            dsl_attribute(:RotationType, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for RotationLambdaName
          def RotationLambdaName(value)
            dsl_attribute(:RotationLambdaName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for KmsKeyArn
          def KmsKeyArn(value)
            dsl_attribute(:KmsKeyArn, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for MasterSecretArn
          def MasterSecretArn(value)
            dsl_attribute(:MasterSecretArn, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for VpcSecurityGroupIds
          def VpcSecurityGroupIds(value)
            dsl_attribute(:VpcSecurityGroupIds, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for MasterSecretKmsKeyArn
          def MasterSecretKmsKeyArn(value)
            dsl_attribute(:MasterSecretKmsKeyArn, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for VpcSubnetIds
          def VpcSubnetIds(value)
            dsl_attribute(:VpcSubnetIds, value)
          end
        end

        # Property Definition RotationRules
        class RotationRules < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for AutomaticallyAfterDays
          def AutomaticallyAfterDays(value)
            dsl_attribute(:AutomaticallyAfterDays, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RotationLambdaARN
        def RotationLambdaARN(value)
          dsl_attribute(:RotationLambdaARN, value)
        end

        #   @param [RotationRules|JSONable] value
        #     The value to use for RotationRules
        # @@overload RotationRules(&block)
        #   Set :RotationRules from block via instance eval of a new RotationRules
        def RotationRules(value = nil, **value_hash, &block)
          dsl_attribute(:RotationRules, value, attr_class: RotationRules, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for SecretId
        def SecretId(value)
          dsl_attribute(:SecretId, value)
        end

        #   @param [HostedRotationLambda|JSONable] value
        #     The value to use for HostedRotationLambda
        # @@overload HostedRotationLambda(&block)
        #   Set :HostedRotationLambda from block via instance eval of a new HostedRotationLambda
        def HostedRotationLambda(value = nil, **value_hash, &block)
          dsl_attribute(:HostedRotationLambda, value, attr_class: HostedRotationLambda, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::SecretsManager::RotationSchedule]
    def AWS_SecretsManager_RotationSchedule(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::SecretsManager::RotationSchedule, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
