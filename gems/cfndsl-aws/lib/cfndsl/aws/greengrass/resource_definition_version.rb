# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Greengrass
      # Resource Type definition for AWS::Greengrass::ResourceDefinitionVersion
      class ResourceDefinitionVersion < ResourceType
        # Property Definition SecretsManagerSecretResourceData
        class SecretsManagerSecretResourceData < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ARN
          def ARN(value)
            dsl_attribute(:ARN, value)
          end

          # @param [Array<String>|JSONable>] values
          #   The List of values to use for AdditionalStagingLabelsToDownload
          def AdditionalStagingLabelsToDownloads(values)
            dsl_list_attribute(:AdditionalStagingLabelsToDownload, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for AdditionalStagingLabelsToDownload
          def AdditionalStagingLabelsToDownload(value, fn_if: nil)
            dsl_push_attribute(:AdditionalStagingLabelsToDownload, value, fn_if: fn_if)
          end
        end

        # Property Definition ResourceDataContainer
        class ResourceDataContainer < PropertyType
          #   @param [LocalVolumeResourceData|JSONable] value
          #     The value to use for LocalVolumeResourceData
          # @@overload LocalVolumeResourceData(&block)
          #   Set :LocalVolumeResourceData from block via instance eval of a new LocalVolumeResourceData
          def LocalVolumeResourceData(value = nil, **value_hash, &block)
            dsl_attribute(:LocalVolumeResourceData, value, attr_class: LocalVolumeResourceData, **value_hash, &block)
          end

          #   @param [LocalDeviceResourceData|JSONable] value
          #     The value to use for LocalDeviceResourceData
          # @@overload LocalDeviceResourceData(&block)
          #   Set :LocalDeviceResourceData from block via instance eval of a new LocalDeviceResourceData
          def LocalDeviceResourceData(value = nil, **value_hash, &block)
            dsl_attribute(:LocalDeviceResourceData, value, attr_class: LocalDeviceResourceData, **value_hash, &block)
          end

          #   @param [S3MachineLearningModelResourceData|JSONable] value
          #     The value to use for S3MachineLearningModelResourceData
          # @@overload S3MachineLearningModelResourceData(&block)
          #   Set :S3MachineLearningModelResourceData from block via instance eval of a new S3MachineLearningModelResourceData
          def S3MachineLearningModelResourceData(value = nil, **value_hash, &block)
            dsl_attribute(:S3MachineLearningModelResourceData, value, attr_class: S3MachineLearningModelResourceData, **value_hash, &block)
          end

          #   @param [SecretsManagerSecretResourceData|JSONable] value
          #     The value to use for SecretsManagerSecretResourceData
          # @@overload SecretsManagerSecretResourceData(&block)
          #   Set :SecretsManagerSecretResourceData from block via instance eval of a new SecretsManagerSecretResourceData
          def SecretsManagerSecretResourceData(value = nil, **value_hash, &block)
            dsl_attribute(:SecretsManagerSecretResourceData, value, attr_class: SecretsManagerSecretResourceData, **value_hash, &block)
          end

          #   @param [SageMakerMachineLearningModelResourceData|JSONable] value
          #     The value to use for SageMakerMachineLearningModelResourceData
          # @@overload SageMakerMachineLearningModelResourceData(&block)
          #   Set :SageMakerMachineLearningModelResourceData from block via instance eval of a new SageMakerMachineLearningModelResourceData
          def SageMakerMachineLearningModelResourceData(value = nil, **value_hash, &block)
            dsl_attribute(:SageMakerMachineLearningModelResourceData, value, attr_class: SageMakerMachineLearningModelResourceData, **value_hash, &block)
          end
        end

        # Property Definition SageMakerMachineLearningModelResourceData
        class SageMakerMachineLearningModelResourceData < PropertyType
          #   @param [ResourceDownloadOwnerSetting|JSONable] value
          #     The value to use for OwnerSetting
          # @@overload OwnerSetting(&block)
          #   Set :OwnerSetting from block via instance eval of a new ResourceDownloadOwnerSetting
          def OwnerSetting(value = nil, **value_hash, &block)
            dsl_attribute(:OwnerSetting, value, attr_class: ResourceDownloadOwnerSetting, **value_hash, &block)
          end

          #   @param [String|JSONable] value
          #     The value to use for SageMakerJobArn
          def SageMakerJobArn(value)
            dsl_attribute(:SageMakerJobArn, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DestinationPath
          def DestinationPath(value)
            dsl_attribute(:DestinationPath, value)
          end
        end

        # Property Definition ResourceInstance
        class ResourceInstance < PropertyType
          #   @param [ResourceDataContainer|JSONable] value
          #     The value to use for ResourceDataContainer
          # @@overload ResourceDataContainer(&block)
          #   Set :ResourceDataContainer from block via instance eval of a new ResourceDataContainer
          def ResourceDataContainer(value = nil, **value_hash, &block)
            dsl_attribute(:ResourceDataContainer, value, attr_class: ResourceDataContainer, **value_hash, &block)
          end

          #   @param [String|JSONable] value
          #     The value to use for Id
          def Id(value)
            dsl_attribute(:Id, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end
        end

        # Property Definition LocalVolumeResourceData
        class LocalVolumeResourceData < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for SourcePath
          def SourcePath(value)
            dsl_attribute(:SourcePath, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for DestinationPath
          def DestinationPath(value)
            dsl_attribute(:DestinationPath, value)
          end

          #   @param [GroupOwnerSetting|JSONable] value
          #     The value to use for GroupOwnerSetting
          # @@overload GroupOwnerSetting(&block)
          #   Set :GroupOwnerSetting from block via instance eval of a new GroupOwnerSetting
          def GroupOwnerSetting(value = nil, **value_hash, &block)
            dsl_attribute(:GroupOwnerSetting, value, attr_class: GroupOwnerSetting, **value_hash, &block)
          end
        end

        # Property Definition S3MachineLearningModelResourceData
        class S3MachineLearningModelResourceData < PropertyType
          #   @param [ResourceDownloadOwnerSetting|JSONable] value
          #     The value to use for OwnerSetting
          # @@overload OwnerSetting(&block)
          #   Set :OwnerSetting from block via instance eval of a new ResourceDownloadOwnerSetting
          def OwnerSetting(value = nil, **value_hash, &block)
            dsl_attribute(:OwnerSetting, value, attr_class: ResourceDownloadOwnerSetting, **value_hash, &block)
          end

          #   @param [String|JSONable] value
          #     The value to use for DestinationPath
          def DestinationPath(value)
            dsl_attribute(:DestinationPath, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for S3Uri
          def S3Uri(value)
            dsl_attribute(:S3Uri, value)
          end
        end

        # Property Definition LocalDeviceResourceData
        class LocalDeviceResourceData < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for SourcePath
          def SourcePath(value)
            dsl_attribute(:SourcePath, value)
          end

          #   @param [GroupOwnerSetting|JSONable] value
          #     The value to use for GroupOwnerSetting
          # @@overload GroupOwnerSetting(&block)
          #   Set :GroupOwnerSetting from block via instance eval of a new GroupOwnerSetting
          def GroupOwnerSetting(value = nil, **value_hash, &block)
            dsl_attribute(:GroupOwnerSetting, value, attr_class: GroupOwnerSetting, **value_hash, &block)
          end
        end

        # Property Definition ResourceDownloadOwnerSetting
        class ResourceDownloadOwnerSetting < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for GroupPermission
          def GroupPermission(value)
            dsl_attribute(:GroupPermission, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for GroupOwner
          def GroupOwner(value)
            dsl_attribute(:GroupOwner, value)
          end
        end

        # Property Definition GroupOwnerSetting
        class GroupOwnerSetting < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for AutoAddGroupOwner
          def AutoAddGroupOwner(value)
            dsl_attribute(:AutoAddGroupOwner, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for GroupOwner
          def GroupOwner(value)
            dsl_attribute(:GroupOwner, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for ResourceDefinitionId
        def ResourceDefinitionId(value)
          dsl_attribute(:ResourceDefinitionId, value)
        end

        # @param [Array<ResourceInstance>|JSONable>] values
        #   The List of values to use for Resources
        def Resources(values)
          dsl_list_attribute(:Resources, values)
        end

        #  @param [ResourceInstance|JSONable] value  Append value to the List
        #    The List of values to use for Resources
        # @@overload Resourc(&block)
        # Append value to the List from block via instance eval of a new ResourceInstance
        def Resourc(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Resources, value, fn_if: fn_if, attr_class: ResourceInstance, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Greengrass::ResourceDefinitionVersion]
    def AWS_Greengrass_ResourceDefinitionVersion(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Greengrass::ResourceDefinitionVersion, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
