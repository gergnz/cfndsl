# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Greengrass
      # Resource Type definition for AWS::Greengrass::LoggerDefinition
      class LoggerDefinition < ResourceType
        # Property Definition LoggerDefinitionVersion
        class LoggerDefinitionVersion < PropertyType
          # @param [Array<Logger>|JSONable>] values
          #   The List of values to use for Loggers
          def Loggers(values)
            dsl_list_attribute(:Loggers, values)
          end

          #  @param [Logger|JSONable] value  Append value to the List
          #    The List of values to use for Loggers
          # @@overload Logger(&block)
          # Append value to the List from block via instance eval of a new Logger
          def Logger(value = nil, fn_if: nil, **value_hash, &block)
            dsl_push_attribute(:Loggers, value, fn_if: fn_if, attr_class: Logger, **value_hash, &block)
          end
        end

        # Property Definition Logger
        class Logger < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for Space
          def Space(value)
            dsl_attribute(:Space, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Type
          def Type(value)
            dsl_attribute(:Type, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Level
          def Level(value)
            dsl_attribute(:Level, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Id
          def Id(value)
            dsl_attribute(:Id, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Component
          def Component(value)
            dsl_attribute(:Component, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for LatestVersionArn
        def LatestVersionArn(value)
          dsl_attribute(:LatestVersionArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [LoggerDefinitionVersion|JSONable] value
        #     The value to use for InitialVersion
        # @@overload InitialVersion(&block)
        #   Set :InitialVersion from block via instance eval of a new LoggerDefinitionVersion
        def InitialVersion(value = nil, **value_hash, &block)
          dsl_attribute(:InitialVersion, value, attr_class: LoggerDefinitionVersion, **value_hash, &block)
        end

        #   @param [Object|JSONable] value
        #     The value to use for Tags
        def Tags(value)
          dsl_attribute(:Tags, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Greengrass::LoggerDefinition]
    def AWS_Greengrass_LoggerDefinition(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Greengrass::LoggerDefinition, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
