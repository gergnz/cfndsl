# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Greengrass
      # Resource Type definition for AWS::Greengrass::LoggerDefinitionVersion
      class LoggerDefinitionVersion < ResourceType
        # Property Definition Logger
        class Logger < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for Space
          def Space(value)
            dsl_attribute(:Space, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Type
          def Type(value)
            dsl_attribute(:Type, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Level
          def Level(value)
            dsl_attribute(:Level, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Id
          def Id(value)
            dsl_attribute(:Id, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Component
          def Component(value)
            dsl_attribute(:Component, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for LoggerDefinitionId
        def LoggerDefinitionId(value)
          dsl_attribute(:LoggerDefinitionId, value)
        end

        # @param [Array<Logger>|JSONable>] values
        #   The List of values to use for Loggers
        def Loggers(values)
          dsl_list_attribute(:Loggers, values)
        end

        #  @param [Logger|JSONable] value  Append value to the List
        #    The List of values to use for Loggers
        # @@overload Logger(&block)
        # Append value to the List from block via instance eval of a new Logger
        def Logger(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Loggers, value, fn_if: fn_if, attr_class: Logger, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Greengrass::LoggerDefinitionVersion]
    def AWS_Greengrass_LoggerDefinitionVersion(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Greengrass::LoggerDefinitionVersion, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
