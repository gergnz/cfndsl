# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module CodeGuruProfiler
      # This resource schema represents the Profiling Group resource in the Amazon CodeGuru Profiler service.
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-codeguru-profiler
      class ProfilingGroup < ResourceType
        # A key-value pair to associate with a resource.
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @.
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # Notification medium for users to get alerted for events that occur in application profile. We support SNS topic as a notification channel.
        class Channel < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ChannelId
          def ChannelId(value)
            dsl_attribute(:ChannelId, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ChannelUri
          def ChannelUri(value)
            dsl_attribute(:ChannelUri, value)
          end
        end

        #   @param [String|JSONable] value
        #     The name of the profiling group.
        def ProfilingGroupName(value)
          dsl_attribute(:ProfilingGroupName, value)
        end

        #   @param [String|JSONable] value
        #     The compute platform of the profiling group.
        def ComputePlatform(value)
          dsl_attribute(:ComputePlatform, value)
        end

        #   @param [Object|JSONable] value
        #     The agent permissions attached to this profiling group.
        def AgentPermissions(value)
          dsl_attribute(:AgentPermissions, value)
        end

        # @param [Array<Channel>|JSONable>] values
        #   Configuration for Notification Channels for Anomaly Detection feature in CodeGuru Profiler which enables customers to detect anomalies in the application profile for those methods that represent the highest proportion of CPU time or latency
        def AnomalyDetectionNotificationConfigurations(values)
          dsl_list_attribute(:AnomalyDetectionNotificationConfiguration, values)
        end

        #  @param [Channel|JSONable] value  Append value to the List
        #    Configuration for Notification Channels for Anomaly Detection feature in CodeGuru Profiler which enables customers to detect anomalies in the application profile for those methods that represent the highest proportion of CPU time or latency
        # @@overload AnomalyDetectionNotificationConfiguration(&block)
        # Append value to the List from block via instance eval of a new Channel
        def AnomalyDetectionNotificationConfiguration(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:AnomalyDetectionNotificationConfiguration, value, fn_if: fn_if, attr_class: Channel, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The Amazon Resource Name (ARN) of the specified profiling group.
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The tags associated with a profiling group.
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The tags associated with a profiling group.
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::CodeGuruProfiler::ProfilingGroup]
    def AWS_CodeGuruProfiler_ProfilingGroup(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::CodeGuruProfiler::ProfilingGroup, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
