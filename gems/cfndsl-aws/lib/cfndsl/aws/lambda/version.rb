# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Lambda
      # Resource Type definition for AWS::Lambda::Version
      class Version < ResourceType
        # Property Definition ProvisionedConcurrencyConfiguration
        class ProvisionedConcurrencyConfiguration < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for ProvisionedConcurrentExecutions
          def ProvisionedConcurrentExecutions(value)
            dsl_attribute(:ProvisionedConcurrentExecutions, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for FunctionName
        def FunctionName(value)
          dsl_attribute(:FunctionName, value)
        end

        #   @param [ProvisionedConcurrencyConfiguration|JSONable] value
        #     The value to use for ProvisionedConcurrencyConfig
        # @@overload ProvisionedConcurrencyConfig(&block)
        #   Set :ProvisionedConcurrencyConfig from block via instance eval of a new ProvisionedConcurrencyConfiguration
        def ProvisionedConcurrencyConfig(value = nil, **value_hash, &block)
          dsl_attribute(:ProvisionedConcurrencyConfig, value, attr_class: ProvisionedConcurrencyConfiguration, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CodeSha256
        def CodeSha256(value)
          dsl_attribute(:CodeSha256, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Version
        def Version(value)
          dsl_attribute(:Version, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Lambda::Version]
    def AWS_Lambda_Version(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Lambda::Version, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
