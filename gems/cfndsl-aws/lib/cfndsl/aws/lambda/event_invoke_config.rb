# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Lambda
      # Resource Type definition for AWS::Lambda::EventInvokeConfig
      class EventInvokeConfig < ResourceType
        # Property Definition DestinationConfig
        class DestinationConfig < PropertyType
          #   @param [OnSuccess|JSONable] value
          #     The value to use for OnSuccess
          # @@overload OnSuccess(&block)
          #   Set :OnSuccess from block via instance eval of a new OnSuccess
          def OnSuccess(value = nil, **value_hash, &block)
            dsl_attribute(:OnSuccess, value, attr_class: OnSuccess, **value_hash, &block)
          end

          #   @param [OnFailure|JSONable] value
          #     The value to use for OnFailure
          # @@overload OnFailure(&block)
          #   Set :OnFailure from block via instance eval of a new OnFailure
          def OnFailure(value = nil, **value_hash, &block)
            dsl_attribute(:OnFailure, value, attr_class: OnFailure, **value_hash, &block)
          end
        end

        # Property Definition OnSuccess
        class OnSuccess < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Destination
          def Destination(value)
            dsl_attribute(:Destination, value)
          end
        end

        # Property Definition OnFailure
        class OnFailure < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Destination
          def Destination(value)
            dsl_attribute(:Destination, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for FunctionName
        def FunctionName(value)
          dsl_attribute(:FunctionName, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for MaximumRetryAttempts
        def MaximumRetryAttempts(value)
          dsl_attribute(:MaximumRetryAttempts, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Qualifier
        def Qualifier(value)
          dsl_attribute(:Qualifier, value)
        end

        #   @param [DestinationConfig|JSONable] value
        #     The value to use for DestinationConfig
        # @@overload DestinationConfig(&block)
        #   Set :DestinationConfig from block via instance eval of a new DestinationConfig
        def DestinationConfig(value = nil, **value_hash, &block)
          dsl_attribute(:DestinationConfig, value, attr_class: DestinationConfig, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for MaximumEventAgeInSeconds
        def MaximumEventAgeInSeconds(value)
          dsl_attribute(:MaximumEventAgeInSeconds, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Lambda::EventInvokeConfig]
    def AWS_Lambda_EventInvokeConfig(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Lambda::EventInvokeConfig, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
