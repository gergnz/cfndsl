# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module EFS
      # Resource Type definition for AWS::EFS::FileSystem
      # @see https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
      class FileSystem < ResourceType
        # Property Definition ElasticFileSystemTag
        class ElasticFileSystemTag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # Property Definition LifecyclePolicy
        class LifecyclePolicy < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for TransitionToIA
          def TransitionToIA(value)
            dsl_attribute(:TransitionToIA, value)
          end
        end

        # Property Definition BackupPolicy
        class BackupPolicy < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Status
          def Status(value)
            dsl_attribute(:Status, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for FileSystemId
        def FileSystemId(value)
          dsl_attribute(:FileSystemId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for Encrypted
        def Encrypted(value)
          dsl_attribute(:Encrypted, value)
        end

        # @param [Array<ElasticFileSystemTag>|JSONable>] values
        #   The List of values to use for FileSystemTags
        def FileSystemTags(values)
          dsl_list_attribute(:FileSystemTags, values)
        end

        #  @param [ElasticFileSystemTag|JSONable] value  Append value to the List
        #    The List of values to use for FileSystemTags
        # @@overload FileSystemTag(&block)
        # Append value to the List from block via instance eval of a new ElasticFileSystemTag
        def FileSystemTag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:FileSystemTags, value, fn_if: fn_if, attr_class: ElasticFileSystemTag, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for KmsKeyId
        def KmsKeyId(value)
          dsl_attribute(:KmsKeyId, value)
        end

        # @param [Array<LifecyclePolicy>|JSONable>] values
        #   The List of values to use for LifecyclePolicies
        def LifecyclePolicies(values)
          dsl_list_attribute(:LifecyclePolicies, values)
        end

        #  @param [LifecyclePolicy|JSONable] value  Append value to the List
        #    The List of values to use for LifecyclePolicies
        # @@overload LifecyclePolicy(&block)
        # Append value to the List from block via instance eval of a new LifecyclePolicy
        def LifecyclePolicy(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:LifecyclePolicies, value, fn_if: fn_if, attr_class: LifecyclePolicy, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for PerformanceMode
        def PerformanceMode(value)
          dsl_attribute(:PerformanceMode, value)
        end

        #   @param [Number|JSONable] value
        #     The value to use for ProvisionedThroughputInMibps
        def ProvisionedThroughputInMibps(value)
          dsl_attribute(:ProvisionedThroughputInMibps, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ThroughputMode
        def ThroughputMode(value)
          dsl_attribute(:ThroughputMode, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for FileSystemPolicy
        def FileSystemPolicy(value)
          dsl_attribute(:FileSystemPolicy, value)
        end

        #   @param [BackupPolicy|JSONable] value
        #     The value to use for BackupPolicy
        # @@overload BackupPolicy(&block)
        #   Set :BackupPolicy from block via instance eval of a new BackupPolicy
        def BackupPolicy(value = nil, **value_hash, &block)
          dsl_attribute(:BackupPolicy, value, attr_class: BackupPolicy, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::EFS::FileSystem]
    def AWS_EFS_FileSystem(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::EFS::FileSystem, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
