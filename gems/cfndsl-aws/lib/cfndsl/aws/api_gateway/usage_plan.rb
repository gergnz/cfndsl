# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ApiGateway
      # Resource Type definition for AWS::ApiGateway::UsagePlan
      class UsagePlan < ResourceType
        # Property Definition ApiStage
        class ApiStage < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ApiId
          def ApiId(value)
            dsl_attribute(:ApiId, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Stage
          def Stage(value)
            dsl_attribute(:Stage, value)
          end

          #   @param [Object|JSONable] value
          #     The value to use for Throttle
          def Throttle(value)
            dsl_attribute(:Throttle, value)
          end
        end

        # Property Definition ThrottleSettings
        class ThrottleSettings < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for BurstLimit
          def BurstLimit(value)
            dsl_attribute(:BurstLimit, value)
          end

          #   @param [Number|JSONable] value
          #     The value to use for RateLimit
          def RateLimit(value)
            dsl_attribute(:RateLimit, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        # Property Definition QuotaSettings
        class QuotaSettings < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for Limit
          def Limit(value)
            dsl_attribute(:Limit, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Offset
          def Offset(value)
            dsl_attribute(:Offset, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Period
          def Period(value)
            dsl_attribute(:Period, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        # @param [Array<ApiStage>|JSONable>] values
        #   The List of values to use for ApiStages
        def ApiStages(values)
          dsl_list_attribute(:ApiStages, values)
        end

        #  @param [ApiStage|JSONable] value  Append value to the List
        #    The List of values to use for ApiStages
        # @@overload ApiStage(&block)
        # Append value to the List from block via instance eval of a new ApiStage
        def ApiStage(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:ApiStages, value, fn_if: fn_if, attr_class: ApiStage, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Description
        def Description(value)
          dsl_attribute(:Description, value)
        end

        #   @param [QuotaSettings|JSONable] value
        #     The value to use for Quota
        # @@overload Quota(&block)
        #   Set :Quota from block via instance eval of a new QuotaSettings
        def Quota(value = nil, **value_hash, &block)
          dsl_attribute(:Quota, value, attr_class: QuotaSettings, **value_hash, &block)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end

        #   @param [ThrottleSettings|JSONable] value
        #     The value to use for Throttle
        # @@overload Throttle(&block)
        #   Set :Throttle from block via instance eval of a new ThrottleSettings
        def Throttle(value = nil, **value_hash, &block)
          dsl_attribute(:Throttle, value, attr_class: ThrottleSettings, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for UsagePlanName
        def UsagePlanName(value)
          dsl_attribute(:UsagePlanName, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ApiGateway::UsagePlan]
    def AWS_ApiGateway_UsagePlan(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ApiGateway::UsagePlan, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
