# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ApiGateway
      # Resource Type definition for AWS::ApiGateway::DomainName.
      # @see https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git
      class DomainName < ResourceType
        # Property Definition EndpointConfiguration
        class EndpointConfiguration < PropertyType
          # @param [Array<String>|JSONable>] values
          #   The List of values to use for Types
          def Types(values)
            dsl_list_attribute(:Types, values)
          end

          #  @param [String|JSONable] value  Append value to the List
          #    The List of values to use for Types
          def Typ(value, fn_if: nil)
            dsl_push_attribute(:Types, value, fn_if: fn_if)
          end
        end

        # Property Definition MutualTlsAuthentication
        class MutualTlsAuthentication < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for TruststoreUri
          def TruststoreUri(value)
            dsl_attribute(:TruststoreUri, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for TruststoreVersion
          def TruststoreVersion(value)
            dsl_attribute(:TruststoreVersion, value)
          end
        end

        # Property Definition Tag
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for DomainName
        def DomainName(value)
          dsl_attribute(:DomainName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DistributionDomainName
        def DistributionDomainName(value)
          dsl_attribute(:DistributionDomainName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DistributionHostedZoneId
        def DistributionHostedZoneId(value)
          dsl_attribute(:DistributionHostedZoneId, value)
        end

        #   @param [EndpointConfiguration|JSONable] value
        #     The value to use for EndpointConfiguration
        # @@overload EndpointConfiguration(&block)
        #   Set :EndpointConfiguration from block via instance eval of a new EndpointConfiguration
        def EndpointConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:EndpointConfiguration, value, attr_class: EndpointConfiguration, **value_hash, &block)
        end

        #   @param [MutualTlsAuthentication|JSONable] value
        #     The value to use for MutualTlsAuthentication
        # @@overload MutualTlsAuthentication(&block)
        #   Set :MutualTlsAuthentication from block via instance eval of a new MutualTlsAuthentication
        def MutualTlsAuthentication(value = nil, **value_hash, &block)
          dsl_attribute(:MutualTlsAuthentication, value, attr_class: MutualTlsAuthentication, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for RegionalDomainName
        def RegionalDomainName(value)
          dsl_attribute(:RegionalDomainName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RegionalHostedZoneId
        def RegionalHostedZoneId(value)
          dsl_attribute(:RegionalHostedZoneId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for CertificateArn
        def CertificateArn(value)
          dsl_attribute(:CertificateArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RegionalCertificateArn
        def RegionalCertificateArn(value)
          dsl_attribute(:RegionalCertificateArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SecurityPolicy
        def SecurityPolicy(value)
          dsl_attribute(:SecurityPolicy, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ApiGateway::DomainName]
    def AWS_ApiGateway_DomainName(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ApiGateway::DomainName, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
