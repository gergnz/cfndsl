# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Pinpoint
      # Resource Type definition for AWS::Pinpoint::ApplicationSettings
      class ApplicationSettings < ResourceType
        # Property Definition CampaignHook
        class CampaignHook < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Mode
          def Mode(value)
            dsl_attribute(:Mode, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for WebUrl
          def WebUrl(value)
            dsl_attribute(:WebUrl, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for LambdaFunctionName
          def LambdaFunctionName(value)
            dsl_attribute(:LambdaFunctionName, value)
          end
        end

        # Property Definition QuietTime
        class QuietTime < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Start
          def Start(value)
            dsl_attribute(:Start, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for End
          def End(value)
            dsl_attribute(:End, value)
          end
        end

        # Property Definition Limits
        class Limits < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for Daily
          def Daily(value)
            dsl_attribute(:Daily, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for MaximumDuration
          def MaximumDuration(value)
            dsl_attribute(:MaximumDuration, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for Total
          def Total(value)
            dsl_attribute(:Total, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for MessagesPerSecond
          def MessagesPerSecond(value)
            dsl_attribute(:MessagesPerSecond, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [QuietTime|JSONable] value
        #     The value to use for QuietTime
        # @@overload QuietTime(&block)
        #   Set :QuietTime from block via instance eval of a new QuietTime
        def QuietTime(value = nil, **value_hash, &block)
          dsl_attribute(:QuietTime, value, attr_class: QuietTime, **value_hash, &block)
        end

        #   @param [Limits|JSONable] value
        #     The value to use for Limits
        # @@overload Limits(&block)
        #   Set :Limits from block via instance eval of a new Limits
        def Limits(value = nil, **value_hash, &block)
          dsl_attribute(:Limits, value, attr_class: Limits, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for ApplicationId
        def ApplicationId(value)
          dsl_attribute(:ApplicationId, value)
        end

        #   @param [CampaignHook|JSONable] value
        #     The value to use for CampaignHook
        # @@overload CampaignHook(&block)
        #   Set :CampaignHook from block via instance eval of a new CampaignHook
        def CampaignHook(value = nil, **value_hash, &block)
          dsl_attribute(:CampaignHook, value, attr_class: CampaignHook, **value_hash, &block)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for CloudWatchMetricsEnabled
        def CloudWatchMetricsEnabled(value)
          dsl_attribute(:CloudWatchMetricsEnabled, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Pinpoint::ApplicationSettings]
    def AWS_Pinpoint_ApplicationSettings(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Pinpoint::ApplicationSettings, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
