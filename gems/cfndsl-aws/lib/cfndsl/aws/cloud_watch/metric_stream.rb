# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module CloudWatch
      # Resource Type definition for Metric Stream
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-cloudwatch.git
      class MetricStream < ResourceType
        # This structure defines the metrics that will be streamed.
        class MetricStreamFilter < PropertyType
          #   @param [String|JSONable] value
          #     Only metrics with Namespace matching this value will be streamed.
          def Namespace(value)
            dsl_attribute(:Namespace, value)
          end
        end

        # Metadata that you can assign to a Metric Stream, consisting of a key-value pair.
        class Tag < PropertyType
          #   @param [String|JSONable] value
          #     A unique identifier for the tag.
          def Key(value)
            dsl_attribute(:Key, value)
          end

          #   @param [String|JSONable] value
          #     An optional string, which you can use to describe or define the tag.
          def Value(value)
            dsl_attribute(:Value, value)
          end
        end

        #   @param [String|JSONable] value
        #     Amazon Resource Name of the metric stream.
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The date of creation of the metric stream.
        def CreationDate(value)
          dsl_attribute(:CreationDate, value)
        end

        # @param [Array<MetricStreamFilter>|JSONable>] values
        #   Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
        def ExcludeFilters(values)
          dsl_list_attribute(:ExcludeFilters, values)
        end

        #  @param [MetricStreamFilter|JSONable] value  Append value to the List
        #    Define which metrics will be not streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
        # @@overload ExcludeFilter(&block)
        # Append value to the List from block via instance eval of a new MetricStreamFilter
        def ExcludeFilter(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:ExcludeFilters, value, fn_if: fn_if, attr_class: MetricStreamFilter, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The ARN of the Kinesis Firehose where to stream the data.
        def FirehoseArn(value)
          dsl_attribute(:FirehoseArn, value)
        end

        # @param [Array<MetricStreamFilter>|JSONable>] values
        #   Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
        def IncludeFilters(values)
          dsl_list_attribute(:IncludeFilters, values)
        end

        #  @param [MetricStreamFilter|JSONable] value  Append value to the List
        #    Define which metrics will be streamed. Metrics matched by multiple instances of MetricStreamFilter are joined with an OR operation by default. If both IncludeFilters and ExcludeFilters are omitted, all metrics in the account will be streamed. IncludeFilters and ExcludeFilters are mutually exclusive. Default to null.
        # @@overload IncludeFilter(&block)
        # Append value to the List from block via instance eval of a new MetricStreamFilter
        def IncludeFilter(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:IncludeFilters, value, fn_if: fn_if, attr_class: MetricStreamFilter, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The date of the last update of the metric stream.
        def LastUpdateDate(value)
          dsl_attribute(:LastUpdateDate, value)
        end

        #   @param [String|JSONable] value
        #     Name of the metric stream.
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     The ARN of the role that provides access to the Kinesis Firehose.
        def RoleArn(value)
          dsl_attribute(:RoleArn, value)
        end

        #   @param [String|JSONable] value
        #     Displays the state of the Metric Stream.
        def State(value)
          dsl_attribute(:State, value)
        end

        # @param [Array<Tag>|JSONable>] values
        #   A set of tags to assign to the delivery stream.
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tag|JSONable] value  Append value to the List
        #    A set of tags to assign to the delivery stream.
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tag
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tag, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::CloudWatch::MetricStream]
    def AWS_CloudWatch_MetricStream(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::CloudWatch::MetricStream, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
