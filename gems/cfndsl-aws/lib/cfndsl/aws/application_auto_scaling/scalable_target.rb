# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module ApplicationAutoScaling
      # Resource Type definition for AWS::ApplicationAutoScaling::ScalableTarget
      class ScalableTarget < ResourceType
        # Property Definition ScheduledAction
        class ScheduledAction < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for EndTime
          def EndTime(value)
            dsl_attribute(:EndTime, value)
          end

          #   @param [ScalableTargetAction|JSONable] value
          #     The value to use for ScalableTargetAction
          # @@overload ScalableTargetAction(&block)
          #   Set :ScalableTargetAction from block via instance eval of a new ScalableTargetAction
          def ScalableTargetAction(value = nil, **value_hash, &block)
            dsl_attribute(:ScalableTargetAction, value, attr_class: ScalableTargetAction, **value_hash, &block)
          end

          #   @param [String|JSONable] value
          #     The value to use for Schedule
          def Schedule(value)
            dsl_attribute(:Schedule, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ScheduledActionName
          def ScheduledActionName(value)
            dsl_attribute(:ScheduledActionName, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for StartTime
          def StartTime(value)
            dsl_attribute(:StartTime, value)
          end
        end

        # Property Definition SuspendedState
        class SuspendedState < PropertyType
          #   @param [Boolean|JSONable] value
          #     The value to use for DynamicScalingInSuspended
          def DynamicScalingInSuspended(value)
            dsl_attribute(:DynamicScalingInSuspended, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for DynamicScalingOutSuspended
          def DynamicScalingOutSuspended(value)
            dsl_attribute(:DynamicScalingOutSuspended, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for ScheduledScalingSuspended
          def ScheduledScalingSuspended(value)
            dsl_attribute(:ScheduledScalingSuspended, value)
          end
        end

        # Property Definition ScalableTargetAction
        class ScalableTargetAction < PropertyType
          #   @param [Integer|JSONable] value
          #     The value to use for MaxCapacity
          def MaxCapacity(value)
            dsl_attribute(:MaxCapacity, value)
          end

          #   @param [Integer|JSONable] value
          #     The value to use for MinCapacity
          def MinCapacity(value)
            dsl_attribute(:MinCapacity, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for MaxCapacity
        def MaxCapacity(value)
          dsl_attribute(:MaxCapacity, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for MinCapacity
        def MinCapacity(value)
          dsl_attribute(:MinCapacity, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ResourceId
        def ResourceId(value)
          dsl_attribute(:ResourceId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RoleARN
        def RoleARN(value)
          dsl_attribute(:RoleARN, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ScalableDimension
        def ScalableDimension(value)
          dsl_attribute(:ScalableDimension, value)
        end

        # @param [Array<ScheduledAction>|JSONable>] values
        #   The List of values to use for ScheduledActions
        def ScheduledActions(values)
          dsl_list_attribute(:ScheduledActions, values)
        end

        #  @param [ScheduledAction|JSONable] value  Append value to the List
        #    The List of values to use for ScheduledActions
        # @@overload ScheduledAction(&block)
        # Append value to the List from block via instance eval of a new ScheduledAction
        def ScheduledAction(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:ScheduledActions, value, fn_if: fn_if, attr_class: ScheduledAction, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for ServiceNamespace
        def ServiceNamespace(value)
          dsl_attribute(:ServiceNamespace, value)
        end

        #   @param [SuspendedState|JSONable] value
        #     The value to use for SuspendedState
        # @@overload SuspendedState(&block)
        #   Set :SuspendedState from block via instance eval of a new SuspendedState
        def SuspendedState(value = nil, **value_hash, &block)
          dsl_attribute(:SuspendedState, value, attr_class: SuspendedState, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::ApplicationAutoScaling::ScalableTarget]
    def AWS_ApplicationAutoScaling_ScalableTarget(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::ApplicationAutoScaling::ScalableTarget, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
