# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module IAM
      # Resource Type definition for AWS::IAM::Group
      class Group < ResourceType
        # Property Definition Policy
        class Policy < PropertyType
          #   @param [Object|JSONable] value
          #     The value to use for PolicyDocument
          def PolicyDocument(value)
            dsl_attribute(:PolicyDocument, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for PolicyName
          def PolicyName(value)
            dsl_attribute(:PolicyName, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Arn
        def Arn(value)
          dsl_attribute(:Arn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for GroupName
        def GroupName(value)
          dsl_attribute(:GroupName, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for ManagedPolicyArns
        def ManagedPolicyArns(values)
          dsl_list_attribute(:ManagedPolicyArns, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for ManagedPolicyArns
        def ManagedPolicyArn(value, fn_if: nil)
          dsl_push_attribute(:ManagedPolicyArns, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for Path
        def Path(value)
          dsl_attribute(:Path, value)
        end

        # @param [Array<Policy>|JSONable>] values
        #   The List of values to use for Policies
        def Policies(values)
          dsl_list_attribute(:Policies, values)
        end

        #  @param [Policy|JSONable] value  Append value to the List
        #    The List of values to use for Policies
        # @@overload Policy(&block)
        # Append value to the List from block via instance eval of a new Policy
        def Policy(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Policies, value, fn_if: fn_if, attr_class: Policy, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::IAM::Group]
    def AWS_IAM_Group(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::IAM::Group, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
