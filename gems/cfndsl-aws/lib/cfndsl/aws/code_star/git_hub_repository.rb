# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module CodeStar
      # Resource Type definition for AWS::CodeStar::GitHubRepository
      class GitHubRepository < ResourceType
        # Property Definition S3
        class S3 < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ObjectVersion
          def ObjectVersion(value)
            dsl_attribute(:ObjectVersion, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Bucket
          def Bucket(value)
            dsl_attribute(:Bucket, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        # Property Definition Code
        class Code < PropertyType
          #   @param [S3|JSONable] value
          #     The value to use for S3
          # @@overload S3(&block)
          #   Set :S3 from block via instance eval of a new S3
          def S3(value = nil, **value_hash, &block)
            dsl_attribute(:S3, value, attr_class: S3, **value_hash, &block)
          end
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for EnableIssues
        def EnableIssues(value)
          dsl_attribute(:EnableIssues, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RepositoryName
        def RepositoryName(value)
          dsl_attribute(:RepositoryName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RepositoryAccessToken
        def RepositoryAccessToken(value)
          dsl_attribute(:RepositoryAccessToken, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for RepositoryOwner
        def RepositoryOwner(value)
          dsl_attribute(:RepositoryOwner, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for IsPrivate
        def IsPrivate(value)
          dsl_attribute(:IsPrivate, value)
        end

        #   @param [Code|JSONable] value
        #     The value to use for Code
        # @@overload Code(&block)
        #   Set :Code from block via instance eval of a new Code
        def Code(value = nil, **value_hash, &block)
          dsl_attribute(:Code, value, attr_class: Code, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for RepositoryDescription
        def RepositoryDescription(value)
          dsl_attribute(:RepositoryDescription, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::CodeStar::GitHubRepository]
    def AWS_CodeStar_GitHubRepository(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::CodeStar::GitHubRepository, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
