# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module PinpointEmail
      # Resource Type definition for AWS::PinpointEmail::Identity
      class Identity < ResourceType
        # Property Definition Tags
        class Tags < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Key
          def Key(value)
            dsl_attribute(:Key, value)
          end
        end

        # Property Definition MailFromAttributes
        class MailFromAttributes < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for MailFromDomain
          def MailFromDomain(value)
            dsl_attribute(:MailFromDomain, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for BehaviorOnMxFailure
          def BehaviorOnMxFailure(value)
            dsl_attribute(:BehaviorOnMxFailure, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for IdentityDNSRecordName3
        def IdentityDNSRecordName3(value)
          dsl_attribute(:IdentityDNSRecordName3, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for IdentityDNSRecordName1
        def IdentityDNSRecordName1(value)
          dsl_attribute(:IdentityDNSRecordName1, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for IdentityDNSRecordName2
        def IdentityDNSRecordName2(value)
          dsl_attribute(:IdentityDNSRecordName2, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for IdentityDNSRecordValue3
        def IdentityDNSRecordValue3(value)
          dsl_attribute(:IdentityDNSRecordValue3, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for IdentityDNSRecordValue2
        def IdentityDNSRecordValue2(value)
          dsl_attribute(:IdentityDNSRecordValue2, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for IdentityDNSRecordValue1
        def IdentityDNSRecordValue1(value)
          dsl_attribute(:IdentityDNSRecordValue1, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for FeedbackForwardingEnabled
        def FeedbackForwardingEnabled(value)
          dsl_attribute(:FeedbackForwardingEnabled, value)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for DkimSigningEnabled
        def DkimSigningEnabled(value)
          dsl_attribute(:DkimSigningEnabled, value)
        end

        # @param [Array<Tags>|JSONable>] values
        #   The List of values to use for Tags
        def Tags(values)
          dsl_list_attribute(:Tags, values)
        end

        #  @param [Tags|JSONable] value  Append value to the List
        #    The List of values to use for Tags
        # @@overload Tag(&block)
        # Append value to the List from block via instance eval of a new Tags
        def Tag(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:Tags, value, fn_if: fn_if, attr_class: Tags, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [MailFromAttributes|JSONable] value
        #     The value to use for MailFromAttributes
        # @@overload MailFromAttributes(&block)
        #   Set :MailFromAttributes from block via instance eval of a new MailFromAttributes
        def MailFromAttributes(value = nil, **value_hash, &block)
          dsl_attribute(:MailFromAttributes, value, attr_class: MailFromAttributes, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::PinpointEmail::Identity]
    def AWS_PinpointEmail_Identity(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::PinpointEmail::Identity, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
