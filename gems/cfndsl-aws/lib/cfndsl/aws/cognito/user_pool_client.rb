# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Cognito
      # Resource Type definition for AWS::Cognito::UserPoolClient
      class UserPoolClient < ResourceType
        # Property Definition AnalyticsConfiguration
        class AnalyticsConfiguration < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for ApplicationId
          def ApplicationId(value)
            dsl_attribute(:ApplicationId, value)
          end

          #   @param [Boolean|JSONable] value
          #     The value to use for UserDataShared
          def UserDataShared(value)
            dsl_attribute(:UserDataShared, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for RoleArn
          def RoleArn(value)
            dsl_attribute(:RoleArn, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for ExternalId
          def ExternalId(value)
            dsl_attribute(:ExternalId, value)
          end
        end

        #   @param [AnalyticsConfiguration|JSONable] value
        #     The value to use for AnalyticsConfiguration
        # @@overload AnalyticsConfiguration(&block)
        #   Set :AnalyticsConfiguration from block via instance eval of a new AnalyticsConfiguration
        def AnalyticsConfiguration(value = nil, **value_hash, &block)
          dsl_attribute(:AnalyticsConfiguration, value, attr_class: AnalyticsConfiguration, **value_hash, &block)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for GenerateSecret
        def GenerateSecret(value)
          dsl_attribute(:GenerateSecret, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for CallbackURLs
        def CallbackURLs(values)
          dsl_list_attribute(:CallbackURLs, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for CallbackURLs
        def CallbackURL(value, fn_if: nil)
          dsl_push_attribute(:CallbackURLs, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for AllowedOAuthScopes
        def AllowedOAuthScopes(values)
          dsl_list_attribute(:AllowedOAuthScopes, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for AllowedOAuthScopes
        def AllowedOAuthScope(value, fn_if: nil)
          dsl_push_attribute(:AllowedOAuthScopes, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for ReadAttributes
        def ReadAttributes(values)
          dsl_list_attribute(:ReadAttributes, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for ReadAttributes
        def ReadAttribute(value, fn_if: nil)
          dsl_push_attribute(:ReadAttributes, value, fn_if: fn_if)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for AllowedOAuthFlowsUserPoolClient
        def AllowedOAuthFlowsUserPoolClient(value)
          dsl_attribute(:AllowedOAuthFlowsUserPoolClient, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for DefaultRedirectURI
        def DefaultRedirectURI(value)
          dsl_attribute(:DefaultRedirectURI, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SupportedIdentityProviders
        def SupportedIdentityProviders(values)
          dsl_list_attribute(:SupportedIdentityProviders, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SupportedIdentityProviders
        def SupportedIdentityProvider(value, fn_if: nil)
          dsl_push_attribute(:SupportedIdentityProviders, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for Name
        def Name(value)
          dsl_attribute(:Name, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ClientName
        def ClientName(value)
          dsl_attribute(:ClientName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for UserPoolId
        def UserPoolId(value)
          dsl_attribute(:UserPoolId, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for AllowedOAuthFlows
        def AllowedOAuthFlows(values)
          dsl_list_attribute(:AllowedOAuthFlows, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for AllowedOAuthFlows
        def AllowedOAuthFlow(value, fn_if: nil)
          dsl_push_attribute(:AllowedOAuthFlows, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for ClientSecret
        def ClientSecret(value)
          dsl_attribute(:ClientSecret, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for ExplicitAuthFlows
        def ExplicitAuthFlows(values)
          dsl_list_attribute(:ExplicitAuthFlows, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for ExplicitAuthFlows
        def ExplicitAuthFlow(value, fn_if: nil)
          dsl_push_attribute(:ExplicitAuthFlows, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for LogoutURLs
        def LogoutURLs(values)
          dsl_list_attribute(:LogoutURLs, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for LogoutURLs
        def LogoutURL(value, fn_if: nil)
          dsl_push_attribute(:LogoutURLs, value, fn_if: fn_if)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for RefreshTokenValidity
        def RefreshTokenValidity(value)
          dsl_attribute(:RefreshTokenValidity, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for WriteAttributes
        def WriteAttributes(values)
          dsl_list_attribute(:WriteAttributes, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for WriteAttributes
        def WriteAttribute(value, fn_if: nil)
          dsl_push_attribute(:WriteAttributes, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for PreventUserExistenceErrors
        def PreventUserExistenceErrors(value)
          dsl_attribute(:PreventUserExistenceErrors, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Cognito::UserPoolClient]
    def AWS_Cognito_UserPoolClient(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Cognito::UserPoolClient, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
