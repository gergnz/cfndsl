# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Cognito
      # Resource Type definition for AWS::Cognito::UserPoolUser
      class UserPoolUser < ResourceType
        # Property Definition AttributeType
        class AttributeType < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for Value
          def Value(value)
            dsl_attribute(:Value, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end
        end

        # @param [Array<AttributeType>|JSONable>] values
        #   The List of values to use for ValidationData
        def ValidationDatas(values)
          dsl_list_attribute(:ValidationData, values)
        end

        #  @param [AttributeType|JSONable] value  Append value to the List
        #    The List of values to use for ValidationData
        # @@overload ValidationData(&block)
        # Append value to the List from block via instance eval of a new AttributeType
        def ValidationData(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:ValidationData, value, fn_if: fn_if, attr_class: AttributeType, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for UserPoolId
        def UserPoolId(value)
          dsl_attribute(:UserPoolId, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Username
        def Username(value)
          dsl_attribute(:Username, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for MessageAction
        def MessageAction(value)
          dsl_attribute(:MessageAction, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for ClientMetadata
        def ClientMetadata(value)
          dsl_attribute(:ClientMetadata, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for DesiredDeliveryMediums
        def DesiredDeliveryMediums(values)
          dsl_list_attribute(:DesiredDeliveryMediums, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for DesiredDeliveryMediums
        def DesiredDeliveryMedium(value, fn_if: nil)
          dsl_push_attribute(:DesiredDeliveryMediums, value, fn_if: fn_if)
        end

        #   @param [Boolean|JSONable] value
        #     The value to use for ForceAliasCreation
        def ForceAliasCreation(value)
          dsl_attribute(:ForceAliasCreation, value)
        end

        # @param [Array<AttributeType>|JSONable>] values
        #   The List of values to use for UserAttributes
        def UserAttributes(values)
          dsl_list_attribute(:UserAttributes, values)
        end

        #  @param [AttributeType|JSONable] value  Append value to the List
        #    The List of values to use for UserAttributes
        # @@overload UserAttribute(&block)
        # Append value to the List from block via instance eval of a new AttributeType
        def UserAttribute(value = nil, fn_if: nil, **value_hash, &block)
          dsl_push_attribute(:UserAttributes, value, fn_if: fn_if, attr_class: AttributeType, **value_hash, &block)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Cognito::UserPoolUser]
    def AWS_Cognito_UserPoolUser(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Cognito::UserPoolUser, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
