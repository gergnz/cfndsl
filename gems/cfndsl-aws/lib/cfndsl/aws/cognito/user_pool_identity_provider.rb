# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Cognito
      # Resource Type definition for AWS::Cognito::UserPoolIdentityProvider
      class UserPoolIdentityProvider < ResourceType
        #   @param [String|JSONable] value
        #     The value to use for ProviderName
        def ProviderName(value)
          dsl_attribute(:ProviderName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for UserPoolId
        def UserPoolId(value)
          dsl_attribute(:UserPoolId, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for AttributeMapping
        def AttributeMapping(value)
          dsl_attribute(:AttributeMapping, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for ProviderDetails
        def ProviderDetails(value)
          dsl_attribute(:ProviderDetails, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ProviderType
        def ProviderType(value)
          dsl_attribute(:ProviderType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for IdpIdentifiers
        def IdpIdentifiers(values)
          dsl_list_attribute(:IdpIdentifiers, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for IdpIdentifiers
        def IdpIdentifier(value, fn_if: nil)
          dsl_push_attribute(:IdpIdentifiers, value, fn_if: fn_if)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Cognito::UserPoolIdentityProvider]
    def AWS_Cognito_UserPoolIdentityProvider(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Cognito::UserPoolIdentityProvider, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
