# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Glue
      # Resource Type definition for AWS::Glue::Database
      class Database < ResourceType
        # Property Definition DatabaseInput
        class DatabaseInput < PropertyType
          #   @param [String|JSONable] value
          #     The value to use for LocationUri
          def LocationUri(value)
            dsl_attribute(:LocationUri, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Description
          def Description(value)
            dsl_attribute(:Description, value)
          end

          #   @param [Object|JSONable] value
          #     The value to use for Parameters
          def Parameters(value)
            dsl_attribute(:Parameters, value)
          end

          #   @param [String|JSONable] value
          #     The value to use for Name
          def Name(value)
            dsl_attribute(:Name, value)
          end
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [DatabaseInput|JSONable] value
        #     The value to use for DatabaseInput
        # @@overload DatabaseInput(&block)
        #   Set :DatabaseInput from block via instance eval of a new DatabaseInput
        def DatabaseInput(value = nil, **value_hash, &block)
          dsl_attribute(:DatabaseInput, value, attr_class: DatabaseInput, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     The value to use for CatalogId
        def CatalogId(value)
          dsl_attribute(:CatalogId, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Glue::Database]
    def AWS_Glue_Database(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Glue::Database, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
