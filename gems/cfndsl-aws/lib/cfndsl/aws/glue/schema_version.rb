# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Glue
      # This resource represents an individual schema version of a schema defined in Glue Schema Registry.
      # @see https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-glue.git
      class SchemaVersion < ResourceType
        # Identifier for the schema where the schema version will be created.
        class Schema < PropertyType
          #   @param [String|JSONable] value
          #     Amazon Resource Name for the Schema. This attribute can be used to uniquely represent the Schema.
          def SchemaArn(value)
            dsl_attribute(:SchemaArn, value)
          end

          #   @param [String|JSONable] value
          #     Name of the schema. This parameter requires RegistryName to be provided.
          def SchemaName(value)
            dsl_attribute(:SchemaName, value)
          end

          #   @param [String|JSONable] value
          #     Name of the registry to identify where the Schema is located.
          def RegistryName(value)
            dsl_attribute(:RegistryName, value)
          end
        end

        #   @param [Schema|JSONable] value
        #     The value to use for Schema
        # @@overload Schema(&block)
        #   Set :Schema from block via instance eval of a new Schema
        def Schema(value = nil, **value_hash, &block)
          dsl_attribute(:Schema, value, attr_class: Schema, **value_hash, &block)
        end

        #   @param [String|JSONable] value
        #     Complete definition of the schema in plain-text.
        def SchemaDefinition(value)
          dsl_attribute(:SchemaDefinition, value)
        end

        #   @param [String|JSONable] value
        #     Represents the version ID associated with the schema version.
        def VersionId(value)
          dsl_attribute(:VersionId, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Glue::SchemaVersion]
    def AWS_Glue_SchemaVersion(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Glue::SchemaVersion, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
