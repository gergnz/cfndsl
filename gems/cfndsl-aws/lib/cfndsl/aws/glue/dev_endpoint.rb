# frozen_string_literal: true

# WARNING ABOUT GENERATED CODE
#
# This file is generated by CfnDsl::Generate
#
# WARNING ABOUT GENERATED CODE
require 'cfndsl/cloudformation_template'
require 'cfndsl/types'

module CfnDsl
  module AWS
    module Glue
      # Resource Type definition for AWS::Glue::DevEndpoint
      class DevEndpoint < ResourceType
        #   @param [String|JSONable] value
        #     The value to use for ExtraJarsS3Path
        def ExtraJarsS3Path(value)
          dsl_attribute(:ExtraJarsS3Path, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for PublicKey
        def PublicKey(value)
          dsl_attribute(:PublicKey, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for NumberOfNodes
        def NumberOfNodes(value)
          dsl_attribute(:NumberOfNodes, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for Arguments
        def Arguments(value)
          dsl_attribute(:Arguments, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SubnetId
        def SubnetId(value)
          dsl_attribute(:SubnetId, value)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for PublicKeys
        def PublicKeys(value, fn_if: nil)
          dsl_push_attribute(:PublicKeys, value, fn_if: fn_if)
        end

        # @param [Array<String>|JSONable>] values
        #   The List of values to use for SecurityGroupIds
        def SecurityGroupIds(values)
          dsl_list_attribute(:SecurityGroupIds, values)
        end

        #  @param [String|JSONable] value  Append value to the List
        #    The List of values to use for SecurityGroupIds
        def SecurityGroupId(value, fn_if: nil)
          dsl_push_attribute(:SecurityGroupIds, value, fn_if: fn_if)
        end

        #   @param [String|JSONable] value
        #     The value to use for RoleArn
        def RoleArn(value)
          dsl_attribute(:RoleArn, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for WorkerType
        def WorkerType(value)
          dsl_attribute(:WorkerType, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for EndpointName
        def EndpointName(value)
          dsl_attribute(:EndpointName, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for GlueVersion
        def GlueVersion(value)
          dsl_attribute(:GlueVersion, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for ExtraPythonLibsS3Path
        def ExtraPythonLibsS3Path(value)
          dsl_attribute(:ExtraPythonLibsS3Path, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for SecurityConfiguration
        def SecurityConfiguration(value)
          dsl_attribute(:SecurityConfiguration, value)
        end

        #   @param [String|JSONable] value
        #     The value to use for Id
        def Id(value)
          dsl_attribute(:Id, value)
        end

        #   @param [Integer|JSONable] value
        #     The value to use for NumberOfWorkers
        def NumberOfWorkers(value)
          dsl_attribute(:NumberOfWorkers, value)
        end

        #   @param [Object|JSONable] value
        #     The value to use for Tags
        def Tags(value)
          dsl_attribute(:Tags, value)
        end
      end
    end
  end

  # rubocop:disable Style/Documentation
  class CloudFormationTemplate
    # @return [AWS::Glue::DevEndpoint]
    def AWS_Glue_DevEndpoint(logical_id, value = nil, &block)
      Resource(logical_id, value, attr_class: AWS::Glue::DevEndpoint, &block)
    end
  end

  # rubocop:enable Style/Documentation
end
